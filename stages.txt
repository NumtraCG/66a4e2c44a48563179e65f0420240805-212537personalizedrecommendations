[{"_id": "66a4e2c44a48563179e65f07", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/demographicsdatacolaberrypersonalized.csv", "in": [], "out": ["66a4e2c44a48563179e65f08"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "demographicsdatacolaberrypersonalized", "comment": "", "pipeline_id": "66a4e2c44a48563179e65f04", "sub_type": "HDFS", "stage_type": "source", "stage_attributes": {"url": "/FileStore/platform/uploadedSourceFiles/demographicsdatacolaberrypersonalized.csv", "filename": "demographicsdatacolaberrypersonalized.csv", "delimiter": ",", "file_type": "Delimeted", "dbfs_token": "", "dbfs_domain": "", "is_header": "Use Header Line", "domain": "http://172.31.59.158", "port": "40070", "dirPath": "/FileStore/platform", "server_url": "/nexusMax/NexusMaxPlatform/uploads/platform/"}, "status": "new", "position": {"x": -80, "y": 160}, "shape_attributes": {"image": {"refHeight": "100%", "xlinkHref": "assets/svg/source/hdfs-source.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 14, "fill": "#333333", "type": "source", "text": "demographicsdatacolaberrypersonalized", "slug": "hdfs", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"inherited": true, "checked": true, "field": "ClassName", "alias": "ClassName", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "ClassType", "alias": "ClassType", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "Education", "alias": "Education", "type": "String", "position": 2}, {"inherited": true, "checked": true, "field": "HouseholdIncome", "alias": "HouseholdIncome", "type": "String", "position": 3}, {"inherited": true, "checked": true, "field": "No  EnrollReason", "alias": "No  EnrollReason", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "Age", "alias": "Age", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "Gender", "alias": "Gender", "type": "String", "position": 6}, {"inherited": true, "checked": true, "field": "CountryOfOrgin", "alias": "CountryOfOrgin", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "JobRole", "alias": "JobRole", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "WhyChooseForCareerGoals", "alias": "WhyChooseForCareerGoals", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "Industry", "alias": "Industry", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "YrsOnJob", "alias": "YrsOnJob", "type": "numeric", "position": 11}, {"inherited": true, "checked": true, "field": "InformationConsumed", "alias": "InformationConsumed", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "NetPromotorScore", "alias": "NetPromotorScore", "type": "numeric", "position": 13}], "actual_schema": [{"inherited": true, "checked": true, "field": "ClassName", "alias": "ClassName", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "ClassType", "alias": "ClassType", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "Education", "alias": "Education", "type": "String", "position": 2}, {"inherited": true, "checked": true, "field": "HouseholdIncome", "alias": "HouseholdIncome", "type": "String", "position": 3}, {"inherited": true, "checked": true, "field": "No  EnrollReason", "alias": "No  EnrollReason", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "Age", "alias": "Age", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "Gender", "alias": "Gender", "type": "String", "position": 6}, {"inherited": true, "checked": true, "field": "CountryOfOrgin", "alias": "CountryOfOrgin", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "JobRole", "alias": "JobRole", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "WhyChooseForCareerGoals", "alias": "WhyChooseForCareerGoals", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "Industry", "alias": "Industry", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "YrsOnJob", "alias": "YrsOnJob", "type": "numeric", "position": 11}, {"inherited": true, "checked": true, "field": "InformationConsumed", "alias": "InformationConsumed", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "NetPromotorScore", "alias": "NetPromotorScore", "type": "numeric", "position": 13}], "selected_schema": [], "created_at": "2024-07-27 12:06:28.239000", "joinSchema": [], "updated_at": "2024-08-05 21:22:40.564000", "__v": 0, "stage_runningstate": "executed", "sampleData": [{"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ghana", "JobRole": "Partner", "WhyChooseForCareerGoals": " heard  success stories from friends who do not have IT skills but Colaberry trained them and are now IT professio Not applicablels ", "Industry": "Food and Beverages", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "I prefer not to specify", "CountryOfOrgin": "Nigeria", "JobRole": "None", "WhyChooseForCareerGoals": "None", "Industry": "None", "YrsOnJob": 0, "InformationConsumed": "None", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Partner", "WhyChooseForCareerGoals": "In the near future information technology is a new form of business growth that is my pla Not applicablend strong demand", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "info I found on google", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Currently unemployed", "WhyChooseForCareerGoals": "I did my research and trust that the knowledge is here ", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "The course content.", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Referred to you from a friend  ", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 4, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Real estate agent ", "WhyChooseForCareerGoals": "I would like to have an IT background to help complement what I am studying in college  Economics ", "Industry": "Real Estate", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Truck Driver", "WhyChooseForCareerGoals": "My friend went through the program and he has achieved success since that time And he felt that I could also achieve the same success", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Management  C Level", "WhyChooseForCareerGoals": "success story", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Researcher", "WhyChooseForCareerGoals": "I heard the testimonials and believe in them", "Industry": "Education", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "To improve my career", "Industry": "Education", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Not employed for now", "WhyChooseForCareerGoals": "l listened to success stories and l am at that point of trying to change my life to the better", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I was informed of the prompt assistance help with securing jobs", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "referral from friends", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "None", "ClassType": "None", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ghana", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Better job", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Partner", "WhyChooseForCareerGoals": "I wanted to work from home", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "I want to work by IT database", "Industry": "Education", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Other", "WhyChooseForCareerGoals": "I have a couple of friends going through classes at the moment and a recent graduate who have all given me motivatio Not applicablel information on how to build upon my future", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Intern", "WhyChooseForCareerGoals": "The great feedbacks I got from my closest friends", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I believe in skill set that Ill acquire with the program", "Industry": "Food and Beverages", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard that colaberry is the perfect BOOTCAMP center on data science A Not applicablelytics field and also helps until getting a job ", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I referred by a friend who explained the advantages ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "I have heard from friends who have taken classes great things about your school and I wanted to do that for myself and better my currier", "Industry": "I am currently not employed", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "house wife", "WhyChooseForCareerGoals": "  All the best  feedback from friends ", "Industry": "I am currently not employed", "YrsOnJob": 10, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "Because it is skill oriented ", "Industry": "Entertainment and Leisure", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  JUNE 01 2024 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "It was recommended to me", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Management  C Level", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "None", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Manager", "WhyChooseForCareerGoals": "I need something that I can do while working my current job", "Industry": "Food and Beverages", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "job", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because it is the best data a Not applicablelytics school ", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "positive reviews of the school", "Industry": "Transportation and Delivery", "YrsOnJob": 10, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jul 14 2018 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Database Administrator", "WhyChooseForCareerGoals": "Your school is good a teaching data a Not applicablelytics", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "unemployed", "WhyChooseForCareerGoals": "I heard from my friend that it is one of the best", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because i saw the success stories", "Industry": "Nonprofit", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "WORDS FROM FRIEND", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "heard good reports about the school", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I HEARD GREAT NEWS FROM A  FRIEND", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "For Money", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "pharmacy technician", "WhyChooseForCareerGoals": "learning proces is good  ", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "None", "ClassType": "None", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "I wanted an instructor led ML course", "Industry": "Business Support and Logistics", "YrsOnJob": 7, "InformationConsumed": "None", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "I witnessed the success story of a family member who is a Not applicablelumni of Colaberry She is definitely living the American Dream I was recently let go at my job So this was absolutely the right timing I enrolled", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "delivery", "WhyChooseForCareerGoals": "suggestion from afriend", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I love the fact that colberry is online and flexible payment options are available the fact that colaberry provides you with a one on one mentor to help you through the course work on your resume and help you find a job and still provide mentorship and assistance when you need help at your new job after the course", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "it was cheaper and influence from friends that went to your school", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": " I have seen many practical results which are graduates from your courses", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Owner", "WhyChooseForCareerGoals": "I hear noting but success from all the people I talk to that attended  Colaberry  ", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I have been searching for a school that are excel at data A Not applicablelytics and based on the information I got from friends Colaberry is the best place to equip myself in the area of data a Not applicablelytics ", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "manufacturing technician", "WhyChooseForCareerGoals": "None", "Industry": "Manufacturing", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "Convenience of online learning  and reputation ", "Industry": "Education", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jan 6 2018 IRVING", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "F  or    mer Student", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I have heard good things about the school from a friend", "Industry": "Nonprofit", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Because of the success stories attached to the school", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Good reviews from family members", "Industry": "Government", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "None", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Highly Recommended by a Friend", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "GOOD REVIEW ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "success stories heard from my friends and people around me ", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Rwanda", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "The entire program structure goes beyond the ordi Not applicablery concepts of many educatio Not applicablel Institutions", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Neighbor turned friend    referral ", "Industry": "Insurance", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Cameroon", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because l have a friend who got his certificate here and he now has a great stable job ", "Industry": "Insurance", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Statistics and training", "Industry": "Business Support and Logistics", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Working a little from home", "WhyChooseForCareerGoals": "For the fact that it is the best place that gets me ready for a job", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Sudan", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "My brother in  law attended years ago and hes making great money", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "My friend told me that Colaberry is a good school for data a Not applicablelytics", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "I do not have awork", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "None", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "It was the few interactions with the staff that seemed very genuine. I get the sense that everyone at Colaberry wants to see you become the next success st  or    y and thats exactly what I want. ", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Preparing to re enter the workforce after physical therapy due to an auto accident.", "WhyChooseForCareerGoals": "After considering other options I chose Colaberry because of the work that they have done with military veterans It lets me know that with hard work and focus I ca Not applicablechieve my goal of entering the IT field just as other veterans have done", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Rwanda", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because couple friends told  me about it", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Independent contractor", "WhyChooseForCareerGoals": "very good curriculum ", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because I heard a lot from my friend and his friends who got their job after taking this program", "Industry": "Utilities Energy and Extraction", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "small business entrepreneur", "WhyChooseForCareerGoals": "Familiar faces and the story behind how it all began", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 18 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Feedback from f  or    mer students", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Togo", "JobRole": "Other", "WhyChooseForCareerGoals": "Good feedback from former students", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Driver", "WhyChooseForCareerGoals": "None", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 6}, {"ClassName": "SQLBI Bootcamp  Mar 18 2017 PLANO TX", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Transportation and Delivery", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Students success Stories", "Industry": "Nonprofit", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard a good story about Colaberry", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Other", "WhyChooseForCareerGoals": "To help me understand my courses and further my career", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "info I found on google", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Currently unemployed", "WhyChooseForCareerGoals": "I did my research and trust that the knowledge is here ", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Intern", "WhyChooseForCareerGoals": "heard of many successful stories and the i liked the way of teaching and homeworks", "Industry": "I am currently not employed", "YrsOnJob": 7, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  May 22 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "seemed easy and understandable", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "A friend did the program and loved it I have been wanting to do something similar to this but never knew where to start", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "I want better life.", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I have done some research and data a Not applicablelyst is what I want", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Professio Not applicablelism and high level of experience in problem solving and delivery of required knowledge", "Industry": "Manufacturing", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP   July 13 2019 PLANO", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Success stories", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Structure and help with resume job search", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "None", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "South Sudan", "JobRole": "PARALEGAL", "WhyChooseForCareerGoals": "I chose Colaberry after speaking to a friend whose currently been enrolled for about a month now She shared her experience with me and so far I am impressed I think this school will give me a foot in the door to help me reach my career goal", "Industry": "Business Support and Logistics", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Because I to have a job in IT field", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Success rate", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  Jul 08 2017 PLANO", "ClassType": "Live In  Person", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "friends were there ", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  June 1  2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Speaking to a friend", "Industry": "Insurance", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Tax Preparer", "WhyChooseForCareerGoals": "None", "Industry": "None", "YrsOnJob": 0, "InformationConsumed": "None", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Cameroon", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because I have two close friends who graduated from your school they are working from home and are making good money", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "Great reviews from past students", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 18 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Its well structured and has a good reputation for job placement", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Was referred to by a former studient ", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JULY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "A FRIEND TOLD ME ABOUT THE COURSE", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "REFERRAL FROM CURRENT STUDENT   PAULINE KAMERE", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I was looking for a career to start working towards", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "what people say", "Industry": "Manufacturing", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS  JUNE 01 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "career desires and success stories from people who went through colaberry and their lives changed positively", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "best reviews", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Independent Contractor;Process Server", "WhyChooseForCareerGoals": "We are headed into the digital world if I MAY say everything today you can purchase at the convenience of your device I figured MAYbe it wouldnt hurt to give this a try to be Familiar with technology and turn this occupation into a career", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Training and job opportunities", "Industry": "Business Support and Logistics", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Uganda", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Recommendations from friends", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Due to knowing someone perso Not applicablelly who attended and was successful showed the goal was obtai Not applicableble and tangible as long as i stayed determined ", "Industry": "Insurance", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "None", "ClassType": "None", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "to enhance my skills and knowledge in IT Field ", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Manager", "WhyChooseForCareerGoals": "better pay", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Longer Facebook Posts", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I have heard just extraordi Not applicablery reviews about this establishment and I might want to go to this foundation to future my instruction", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "None", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Veteran assistance", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Vetera Not applicablessistance and job placement assistance", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 10, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "reports from alumni", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "Data Analytics I with MS SQL Server BI  Mar 10 2018 PLANO", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I know someone who completed the course and heard great things about the program", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Webinars", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Was motivated about the successes of the other students", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "stay at home mom", "WhyChooseForCareerGoals": "To advance career", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "GOOD REFERRAL", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Webinars", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard many students get a good paying job and i want to part of it too ", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "SQLBI Bootcamp  May 22 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Referral ", "Industry": "Finance and Financial Services", "YrsOnJob": 10, "InformationConsumed": "None", "NetPromotorScore": 5}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jan 13 2018 PLANO", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "because i hered that is the better choise in here where i live and i proved what i hered ", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "Data Analytics I with MS SQL Server BI  Sep 8 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Other", "WhyChooseForCareerGoals": "To be fi Not applicablencially independent", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Ive seen how it has changed lives", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "60", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Insurance Adjuster Realtor", "WhyChooseForCareerGoals": "The school normalizes data a Not applicablelytics i Not applicableway that has one thinking it is relatable to every business We must simply put in the time to learn its format and techniques ", "Industry": "Insurance", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Transportation and Delivery", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "Studied and friends recommended me", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Correctional officer", "WhyChooseForCareerGoals": "Practical application", "Industry": "Government", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Because I was highly recommended to the school by my friend who graduated from your program successfully", "Industry": "Insurance", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I wanted a career change into the IT business and Colaberry i Not applicableddition to being in the same city where i live it came in on top in my research ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "alumni story", "Industry": "Advertising and MARCHketing", "YrsOnJob": 2, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 18 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Referred from a friend of friend that he knew took the course and made a career change  He is now making really good money just starting out  ", "Industry": "Insurance", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "Recommendation from friend", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 4}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "Owner", "WhyChooseForCareerGoals": "great value for money and time", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Job improvement and salary", "Industry": "Business Support and Logistics", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Advertising and MARCHketing", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "Success story from a friend", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "BI BootCamp  July 23rd 2016 Plano TX", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "great BOOTCAMP curriculum ", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Intern", "WhyChooseForCareerGoals": "Referred by a friend", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  May 22 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Volunteer", "WhyChooseForCareerGoals": "interesting", "Industry": "Business Support and Logistics", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "I like how you guys help your students eve Not applicablefter they graduate ", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Manager", "WhyChooseForCareerGoals": "I heard that it was hands on training supported with videos which was my preferred way of learning", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "Heard you have a proven track record of successfully training and helping students succeed ", "Industry": "I am currently not employed", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "Module and tutorial o Not applicablece a week", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "its growing day by day", "Industry": "Retail and Consumer Durables", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "None", "Industry": "Advertising and MARCHketing", "YrsOnJob": 10, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Its rated very highly", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Researcher", "WhyChooseForCareerGoals": "It seems simple to communicate", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "It comes highly recommended", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "My friend had provided good feedback about the program", "Industry": "Education", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Senior Manager", "WhyChooseForCareerGoals": "Ive heard from others who have taken the course how it changed their life", "Industry": "Automotive", "YrsOnJob": 7, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "IPBC DIRECT SIGN UP  2024", "ClassType": "Self Paced Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "TO improve quality of life", "Industry": "Retail and Consumer Durables", "YrsOnJob": 10, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Inf  or    mation you found on Facebook", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I read that Colaberry has good reviews so want to see and try it myself with a leap of faith", "Industry": "Insurance", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "Colaberry is The nearest school I know ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "currently not working", "WhyChooseForCareerGoals": "the referral spoke highly of the school and the programme", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Manager", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Burundi", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "The good reputation of the school", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Speed Cost Track Record", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "GOOD SUCCESS STORIES", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "None", "Industry": "Food and Beverages", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Reaching my fi Not applicablencial goals in my current career will be very challenging", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "A friend highly recommended your school ", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Team Lead", "WhyChooseForCareerGoals": " testimony of a friend", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "A coworker informed me about the program and I was interested in improving myself as well as learning skills that will prepare me for the future ", "Industry": "Nonprofit", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I enjoyed the open house and I was encouraged by a friend", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I received encouragement from the cousin of a friend who completed the data a Not applicablelytics BOOTCAMP course", "Industry": "Education", "YrsOnJob": 10, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because of the positive feedback i have received", "Industry": "Finance and Financial Services", "YrsOnJob": 10, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Referral from a trusted source ", "Industry": "Utilities Energy and Extraction", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Food and Beverages", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Alumni testimony and success story ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "student", "WhyChooseForCareerGoals": "to improve my life", "Industry": "Agriculture", "YrsOnJob": 1, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "good rewiews", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "curriculum", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "The curriculum is what stood out to me", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Independent contractor   health care", "WhyChooseForCareerGoals": "It was recommended by a friend who is in the IT world", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 9}, {"ClassName": "BI BootCamp  June 14 2014 Richardson", "ClassType": "Live In  Person", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Enhance career in short period of time by learning industry required skills", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Stay home mom and started small business name    Days LLC", "WhyChooseForCareerGoals": "I heard good things about school and my friend got job too", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "It has the best  program and boot camp structure as per advice from a Not applicablelumni its can be done online with flexible schedules Military scholarship and generally welcoming and helpful environment when taking the courses", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "yes", "Industry": "Business Support and Logistics", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Zambia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Affordability", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "I was referred by a friend after doing my research he really did recommend this school", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "good goodwill", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "stay at home mom", "WhyChooseForCareerGoals": "to improve myself and change my career", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "Heard very positive review Class time matches my schedule ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "senior analyst", "WhyChooseForCareerGoals": "I heard of only success stories", "Industry": "None", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "SELF EMPLOYED", "WhyChooseForCareerGoals": "TO IMPROVE AND CHANGE MY SELF FOR BETTER CEREER", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Manager", "WhyChooseForCareerGoals": " Not applicable", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I chose your school because traditio Not applicablel education in the US is failing kids flat There is a lot of skills gap that traditio Not applicablel    years universities even IVY league one cant fix Colaberry is better than coursera", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Lots of success stories ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "None", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Contractor", "WhyChooseForCareerGoals": "Well organize and oriented details ", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "ClassType": "Live In  Person", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "interview readiness", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "cause of the success stories from friends", "Industry": "Construction Machinery and Homes", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "Other", "WhyChooseForCareerGoals": "On the job training and assisting with job hiring", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "Data Analytics I with MS SQL Server BI  Mar 10 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "My cousin recommended it; its a worthwhile career", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Cote d'Ivoire", "JobRole": "Manager", "WhyChooseForCareerGoals": "Referral ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "Recommended", "Industry": "Government", "YrsOnJob": 2, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Home Maker", "WhyChooseForCareerGoals": "Teaching process", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Real Estate", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I feel it will bring me right where I want to be  and other colleges like universities would just put me in debt  I also love that the school is hands on", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Teacher", "WhyChooseForCareerGoals": "None", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Manager", "WhyChooseForCareerGoals": "Friend referral", "Industry": "Transportation and Delivery", "YrsOnJob": 10, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "because i believe it will help me get a deceit job", "Industry": "Retail and Consumer Durables", "YrsOnJob": 7, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Insurance", "YrsOnJob": 1, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Have read more about the reviews ", "Industry": "Food and Beverages", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Accountant", "WhyChooseForCareerGoals": "None", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "A friends recommendation ", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Senior Manager", "WhyChooseForCareerGoals": " Not applicable", "Industry": "Automotive", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "College Student", "WhyChooseForCareerGoals": "I am hoping to gain experience and hopefully a well paying job afterwards", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Zimbabwe", "JobRole": "Other", "WhyChooseForCareerGoals": "I love the school curriculum and how the studies are structured Also success stories from friends ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "I wanted to change career as I just moved to America from Ca Not applicableda and this seem to be the best choice as my family friend spoke highly of this school ", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Other", "WhyChooseForCareerGoals": "Because colaberry is a reference now to train people and this peoples get a jobs and change live that my goal ", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Hearing about success stories from Colaberry alumni", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Accountant", "WhyChooseForCareerGoals": "The success stories of people who have been through it", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Owner", "WhyChooseForCareerGoals": "because there`s endless opportunities to develop your career ", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Manager", "WhyChooseForCareerGoals": "Technique used for job placement", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Cameroon", "JobRole": "Other", "WhyChooseForCareerGoals": "because of good testimony that my friend gives to me", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because your about helping folks and I couldnt afford $  that the other schools were asking me to pay Also my friend said many great things about your support team ", "Industry": "Government", "YrsOnJob": 2, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Driver ", "WhyChooseForCareerGoals": "My goal career is to work from home", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Manager", "WhyChooseForCareerGoals": "I heard the testimony of my friend ", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Partner", "WhyChooseForCareerGoals": "Perso Not applicablel testimony from a friend and getting more information from customer service", "Industry": "Manufacturing", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Impressive testimonies from a Not applicablelumni", "Industry": "Manufacturing", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "BI BootCamp  Nov 7 2015 Online", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "the way tuition is paid. its a game changer to older school models.", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I made some poor decisions when i was younger and didnt finish school I needed a path out of the restaurant industry ", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 30 2019 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "Because of the testimonials i heard ", "Industry": "Business Support and Logistics", "YrsOnJob": 1, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "working independently working remote", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Recommendation", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Other", "WhyChooseForCareerGoals": "BECAUSE OF SUCCESS STORIES", "Industry": "I am currently not employed", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Convenient relevant and aligns with new job role", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because I can et more support from the team", "Industry": "Manufacturing", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "India", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Alumni referral", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Army", "WhyChooseForCareerGoals": "Career", "Industry": "Government", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Other", "WhyChooseForCareerGoals": "COURSE LENGTH COMPARED TO TRADITIO Not applicableL COLLEGES", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I talked to a Family member who is attending your course and she gave me very good feedback ", "Industry": "Entertainment and Leisure", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "n  or  a", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "texas", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 0}, {"ClassName": "None", "ClassType": "None", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "reputation precedes ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "SQLBI Bootcamp  Mar 18 2017 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "By interacting with alumni and see real change", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "SQL python data a Not applicablelytics", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 10, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Government", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "MARCHketing Director", "WhyChooseForCareerGoals": "It is very structured and it operates a group that is a big motivation", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Service Desk Analyst", "WhyChooseForCareerGoals": "Heard proper guidance and make the student do it ", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "My friend recommended Colaberry", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Senior Manager", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Did not attend school", "HouseholdIncome": "  ", "No  EnrollReason": "Info you found on LinkedIn", "Age": "21", "Gender": "I prefer not to specify", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "It will help me advance my career ", "Industry": "Advertising and MARCHketing", "YrsOnJob": 1, "InformationConsumed": "Webinars", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Sierra Leone", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": " Not applicable", "Industry": "Finance and Financial Services", "YrsOnJob": 0, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Partner", "WhyChooseForCareerGoals": "I was told collabery is the place to be if you  need to succeed in career change", "Industry": "Food and Beverages", "YrsOnJob": 4, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "None", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "Your teaching method It is career based", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "60", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "Manager", "WhyChooseForCareerGoals": "THE WORLD CHANGING GOING DIGITAL AND I NEED KNOWLEDGE IN DIGITAL WORLD", "Industry": "Business Support and Logistics", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Volunteer", "WhyChooseForCareerGoals": "I have heard much about your teaching", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  Mar 18 2017 PLANO TX", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Help getting job after courses completed", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Help with finding job afterwards", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Rwanda", "JobRole": "Other", "WhyChooseForCareerGoals": "My friend went to this school and she had a great experience", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Dispatcher", "WhyChooseForCareerGoals": "My friends learned in Colaberry are a life testimony seeing them reach their goal really motivated me go forward and i hope to see my self there too", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Driver ", "WhyChooseForCareerGoals": "My goal career is to work from home", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "based on success story from another person", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Configuration Analyst II", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Commission employee ", "WhyChooseForCareerGoals": "Because I wanted hands on training that was very to the point In college everything took longer than it should of and classes that could have been done in weeks if structured properly took a semester or even multiple semesters Colaberrys program is much shorter and allows me to learn the tools and knowledge faster ", "Industry": "Construction Machinery and Homes", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Encouragement from a friend already in class and positive testimonies from YouTube", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Cameroon", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "My husband recommended", "Industry": "Insurance", "YrsOnJob": 1, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Business Analyst ", "WhyChooseForCareerGoals": "I hear good stories from a fiend regarding the training program and possible job replacement opportunity ", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "ClassType": "Live In  Person", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Grate reviews", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "referral from previous student", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Congo Democratic Republic of the", "JobRole": "Partner", "WhyChooseForCareerGoals": "want to lear Not applicablend your class time", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "i choose colaberry because i will acquire the industry oriented knowledge and skills so that i can hit the ground running", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "referral from friends", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Career goal", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 4, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  June 1  2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Success stories and I know someone who attended", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "Friend referred more opportunity ", "Industry": "Retail and Consumer Durables", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "China", "JobRole": "Analyst", "WhyChooseForCareerGoals": "None", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "   To fill the gap in knowledge what the employer needs and what I have    Communication challenges specially in interviews", "Industry": "Government", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "ClassType": "Live In  Person", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": " i was really impressed my friend who took his career in colliery ", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "A friend convinced me of its benefits", "Industry": "Construction Machinery and Homes", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Morocco", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "For better job position ", "Industry": "Entertainment and Leisure", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Correctional officer", "WhyChooseForCareerGoals": "my expectation to succeed", "Industry": "Government", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "Cause of the stories I heard ", "Industry": "Food and Beverages", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard from one of my friend  former student of Colaberry  it is a good school ", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Student", "WhyChooseForCareerGoals": "Because my friend graduated your class and now is living a Not applicablemazing life with well paid job He inspired me to join the class ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Perso Not applicablel experience from a close friend", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  May 22 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I JUST HEARD A GOOD THINGS ABOUT THE SCHOOL", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Webinars", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "A FRIEND INTRODUCED ME", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "None", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Referred by a successful Alumni I want to be like him He is doing great", "Industry": "Business Support and Logistics", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "None", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard that colaberry is the perfect BOOTCAMP center on data science A Not applicablelytics field and also helps until getting a job ", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Mexico", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Recommendation ", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Friend", "Industry": "Food and Beverages", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "I prefer not to specify", "CountryOfOrgin": "Nigeria", "JobRole": "unemployed", "WhyChooseForCareerGoals": "hands  on", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Longer Facebook Posts", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "A friend convinced me", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "I want to pursue my desire to become involved in Data Science as i have worked as a database a Not applicablelyst for some time in the past And also to gain knowledge to have a professio Not applicablel path to support my self and my family", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "Success Stories Scholarship", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "None", "ClassType": "None", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Still deciding  Heard from friend that there are good results ", "Industry": "Construction Machinery and Homes", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Owner", "WhyChooseForCareerGoals": "Because of the high level of job placement", "Industry": "Entertainment and Leisure", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Self employed", "WhyChooseForCareerGoals": "I want to get the skill to functio Not applicables a Not applicable Not applicablelyst", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "i like that it offers an online program", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Good curriculum  Good job placements  ", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "None", "ClassType": "None", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Management  C Level", "WhyChooseForCareerGoals": "Referral", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 4, "InformationConsumed": "Webinars", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "home maker", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Friend referral", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 18 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "per testimony you help with employment ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Manager", "WhyChooseForCareerGoals": "I  heard good recommendations about the school", "Industry": "Advertising and MARCHketing", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Utilities Energy and Extraction", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because I want to elevate my career goals and opportunities and this seems like a legit and good place to achieve that  ", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "its has a track record of success and career placements", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Rwanda", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "seen other people make it", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Congo Democratic Republic of the", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "I love IT and a want to get some experience in this industry", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "BI BootCamp  Jan 3 2015 Richardson TX", "ClassType": "Live In  Person", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "improve my career and income", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Testimonials from Past Students outlining how their  experience at Colaberry contributed to their career success.", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I am doing a career switch to Data A Not applicablelytics I am looking for a school that will help me improve my data a Not applicablelysis skills and prepare me to ace the job interviews", "Industry": "Automotive", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because it convenient for me  ", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "60", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "self employed", "WhyChooseForCareerGoals": "I have been told that it was a good school and it has lots of information", "Industry": "Entertainment and Leisure", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  July 20  2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "a great referral from a friend ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "India", "JobRole": "unemployeed", "WhyChooseForCareerGoals": "IDK ", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Driver ", "WhyChooseForCareerGoals": "My goal career is to work from home", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Great review from a friend", "Industry": "Real Estate", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Success stories", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Uganda", "JobRole": "Other", "WhyChooseForCareerGoals": "Gain new skill sets", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I picked this school because of the success stories I heard from alumni students", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "friends results", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Because it was the first school I saw that not only offers continued education for professio Not applicablels but also for people who have no prior IT experience I Not applicableddition you make it affordable for people to get this education by providing payment plans early bird specials etc  Fi Not applicablelly the job placement aspect of it along with the portfolio creation is what made this most appealing You are really helping your students not like some of the other places that ripped people off back in the late     s early   s ", "Industry": "Finance and Financial Services", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because of the job guarantee ", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 07 2019 PLANO", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "matches the current IT demand field", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "None", "ClassType": "None", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "none", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Brewer", "WhyChooseForCareerGoals": "It seems like the alumni network is a valid way to actually get a job  Seems like a lot of code schools just want your money", "Industry": "Food and Beverages", "YrsOnJob": 2, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "BECAUSE YOUR PROGRAM HAS WHAT I NEED TO ACHIEVE MY LONG TERM CAREER IN IT", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "career change", "Industry": "Automotive", "YrsOnJob": 7, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Uganda", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "friend", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Close friends have been successful using this program", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Other", "WhyChooseForCareerGoals": "Success stories", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "None", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "None", "WhyChooseForCareerGoals": "None", "Industry": "None", "YrsOnJob": 0, "InformationConsumed": "None", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "To have a better life to make more money", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Other", "WhyChooseForCareerGoals": "mentorship program", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "None", "ClassType": "None", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Good reviews", "Industry": "Manufacturing", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Full Scholarship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Tunisia", "JobRole": "Other", "WhyChooseForCareerGoals": "FULL SCHOLARSHIP", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Webinars", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Zimbabwe", "JobRole": "Other", "WhyChooseForCareerGoals": "I felt the curriculum would help me become a data engineer  ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "Someone I know had completed a course through Colaberry", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Ive seen others success with your program", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Housemaker", "WhyChooseForCareerGoals": "It helps individual to build up his her career in the IT sector ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I want to change careers and look for something long term with job security", "Industry": "Insurance", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "because of your methodology ", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard about people successful ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jul 14 2018 PLANO", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "change of career", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Longer Facebook Posts", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "success stories of cola berry all over the country", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "SHORT TIME AND IPBC", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "because of my friend who said good things about your school ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Career change and I would like to explore the IT industry ", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard from friend Colaberry is best school", "Industry": "Finance and Financial Services", "YrsOnJob": 10, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  May 22 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "independent contractor", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "None", "NetPromotorScore": 10}, {"ClassName": "Data Analytics I with MS SQL Server BI  Sep 8 2018 IRVING", "ClassType": "Live In  Person", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "21", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "They have helped my cousi Not applicables well as others  get into a better position So I believe they will do the same for me", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "To improve my carrier and life standard", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "get knowledge  and earn money", "Industry": "Advertising and MARCHketing", "YrsOnJob": 2, "InformationConsumed": "Longer Facebook Posts", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because my friend studied in your school and he is now successful", "Industry": "Food and Beverages", "YrsOnJob": 1, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "from freinds", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Partner", "WhyChooseForCareerGoals": "Career Shifting I choose this school due to a former student graduating and landing a solid job with an income increase", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard all good news about Colaberry the friends went there talks about it a lot and they suggested me to register and learn ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Not working", "WhyChooseForCareerGoals": "Colaberry made a huge difference in my life a few years ago", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "60", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "The short answer is that you offered me unbelievable fi Not applicablencial help And you are offering a lucrative course data a Not applicablelytics ", "Industry": "Insurance", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Reputatio Not applicablend success stories from Alumni and more so people I know perso Not applicablelly", "Industry": "Manufacturing", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "A friend told me about it", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Independent Contractor Taxi Driver ", "WhyChooseForCareerGoals": "I believe Colaberry is one of the best schools in technology field  ", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "TO GET KNOWLEDGE ON THE IT WORLD", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "to upgrade my career", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 7}, {"ClassName": "None", "ClassType": "None", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Owner", "WhyChooseForCareerGoals": "Because of the good reviews ", "Industry": "Education", "YrsOnJob": 4, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JUNE 01 2024 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Senior Manager", "WhyChooseForCareerGoals": "Referrals from close Friends and how it has changed their lives", "Industry": "Retail and Consumer Durables", "YrsOnJob": 7, "InformationConsumed": "Webinars", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 07 2019 PLANO", "ClassType": "Live In  Person", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "improve my career and income", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jul 14 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": " Not applicable", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Webinars", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "India", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Alumni referral", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Cote d'Ivoire", "JobRole": "Self employee computer technician", "WhyChooseForCareerGoals": "I chose Colaberry to help reach my career because I heard a lot of good from people who took class with the school", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Worked in the past in IT. Current home maker.", "WhyChooseForCareerGoals": "I have a friend who successfully completed the course and she suggested that it was a good option if I have to get into the IT job MARCHket", "Industry": "I am currently not employed", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Manager", "WhyChooseForCareerGoals": "Colleague told me", "Industry": "Real Estate", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "recomended by a friend", "Industry": "Entertainment and Leisure", "YrsOnJob": 10, "InformationConsumed": "None", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Flexibility and overall sense of I want you to succeed that I felt from the site and w  or    d  of  mout.", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Perso Not applicablel recommendation from a trust worthy friend and a desire to move into a more applicable growing industry while learning new skills that I can one day use to help others ", "Industry": "Insurance", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "unemployed", "WhyChooseForCareerGoals": "referred by a friend", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "None", "YrsOnJob": 10, "InformationConsumed": "None", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  Jul 08 2017 PLANO", "ClassType": "Live In  Person", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ghana", "JobRole": "Intern", "WhyChooseForCareerGoals": "I choose colaberry because i wanted a change in my life and that of my Family", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Because of the practical training approach to deliver graduates who are ready for the job MARCHket", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "Data Analytics I with MS SQL Server BI  Sep 15 2018 PLANO", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Inf  or    mation you found on Facebook", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Food and Beverages", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "Heard good things about the program from a former student I was especially motivated by the job preparatio Not applicablend support aspect of the Colaberry program", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I was inspired by a friend who also attended Colaberry ", "Industry": "Food and Beverages", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Database admin", "WhyChooseForCareerGoals": "Strong reference from a friend ", "Industry": "Nonprofit", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "None", "WhyChooseForCareerGoals": "Because it seems interesting and I heard theres a good future in it", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "flexibility of training", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Because the success story associated with it", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I came to know that Colaberry is the best place to be Data Scientist ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Healthcare   Ct Technologist", "WhyChooseForCareerGoals": "referral", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 6}, {"ClassName": "None", "ClassType": "None", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Partner", "WhyChooseForCareerGoals": "because of the good reviews and the content", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "The fact that I can learn new skill i Not applicableshort period a time", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "Data Analytics I with MS SQL Server BI  Nov 17 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Positive feedback from alumni", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because it seems that I didnt have anyone guide me or take interest in my career Based upon the great reviews  I was convinced that this is what I needed", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "I like IT", "Industry": "Insurance", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "BI BootCamp  Feb 22 2014 Richardson", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I have hear success stories from former students and the guidance provided to obtai Not applicablejob is not really found with other schools", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 4, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "A friend introduced it to me and I listened to the success stories from the site", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Transitioning Veteran", "WhyChooseForCareerGoals": "The Data A Not applicablelytics focus program the reviews on course report the dates and times for the program and the military scholarship", "Industry": "Government", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": " Not applicable", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Webinars", "NetPromotorScore": 7}, {"ClassName": "Data Analytics I with MS SQL Server BI  Mar 10 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ghana", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Previous student", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I have a fried who is currently in Colaberry and also heard of some success Stories", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Medical technician", "WhyChooseForCareerGoals": "Because I had a lot of positive feedback about the school ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "I prefer not to specify", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I know people who went through the program and are doing well", "Industry": "Finance and Financial Services", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "home maker", "WhyChooseForCareerGoals": "To learn data tools ", "Industry": "I am currently not employed", "YrsOnJob": 10, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "60", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Timing", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Structure and help with resume job search", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "Good reputation from the few people i have interreacted with over the few months ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Webinars", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "independent ", "WhyChooseForCareerGoals": "alumni", "Industry": "Transportation and Delivery", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Colaberry gets straight to the point If I was to choose a major in the same field at a university it would take me longer", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "It works", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "yes", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "BI BootCamp  Nov 7 2015 Online", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "India", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I took that Colaberry as one of my friend told me about it and one day we went to Boston MA joined the class and it is now being my career goal because I have a dream to work in this field since I was high school ", "Industry": "Manufacturing", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "i heard success stories", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Manager", "WhyChooseForCareerGoals": "None", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Webinars", "NetPromotorScore": 8}, {"ClassName": "Data Analytics I with MS SQL Server BI  May 5 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Zimbabwe", "JobRole": "RN", "WhyChooseForCareerGoals": "Friend", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I trusted that the information shared Colaberry Alumin shared with me was credible", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "That colabery would fulfil dreams ", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Currently i am unemployed", "WhyChooseForCareerGoals": "i hear about colaberry a lot of good things the school is very supportive ", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Manager", "WhyChooseForCareerGoals": "Assistance is job placement", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "Colaberry will help me get a carrier path The tuition is also affordable", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Zimbabwe", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "reviews on social media", "Industry": "Food and Beverages", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Volunteer", "WhyChooseForCareerGoals": "Achieve a new career", "Industry": "Education", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "I prefer not to specify", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "Heard good things about Colaberry from friends", "Industry": "Government", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "Its short term training and well known", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "Duration of courses and class", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "None", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "HAVE HEARD A LOT OF GOOD FEEDBACK ABOUT COLABBERY", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "None", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Knowing a couple of people who have successfully completed the course and have gotten placed Seeing the way their lives have changed inspired me to do something more with my life and career!", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Senior Manager", "WhyChooseForCareerGoals": "I have two cousins that graduated from this program", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Because of the testimonies online about the particular school program", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Other", "WhyChooseForCareerGoals": "I have heard so many people are doing better after completing SQL from Colaberry That makes me interested", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I have heard good things", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Burundi", "JobRole": "Owner", "WhyChooseForCareerGoals": "it has a good reputatio Not applicablend i loved the way you take care of your students untill they are good to go for jobd", "Industry": "Manufacturing", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "None", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Partner", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 4, "InformationConsumed": "Webinars", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Referral", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "It helped a friend of mine reach his goals", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Manager", "WhyChooseForCareerGoals": "Provided a scholarship opportunity", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "na", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "None", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "It was recommended by a family member who knows someone that completed the course It came highly recommended", "Industry": "Business Support and Logistics", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Customer Service Representative", "WhyChooseForCareerGoals": "Good Reputation ", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "The school has a great reputatio Not applicablend the goal is to help people wi Not applicablejob as long as one puts in the work I know its a guarantee", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Sudan", "JobRole": "Manager", "WhyChooseForCareerGoals": "referral feedback about job hunting ", "Industry": "Business Support and Logistics", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Full time Student", "WhyChooseForCareerGoals": "I heard it was the quickest place to get your data a Not applicablelytics diploma degree and thats what I needed in my life at that point in time So here I am", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Diversity", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "i want to lear Not applicablend add valuable skill", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Partner", "WhyChooseForCareerGoals": "success story", "Industry": "Construction Machinery and Homes", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Seeing results ", "Industry": "Manufacturing", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 9}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Was a Financial Analyst currently out of Job", "WhyChooseForCareerGoals": "THE TESTIMONIALS OF PAST STUDENT", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Canada", "JobRole": "Management  C Level", "WhyChooseForCareerGoals": "A referral from a friend", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  June 1  2019 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Individuals who had gone through the course and shared their st  or    ies.", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Had good reviews and people had their stories to share", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "peoples success st  or    ies", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "nurse", "WhyChooseForCareerGoals": "everyone i talked to referred me to this school", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "None", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "no", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ghana", "JobRole": "Certified nurses aide ", "WhyChooseForCareerGoals": "A friend recommended it to me", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Inf  or    mation I found from friend.", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Yes ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "The reviews and testimonies", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jul 14 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "60", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "It was the only opportunity i had", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Having got inf  or    mation from someone whos got a decent job after taking your course.", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Listening to other peoples stories", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 30 2019 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Referral", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Currently Not working", "WhyChooseForCareerGoals": "I have learnt Data science by myself but I do not have direct experience in IT industry I want to build my portfolio and network for career growth Looking forward to data a Not applicablelytics as first step toward industry", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP   Mar 23 2019 PLANO", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Learn IT processess", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 07 2019 PLANO", "ClassType": "Live In  Person", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Rwanda", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Because of Alumni Success The School has a good rating and I wanted to do data science", "Industry": "Automotive", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "A friend highly recommended your school ", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "From  the feedback I get from my friends who have attended the program in the  past indicates the program is quite rich and  creates a good launching pad into the  MARCHket especially for beginners like me", "Industry": "Government", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Senior Tech Computer Desktop Support", "WhyChooseForCareerGoals": "To better advance in my career by identifying the best opportunities of employment", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Webinars", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Mexico", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I want practical skills soon", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Housewife", "WhyChooseForCareerGoals": "I chose Colaberry School of Data A Not applicablelytics  Colaberry SODA  because it perfectly aligns with my career aspirations and offers the ideal platform to transition into the dy Not applicablemic field of data a Not applicablelytics As someone with a background in Executive Assisting and Project Ma Not applicablegement Ive developed a keen eye for detail a love for problem  solving and a k Not applicableck for optimizing processes These skills coupled with my passion for math and a Not applicablelytics make data a Not applicablelytics a  Not applicabletural progression for me  What drew me specifically to Colaberry SODA is its reputation for fostering a comprehensive understanding of both the theoretical and practical aspects of data a Not applicablelysis The curriculums emphasis on real  world applications and hands  on experience will not only equip me with the necessary technical skills but also provide me with the confidence to tackle complex a Not applicablelytical challenges i Not applicableny industry  Moreover the flexibility offered by Colaberry SODA including remote learning options is incredibly appealing to me As someone who values the freedom to work remotely and pursue my passions outside of work this flexibility ensures that I ca Not applicablechieve a healthy work  life balance without compromising on my professio Not applicablel development  Furthermore the fact that my sister husband and brother  in  law have all enrolled in Colaberry SODA speaks volumes about the quality of educatio Not applicablend the opportunities it offers Both my sister and husband are Colaberry SODA alumni and witnessing their successful transition into the field of data a Not applicablelytics has only solidified my decision to choose Colaberry SODA for my own career journey  Ultimately I believe that Colaberry SODA will not only help me transition into a rewarding career in data a Not applicablelytics but also provide me with the tools and opportunities to excel i Not applicablerapidly evolving industry while maintaining the lifestyle I desire", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "To be successful and to reach my IT career goal ", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Mexico", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Great instructors I also have a lot of friends that have finished the course and have a great jobs Also its a short term course and not a    year university I also am enrolled in college I attend Colin Community College  ", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Based on strong feedbacks", "Industry": "Insurance", "YrsOnJob": 2, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Business Development Analyst", "WhyChooseForCareerGoals": "recommended", "Industry": "Food and Beverages", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "NURSE", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard this is a great program", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Student", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "None", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "the success stories   feedback", "Industry": "Insurance", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "because to have easey life", "Industry": "Manufacturing", "YrsOnJob": 1, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Intern", "WhyChooseForCareerGoals": "my friend give me good advice about your platform", "Industry": "Government", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Job oriented", "Industry": "Advertising and MARCHketing", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "From what i heard and understand your teaching approach is very sought after and essential remedy to my shortcomings", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "I couldnt find any other school ", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Counselor", "WhyChooseForCareerGoals": "None", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "None", "NetPromotorScore": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Growth and development ", "Industry": "Insurance", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Truck Driver", "WhyChooseForCareerGoals": "I was referred by a friend and liked what I saw", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Information Technology", "WhyChooseForCareerGoals": "Because I am a vetera Not applicablend this school cares about veterian", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I think its the best fit for me", "Industry": "Real Estate", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  Jan 14 2017 IRVING", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I was convinced that it would serve as my ticket out of the epitome of a dead  end job", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 4}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "in between jobs", "WhyChooseForCareerGoals": "alumini", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "its more in to computer science and i feel like its the right place to start my future goals with colabery ", "Industry": "Manufacturing", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Manager", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "unemployeed", "WhyChooseForCareerGoals": "None", "Industry": "Food and Beverages", "YrsOnJob": 7, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I have heard testimonies about your school", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I have heard a lot of good reviews both online and from a friend of mine who took the class", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard from my friends that you encourage them to do their best and to work hard", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Positive Feedback from friends", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "None", "ClassType": "None", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "i am a success st  or    y", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "DBAReport Developer", "WhyChooseForCareerGoals": "I am a Not applicablelumni", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "60", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Not employed ", "WhyChooseForCareerGoals": "Have come to understand how important a data a Not applicablelyst is i Not applicablen organization ", "Industry": "I am currently not employed", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I liked your program and heard many good things about you", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Management  C Level", "WhyChooseForCareerGoals": "because of testimonies", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Development Specialist", "WhyChooseForCareerGoals": "Because I believe that your organization is the best place for me to receive quality training to achieve my desired career change ", "Industry": "Nonprofit", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Its well structured and has a good reputation for job placement", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 8}], "datacache": 0, "originalcount": 1000, "samplecount": 1000, "samplefile": "/FileStore/platform/sampleData/66a4e2c44a48563179e65f07/part-00000-ab766288-cb1a-4ead-8341-99c0c77fcd48-c000.csv", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": "{}"}}, {"_id": "66a4e2c44a48563179e65f08", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/demographicsdatacolaberrypersonalized.csv", "in": ["66a4e2c44a48563179e65f07"], "out": ["66a4e2c44a48563179e65f09"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "personalizedrecommendations_AutoFE", "dataPercentage": "10", "comment": "", "pipeline_id": "66a4e2c44a48563179e65f04", "sub_type": "Feature", "stage_type": "transformation", "stage_attributes": {"modeltrainingpercent": "100", "selectedFE": [{"transformationsData": [{"feature_label": "ClassName", "transformation_label": "String Indexer"}], "feature": "ClassName", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "BI BootCamp  Feb 22 2014 Richardson", "max": "SQLBI Bootcamp  May 22 2021 ONLINE", "missing": "0", "distinct": "77"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "ClassName"}, {"transformationsData": [{"feature_label": "ClassType", "transformation_label": "String Indexer"}], "feature": "ClassType", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Live In  Person", "max": "Self Paced Online", "missing": "0", "distinct": "4"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "ClassType"}, {"transformationsData": [{"feature_label": "Education", "transformation_label": "String Indexer"}], "feature": "Education", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "   year of college", "max": "Some graduate school", "missing": "0", "distinct": "8"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Education"}, {"transformationsData": [{"feature_label": "HouseholdIncome", "transformation_label": "String Indexer"}], "feature": "HouseholdIncome", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "  ", "max": "  ", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "HouseholdIncome"}, {"transformationsData": [{"feature_label": "No  EnrollReason", "transformation_label": "String Indexer"}], "feature": "No  EnrollReason", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Advertising", "max": "the way tuition is paid. its a game changer to older school models.", "missing": "0", "distinct": "31"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "No  EnrollReason"}, {"transformationsData": [{"feature_label": "Age", "transformation_label": "String Indexer"}], "feature": "Age", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "36.95", "stddev": "8.71", "min": "21", "max": "None", "missing": "0", "distinct": "6"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Age"}, {"transformationsData": [{"feature_label": "Gender", "transformation_label": "String Indexer"}], "feature": "Gender", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Female", "max": "None", "missing": "0", "distinct": "4"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Gender"}, {"transformationsData": [{"feature_label": "CountryOfOrgin", "transformation_label": "String Indexer"}], "feature": "CountryOfOrgin", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Burundi", "max": "Zimbabwe", "missing": "0", "distinct": "25"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CountryOfOrgin"}, {"transformationsData": [{"feature_label": "JobRole", "transformation_label": "String Indexer"}], "feature": "JobRole", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Accountant", "max": "unemployeed", "missing": "0", "distinct": "93"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "JobRole"}, {"transformationsData": [{"feature_label": "WhyChooseForCareerGoals", "transformation_label": "String Indexer"}], "feature": "WhyChooseForCareerGoals", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "   To fill the gap in knowledge what the employer needs and what I have    Communication challenges specially in interviews", "max": "yes", "missing": "0", "distinct": "416"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "WhyChooseForCareerGoals"}, {"transformationsData": [{"feature_label": "Industry", "transformation_label": "String Indexer"}], "feature": "Industry", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Advertising and MARCHketing", "max": "Utilities Energy and Extraction", "missing": "0", "distinct": "22"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Industry"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "YrsOnJob", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "3.82", "stddev": "2.98", "min": "0", "max": "10", "missing": "0"}, "updatedLabel": "YrsOnJob"}, {"transformationsData": [{"feature_label": "InformationConsumed", "transformation_label": "String Indexer"}], "feature": "InformationConsumed", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Daily Emails\u00a0", "max": "Weekly Emails\u00a0", "missing": "0", "distinct": "14"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "InformationConsumed"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "NetPromotorScore", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "8.48", "stddev": "1.85", "min": "0", "max": "10", "missing": "0"}, "updatedLabel": "NetPromotorScore"}], "AutoFE": {"autoFE_flag": true, "dataPercentage": "10", "sampledata": [{"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ghana", "JobRole": "Partner", "WhyChooseForCareerGoals": " heard  success stories from friends who do not have IT skills but Colaberry trained them and are now IT professio Not applicablels ", "Industry": "Food and Beverages", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 41, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 26, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 10, "JobRole_stringindexer_transform": 6, "WhyChooseForCareerGoals_stringindexer_transform": 341, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "I prefer not to specify", "CountryOfOrgin": "Nigeria", "JobRole": "None", "WhyChooseForCareerGoals": "None", "Industry": "None", "YrsOnJob": 0, "InformationConsumed": "None", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 12, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 2, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 11, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 18, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Partner", "WhyChooseForCareerGoals": "In the near future information technology is a new form of business growth that is my pla Not applicablend strong demand", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 7, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 6, "WhyChooseForCareerGoals_stringindexer_transform": 275, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "info I found on google", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Currently unemployed", "WhyChooseForCareerGoals": "I did my research and trust that the knowledge is here ", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 39, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 7, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 20, "WhyChooseForCareerGoals_stringindexer_transform": 9, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "The course content.", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Referred to you from a friend  ", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 4, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 18, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 21, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 75, "Industry_stringindexer_transform": 12, "InformationConsumed_stringindexer_transform": 10}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Real estate agent ", "WhyChooseForCareerGoals": "I would like to have an IT background to help complement what I am studying in college  Economics ", "Industry": "Real Estate", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 29, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 4, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 25, "WhyChooseForCareerGoals_stringindexer_transform": 55, "Industry_stringindexer_transform": 19, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Truck Driver", "WhyChooseForCareerGoals": "My friend went through the program and he has achieved success since that time And he felt that I could also achieve the same success", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 21, "WhyChooseForCareerGoals_stringindexer_transform": 54, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 12, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Management  C Level", "WhyChooseForCareerGoals": "success story", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 9, "WhyChooseForCareerGoals_stringindexer_transform": 8, "Industry_stringindexer_transform": 12, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Researcher", "WhyChooseForCareerGoals": "I heard the testimonials and believe in them", "Industry": "Education", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 16, "WhyChooseForCareerGoals_stringindexer_transform": 193, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "To improve my career", "Industry": "Education", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 9, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 92, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Not employed for now", "WhyChooseForCareerGoals": "l listened to success stories and l am at that point of trying to change my life to the better", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 31, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 41, "WhyChooseForCareerGoals_stringindexer_transform": 21, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I was informed of the prompt assistance help with securing jobs", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 30, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 361, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "referral from friends", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 14, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "None", "ClassType": "None", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ghana", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Better job", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 15, "ClassType_stringindexer_transform": 2, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 10, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 144, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 0, "ClassName_stringindexer_transform": 13, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Partner", "WhyChooseForCareerGoals": "I wanted to work from home", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 42, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 6, "WhyChooseForCareerGoals_stringindexer_transform": 83, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "I want to work by IT database", "Industry": "Education", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 7, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 183, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Other", "WhyChooseForCareerGoals": "I have a couple of friends going through classes at the moment and a recent graduate who have all given me motivatio Not applicablel information on how to build upon my future", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 297, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Intern", "WhyChooseForCareerGoals": "The great feedbacks I got from my closest friends", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 25, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 10, "WhyChooseForCareerGoals_stringindexer_transform": 264, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I believe in skill set that Ill acquire with the program", "Industry": "Food and Beverages", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 8, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 366, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard that colaberry is the perfect BOOTCAMP center on data science A Not applicablelytics field and also helps until getting a job ", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 21, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 5, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I referred by a friend who explained the advantages ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 7, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 234, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "I have heard from friends who have taken classes great things about your school and I wanted to do that for myself and better my currier", "Industry": "I am currently not employed", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 28, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 42, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "house wife", "WhyChooseForCareerGoals": "  All the best  feedback from friends ", "Industry": "I am currently not employed", "YrsOnJob": 10, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 6, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 59, "WhyChooseForCareerGoals_stringindexer_transform": 82, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "Because it is skill oriented ", "Industry": "Entertainment and Leisure", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 13, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 156, "Industry_stringindexer_transform": 14, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS  JUNE 01 2024 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "It was recommended to me", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 51, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 7, "WhyChooseForCareerGoals_stringindexer_transform": 67, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 12}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Management  C Level", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "None", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 22, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 6, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 9, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Manager", "WhyChooseForCareerGoals": "I need something that I can do while working my current job", "Industry": "Food and Beverages", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 42, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 311, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "job", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 26, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 138, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because it is the best data a Not applicablelytics school ", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 32, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 283, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "positive reviews of the school", "Industry": "Transportation and Delivery", "YrsOnJob": 10, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 12, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 318, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jul 14 2018 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Database Administrator", "WhyChooseForCareerGoals": "Your school is good a teaching data a Not applicablelytics", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 48, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 7, "JobRole_stringindexer_transform": 88, "WhyChooseForCareerGoals_stringindexer_transform": 171, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "unemployed", "WhyChooseForCareerGoals": "I heard from my friend that it is one of the best", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 35, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 14, "WhyChooseForCareerGoals_stringindexer_transform": 169, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because i saw the success stories", "Industry": "Nonprofit", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 38, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 125, "Industry_stringindexer_transform": 15, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "WORDS FROM FRIEND", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 32, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 298, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "heard good reports about the school", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 16, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 175, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I HEARD GREAT NEWS FROM A  FRIEND", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 11, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 319, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "For Money", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 6, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 201, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "pharmacy technician", "WhyChooseForCareerGoals": "learning proces is good  ", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 14, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 56, "WhyChooseForCareerGoals_stringindexer_transform": 32, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "None", "ClassType": "None", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "I wanted an instructor led ML course", "Industry": "Business Support and Logistics", "YrsOnJob": 7, "InformationConsumed": "None", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 15, "ClassType_stringindexer_transform": 2, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 313, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "I witnessed the success story of a family member who is a Not applicablelumni of Colaberry She is definitely living the American Dream I was recently let go at my job So this was absolutely the right timing I enrolled", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 41, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 7, "WhyChooseForCareerGoals_stringindexer_transform": 181, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "delivery", "WhyChooseForCareerGoals": "suggestion from afriend", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 82, "WhyChooseForCareerGoals_stringindexer_transform": 232, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I love the fact that colberry is online and flexible payment options are available the fact that colaberry provides you with a one on one mentor to help you through the course work on your resume and help you find a job and still provide mentorship and assistance when you need help at your new job after the course", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 8, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 4, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 198, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "it was cheaper and influence from friends that went to your school", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 9, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 53, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": " I have seen many practical results which are graduates from your courses", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 320, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Owner", "WhyChooseForCareerGoals": "I hear noting but success from all the people I talk to that attended  Colaberry  ", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 312, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 12}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I have been searching for a school that are excel at data A Not applicablelytics and based on the information I got from friends Colaberry is the best place to equip myself in the area of data a Not applicablelytics ", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 13, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 271, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "manufacturing technician", "WhyChooseForCareerGoals": "None", "Industry": "Manufacturing", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 36, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 61, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "Convenience of online learning  and reputation ", "Industry": "Education", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 13, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 210, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jan 6 2018 IRVING", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "F  or    mer Student", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 57, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 18, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I have heard good things about the school from a friend", "Industry": "Nonprofit", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 2, "ClassName_stringindexer_transform": 14, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 23, "Industry_stringindexer_transform": 15, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Because of the success stories attached to the school", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 44, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 358, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Good reviews from family members", "Industry": "Government", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 127, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "None", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Highly Recommended by a Friend", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 5, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 3, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 59, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "GOOD REVIEW ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 38, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 285, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "success stories heard from my friends and people around me ", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 8, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 395, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 12}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Rwanda", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "The entire program structure goes beyond the ordi Not applicablery concepts of many educatio Not applicablel Institutions", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 9, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 263, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Neighbor turned friend    referral ", "Industry": "Insurance", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 17, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 195, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Cameroon", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because l have a friend who got his certificate here and he now has a great stable job ", "Industry": "Insurance", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 36, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 5, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 7, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 305, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Statistics and training", "Industry": "Business Support and Logistics", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 22, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 52, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Working a little from home", "WhyChooseForCareerGoals": "For the fact that it is the best place that gets me ready for a job", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 27, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 53, "WhyChooseForCareerGoals_stringindexer_transform": 333, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 28, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Sudan", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "My brother in  law attended years ago and hes making great money", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 25, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 16, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 384, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 28, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "My friend told me that Colaberry is a good school for data a Not applicablelytics", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 374, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "I do not have awork", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "None", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 21, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 89, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "It was the few interactions with the staff that seemed very genuine. I get the sense that everyone at Colaberry wants to see you become the next success st  or    y and thats exactly what I want. ", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Preparing to re enter the workforce after physical therapy due to an auto accident.", "WhyChooseForCareerGoals": "After considering other options I chose Colaberry because of the work that they have done with military veterans It lets me know that with hard work and focus I ca Not applicablechieve my goal of entering the IT field just as other veterans have done", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 35, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 15, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 42, "WhyChooseForCareerGoals_stringindexer_transform": 190, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Rwanda", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because couple friends told  me about it", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 37, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 9, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 65, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Independent contractor", "WhyChooseForCareerGoals": "very good curriculum ", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 21, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 63, "WhyChooseForCareerGoals_stringindexer_transform": 410, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because I heard a lot from my friend and his friends who got their job after taking this program", "Industry": "Utilities Energy and Extraction", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 6, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 7, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 367, "Industry_stringindexer_transform": 20, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "small business entrepreneur", "WhyChooseForCareerGoals": "Familiar faces and the story behind how it all began", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 50, "WhyChooseForCareerGoals_stringindexer_transform": 317, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 18 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Feedback from f  or    mer students", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Togo", "JobRole": "Other", "WhyChooseForCareerGoals": "Good feedback from former students", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 47, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 25, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 18, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 394, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Driver", "WhyChooseForCareerGoals": "None", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 9, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 6, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 66, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "SQLBI Bootcamp  Mar 18 2017 PLANO TX", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Transportation and Delivery", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 53, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Students success Stories", "Industry": "Nonprofit", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 43, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 63, "Industry_stringindexer_transform": 15, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard a good story about Colaberry", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 17, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 397, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Other", "WhyChooseForCareerGoals": "To help me understand my courses and further my career", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 402, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "info I found on google", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Currently unemployed", "WhyChooseForCareerGoals": "I did my research and trust that the knowledge is here ", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 7, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 20, "WhyChooseForCareerGoals_stringindexer_transform": 9, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Intern", "WhyChooseForCareerGoals": "heard of many successful stories and the i liked the way of teaching and homeworks", "Industry": "I am currently not employed", "YrsOnJob": 7, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 39, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 10, "WhyChooseForCareerGoals_stringindexer_transform": 339, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 10}, {"ClassName": "SQLBI Bootcamp  May 22 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "seemed easy and understandable", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 45, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 276, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "A friend did the program and loved it I have been wanting to do something similar to this but never knew where to start", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 40, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "I want better life.", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I have done some research and data a Not applicablelyst is what I want", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 19, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 315, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Professio Not applicablelism and high level of experience in problem solving and delivery of required knowledge", "Industry": "Manufacturing", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 13, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 277, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 30, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP   July 13 2019 PLANO", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Success stories", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 66, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 3, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Structure and help with resume job search", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 10, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 13, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 44, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "None", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 23, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 11, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "South Sudan", "JobRole": "PARALEGAL", "WhyChooseForCareerGoals": "I chose Colaberry after speaking to a friend whose currently been enrolled for about a month now She shared her experience with me and so far I am impressed I think this school will give me a foot in the door to help me reach my career goal", "Industry": "Business Support and Logistics", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 17, "JobRole_stringindexer_transform": 64, "WhyChooseForCareerGoals_stringindexer_transform": 145, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Because I to have a job in IT field", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 166, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Success rate", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 24, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 5, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 255, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 10}, {"ClassName": "SQLBI Bootcamp  Jul 08 2017 PLANO", "ClassType": "Live In  Person", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "friends were there ", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 56, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 345, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  June 1  2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Speaking to a friend", "Industry": "Insurance", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 50, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 272, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Tax Preparer", "WhyChooseForCareerGoals": "None", "Industry": "None", "YrsOnJob": 0, "InformationConsumed": "None", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 6, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 83, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 18, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Cameroon", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because I have two close friends who graduated from your school they are working from home and are making good money", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 25, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 7, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 104, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "Great reviews from past students", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 267, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 18 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Its well structured and has a good reputation for job placement", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 47, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 16, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 10}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Was referred to by a former studient ", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 31, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 5, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 180, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS  JULY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "A FRIEND TOLD ME ABOUT THE COURSE", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 70, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 109, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "REFERRAL FROM CURRENT STUDENT   PAULINE KAMERE", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 9, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 260, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I was looking for a career to start working towards", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 14, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 254, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "what people say", "Industry": "Manufacturing", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 16, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 39, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS  JUNE 01 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "career desires and success stories from people who went through colaberry and their lives changed positively", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 51, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 258, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "best reviews", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 24, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 4, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 405, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Independent Contractor;Process Server", "WhyChooseForCareerGoals": "We are headed into the digital world if I MAY say everything today you can purchase at the convenience of your device I figured MAYbe it wouldnt hurt to give this a try to be Familiar with technology and turn this occupation into a career", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 21, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 75, "WhyChooseForCareerGoals_stringindexer_transform": 162, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Training and job opportunities", "Industry": "Business Support and Logistics", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 8, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 57, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 20, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Uganda", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Recommendations from friends", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 6, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 8, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 76, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Due to knowing someone perso Not applicablelly who attended and was successful showed the goal was obtai Not applicableble and tangible as long as i stayed determined ", "Industry": "Insurance", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 18, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 208, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "None", "ClassType": "None", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "to enhance my skills and knowledge in IT Field ", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 15, "ClassType_stringindexer_transform": 2, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 203, "Industry_stringindexer_transform": 12, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Manager", "WhyChooseForCareerGoals": "better pay", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Longer Facebook Posts", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 43, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 68, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 13}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I have heard just extraordi Not applicablery reviews about this establishment and I might want to go to this foundation to future my instruction", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "None", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 331, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Veteran assistance", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Vetera Not applicablessistance and job placement assistance", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 10, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 24, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 29, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 29, "Industry_stringindexer_transform": 12, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "reports from alumni", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 16, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 146, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "Data Analytics I with MS SQL Server BI  Mar 10 2018 PLANO", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I know someone who completed the course and heard great things about the program", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Webinars", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 72, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 371, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Was motivated about the successes of the other students", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 21, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 4, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 164, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "stay at home mom", "WhyChooseForCareerGoals": "To advance career", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 12, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 22, "WhyChooseForCareerGoals_stringindexer_transform": 206, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "GOOD REFERRAL", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Webinars", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 27, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 4, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 168, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard many students get a good paying job and i want to part of it too ", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 342, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 8}, {"ClassName": "SQLBI Bootcamp  May 22 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Referral ", "Industry": "Finance and Financial Services", "YrsOnJob": 10, "InformationConsumed": "None", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 45, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 11, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jan 13 2018 PLANO", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "because i hered that is the better choise in here where i live and i proved what i hered ", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 65, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 245, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "Data Analytics I with MS SQL Server BI  Sep 8 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Other", "WhyChooseForCareerGoals": "To be fi Not applicablencially independent", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 4, "ClassName_stringindexer_transform": 58, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 176, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Ive seen how it has changed lives", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 5, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 369, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "60", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Insurance Adjuster Realtor", "WhyChooseForCareerGoals": "The school normalizes data a Not applicablelytics i Not applicableway that has one thinking it is relatable to every business We must simply put in the time to learn its format and techniques ", "Industry": "Insurance", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 31, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 4, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 49, "WhyChooseForCareerGoals_stringindexer_transform": 220, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Transportation and Delivery", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 10, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "Studied and friends recommended me", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 28, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 31, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Correctional officer", "WhyChooseForCareerGoals": "Practical application", "Industry": "Government", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 37, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 4, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 19, "WhyChooseForCareerGoals_stringindexer_transform": 294, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Because I was highly recommended to the school by my friend who graduated from your program successfully", "Industry": "Insurance", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 11, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 293, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I wanted a career change into the IT business and Colaberry i Not applicableddition to being in the same city where i live it came in on top in my research ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 102, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "alumni story", "Industry": "Advertising and MARCHketing", "YrsOnJob": 2, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 31, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 324, "Industry_stringindexer_transform": 13, "InformationConsumed_stringindexer_transform": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 27, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 18 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Referred from a friend of friend that he knew took the course and made a career change  He is now making really good money just starting out  ", "Industry": "Insurance", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 47, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 343, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "Recommendation from friend", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 4, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 7, "WhyChooseForCareerGoals_stringindexer_transform": 139, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 10}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "Owner", "WhyChooseForCareerGoals": "great value for money and time", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 26, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 8, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 214, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Job improvement and salary", "Industry": "Business Support and Logistics", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 36, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 4, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 143, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Advertising and MARCHketing", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 13, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "Success story from a friend", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 6, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 186, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "BI BootCamp  July 23rd 2016 Plano TX", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "great BOOTCAMP curriculum ", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 67, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 26, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Intern", "WhyChooseForCareerGoals": "Referred by a friend", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 9, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 10, "WhyChooseForCareerGoals_stringindexer_transform": 189, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "SQLBI Bootcamp  May 22 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Volunteer", "WhyChooseForCareerGoals": "interesting", "Industry": "Business Support and Logistics", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 45, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 13, "WhyChooseForCareerGoals_stringindexer_transform": 30, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "I like how you guys help your students eve Not applicablefter they graduate ", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 167, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Manager", "WhyChooseForCareerGoals": "I heard that it was hands on training supported with videos which was my preferred way of learning", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 40, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 122, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "Heard you have a proven track record of successfully training and helping students succeed ", "Industry": "I am currently not employed", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 33, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 202, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "Module and tutorial o Not applicablece a week", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 151, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "its growing day by day", "Industry": "Retail and Consumer Durables", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 10, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 393, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "None", "Industry": "Advertising and MARCHketing", "YrsOnJob": 10, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 40, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 13, "InformationConsumed_stringindexer_transform": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Its rated very highly", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 38, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 118, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Researcher", "WhyChooseForCareerGoals": "It seems simple to communicate", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 12, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 16, "WhyChooseForCareerGoals_stringindexer_transform": 303, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "It comes highly recommended", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 27, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 19, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "My friend had provided good feedback about the program", "Industry": "Education", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 42, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 5, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 227, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Senior Manager", "WhyChooseForCareerGoals": "Ive heard from others who have taken the course how it changed their life", "Industry": "Automotive", "YrsOnJob": 7, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 17, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 8, "WhyChooseForCareerGoals_stringindexer_transform": 368, "Industry_stringindexer_transform": 16, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "IPBC DIRECT SIGN UP  2024", "ClassType": "Self Paced Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "TO improve quality of life", "Industry": "Retail and Consumer Durables", "YrsOnJob": 10, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 76, "ClassType_stringindexer_transform": 3, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 62, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Inf  or    mation you found on Facebook", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I read that Colaberry has good reviews so want to see and try it myself with a leap of faith", "Industry": "Insurance", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 8, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 81, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "Colaberry is The nearest school I know ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 33, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 124, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "currently not working", "WhyChooseForCareerGoals": "the referral spoke highly of the school and the programme", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 14, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 26, "WhyChooseForCareerGoals_stringindexer_transform": 240, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Manager", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 35, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 4, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Burundi", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "The good reputation of the school", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 12, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 14, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 411, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Speed Cost Track Record", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 24, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 337, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "GOOD SUCCESS STORIES", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 29, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 257, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "None", "Industry": "Food and Beverages", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 28, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Reaching my fi Not applicablencial goals in my current career will be very challenging", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 17, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 363, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "A friend highly recommended your school ", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 19, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 17, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Team Lead", "WhyChooseForCareerGoals": " testimony of a friend", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 197, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "A coworker informed me about the program and I was interested in improving myself as well as learning skills that will prepare me for the future ", "Industry": "Nonprofit", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 14, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 85, "Industry_stringindexer_transform": 15, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I enjoyed the open house and I was encouraged by a friend", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 412, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I received encouragement from the cousin of a friend who completed the data a Not applicablelytics BOOTCAMP course", "Industry": "Education", "YrsOnJob": 10, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 16, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 408, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because of the positive feedback i have received", "Industry": "Finance and Financial Services", "YrsOnJob": 10, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 37, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 123, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Referral from a trusted source ", "Industry": "Utilities Energy and Extraction", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 23, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 58, "Industry_stringindexer_transform": 20, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Food and Beverages", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Alumni testimony and success story ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 16, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 301, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "student", "WhyChooseForCareerGoals": "to improve my life", "Industry": "Agriculture", "YrsOnJob": 1, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 26, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 31, "WhyChooseForCareerGoals_stringindexer_transform": 34, "Industry_stringindexer_transform": 21, "InformationConsumed_stringindexer_transform": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "good rewiews", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 33, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 217, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "curriculum", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "The curriculum is what stood out to me", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 37, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 28, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 212, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Independent contractor   health care", "WhyChooseForCareerGoals": "It was recommended by a friend who is in the IT world", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 58, "WhyChooseForCareerGoals_stringindexer_transform": 87, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "BI BootCamp  June 14 2014 Richardson", "ClassType": "Live In  Person", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Enhance career in short period of time by learning industry required skills", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 63, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 95, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Stay home mom and started small business name    Days LLC", "WhyChooseForCareerGoals": "I heard good things about school and my friend got job too", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 12, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 55, "WhyChooseForCareerGoals_stringindexer_transform": 268, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "It has the best  program and boot camp structure as per advice from a Not applicablelumni its can be done online with flexible schedules Military scholarship and generally welcoming and helpful environment when taking the courses", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 6, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 185, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "yes", "Industry": "Business Support and Logistics", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 5, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 10, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Zambia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Affordability", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 20, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 24, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 223, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "I was referred by a friend after doing my research he really did recommend this school", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 44, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 328, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "good goodwill", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 26, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 115, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "stay at home mom", "WhyChooseForCareerGoals": "to improve myself and change my career", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 22, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 22, "WhyChooseForCareerGoals_stringindexer_transform": 252, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "Heard very positive review Class time matches my schedule ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 38, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 131, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "senior analyst", "WhyChooseForCareerGoals": "I heard of only success stories", "Industry": "None", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 25, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 5, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 71, "WhyChooseForCareerGoals_stringindexer_transform": 377, "Industry_stringindexer_transform": 18, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "SELF EMPLOYED", "WhyChooseForCareerGoals": "TO IMPROVE AND CHANGE MY SELF FOR BETTER CEREER", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 29, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 39, "WhyChooseForCareerGoals_stringindexer_transform": 309, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Manager", "WhyChooseForCareerGoals": " Not applicable", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 4, "ClassName_stringindexer_transform": 21, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 1, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I chose your school because traditio Not applicablel education in the US is failing kids flat There is a lot of skills gap that traditio Not applicablel    years universities even IVY league one cant fix Colaberry is better than coursera", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 43, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 354, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Lots of success stories ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "None", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 23, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 6, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 385, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Contractor", "WhyChooseForCareerGoals": "Well organize and oriented details ", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 24, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 47, "WhyChooseForCareerGoals_stringindexer_transform": 78, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "ClassType": "Live In  Person", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "interview readiness", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 46, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 375, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "cause of the success stories from friends", "Industry": "Construction Machinery and Homes", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 28, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 51, "Industry_stringindexer_transform": 17, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "Other", "WhyChooseForCareerGoals": "On the job training and assisting with job hiring", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 7, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 8, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 142, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "Data Analytics I with MS SQL Server BI  Mar 10 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "My cousin recommended it; its a worthwhile career", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 52, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 116, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Cote d'Ivoire", "JobRole": "Manager", "WhyChooseForCareerGoals": "Referral ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 5, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 13, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 11, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "Recommended", "Industry": "Government", "YrsOnJob": 2, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 6, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 158, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Home Maker", "WhyChooseForCareerGoals": "Teaching process", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 31, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 54, "WhyChooseForCareerGoals_stringindexer_transform": 130, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Real Estate", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 25, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 6, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 19, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I feel it will bring me right where I want to be  and other colleges like universities would just put me in debt  I also love that the school is hands on", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 37, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 38, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Teacher", "WhyChooseForCareerGoals": "None", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 40, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 45, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Manager", "WhyChooseForCareerGoals": "Friend referral", "Industry": "Transportation and Delivery", "YrsOnJob": 10, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 5, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 15, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "because i believe it will help me get a deceit job", "Industry": "Retail and Consumer Durables", "YrsOnJob": 7, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 8, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 99, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 12}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Insurance", "YrsOnJob": 1, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 8, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Have read more about the reviews ", "Industry": "Food and Beverages", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 38, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 74, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Accountant", "WhyChooseForCareerGoals": "None", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 34, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 17, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "A friends recommendation ", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 12, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 97, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Senior Manager", "WhyChooseForCareerGoals": " Not applicable", "Industry": "Automotive", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 9, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 8, "WhyChooseForCareerGoals_stringindexer_transform": 1, "Industry_stringindexer_transform": 16, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "College Student", "WhyChooseForCareerGoals": "I am hoping to gain experience and hopefully a well paying job afterwards", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 73, "WhyChooseForCareerGoals_stringindexer_transform": 389, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Zimbabwe", "JobRole": "Other", "WhyChooseForCareerGoals": "I love the school curriculum and how the studies are structured Also success stories from friends ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 19, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 11, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 211, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "I wanted to change career as I just moved to America from Ca Not applicableda and this seem to be the best choice as my family friend spoke highly of this school ", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 21, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 7, "WhyChooseForCareerGoals_stringindexer_transform": 66, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Other", "WhyChooseForCareerGoals": "Because colaberry is a reference now to train people and this peoples get a jobs and change live that my goal ", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 16, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 7, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 356, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Hearing about success stories from Colaberry alumni", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 17, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 150, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Accountant", "WhyChooseForCareerGoals": "The success stories of people who have been through it", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 40, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 17, "WhyChooseForCareerGoals_stringindexer_transform": 157, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Owner", "WhyChooseForCareerGoals": "because there`s endless opportunities to develop your career ", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 5, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 388, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Manager", "WhyChooseForCareerGoals": "Technique used for job placement", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 33, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 238, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Cameroon", "JobRole": "Other", "WhyChooseForCareerGoals": "because of good testimony that my friend gives to me", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 3, "ClassName_stringindexer_transform": 13, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 7, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 159, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because your about helping folks and I couldnt afford $  that the other schools were asking me to pay Also my friend said many great things about your support team ", "Industry": "Government", "YrsOnJob": 2, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 23, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 406, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 11}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Driver ", "WhyChooseForCareerGoals": "My goal career is to work from home", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 24, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 12, "WhyChooseForCareerGoals_stringindexer_transform": 4, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Manager", "WhyChooseForCareerGoals": "I heard the testimony of my friend ", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 13, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 80, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Partner", "WhyChooseForCareerGoals": "Perso Not applicablel testimony from a friend and getting more information from customer service", "Industry": "Manufacturing", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 19, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 6, "WhyChooseForCareerGoals_stringindexer_transform": 335, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Impressive testimonies from a Not applicablelumni", "Industry": "Manufacturing", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 10, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 44, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "BI BootCamp  Nov 7 2015 Online", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "the way tuition is paid. its a game changer to older school models.", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I made some poor decisions when i was younger and didnt finish school I needed a path out of the restaurant industry ", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 55, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 23, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 310, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 30 2019 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "Because of the testimonials i heard ", "Industry": "Business Support and Logistics", "YrsOnJob": 1, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 54, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 336, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "working independently working remote", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 35, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 5, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 409, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Recommendation", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 31, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 163, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 11}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Other", "WhyChooseForCareerGoals": "BECAUSE OF SUCCESS STORIES", "Industry": "I am currently not employed", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 44, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 242, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Convenient relevant and aligns with new job role", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 8, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 322, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because I can et more support from the team", "Industry": "Manufacturing", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 9, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 381, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "India", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Alumni referral", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 11, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 6, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Army", "WhyChooseForCareerGoals": "Career", "Industry": "Government", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 5, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 37, "WhyChooseForCareerGoals_stringindexer_transform": 226, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Other", "WhyChooseForCareerGoals": "COURSE LENGTH COMPARED TO TRADITIO Not applicableL COLLEGES", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 348, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 12}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I talked to a Family member who is attending your course and she gave me very good feedback ", "Industry": "Entertainment and Leisure", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 23, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 140, "Industry_stringindexer_transform": 14, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "n  or  a", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "texas", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 0, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 13, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 307, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "None", "ClassType": "None", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "reputation precedes ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 15, "ClassType_stringindexer_transform": 2, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 218, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "SQLBI Bootcamp  Mar 18 2017 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "By interacting with alumni and see real change", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 68, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 196, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "SQL python data a Not applicablelytics", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 10, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 5, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 391, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Government", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 6, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "MARCHketing Director", "WhyChooseForCareerGoals": "It is very structured and it operates a group that is a big motivation", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 18, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 86, "WhyChooseForCareerGoals_stringindexer_transform": 379, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Service Desk Analyst", "WhyChooseForCareerGoals": "Heard proper guidance and make the student do it ", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 17, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 91, "WhyChooseForCareerGoals_stringindexer_transform": 101, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "My friend recommended Colaberry", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 376, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Senior Manager", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 30, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 8, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Did not attend school", "HouseholdIncome": "  ", "No  EnrollReason": "Info you found on LinkedIn", "Age": "21", "Gender": "I prefer not to specify", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "It will help me advance my career ", "Industry": "Advertising and MARCHketing", "YrsOnJob": 1, "InformationConsumed": "Webinars", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 11, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 7, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 20, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 2, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 224, "Industry_stringindexer_transform": 13, "InformationConsumed_stringindexer_transform": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Sierra Leone", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": " Not applicable", "Industry": "Finance and Financial Services", "YrsOnJob": 0, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 24, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 22, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 1, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Partner", "WhyChooseForCareerGoals": "I was told collabery is the place to be if you  need to succeed in career change", "Industry": "Food and Beverages", "YrsOnJob": 4, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 7, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 7, "JobRole_stringindexer_transform": 6, "WhyChooseForCareerGoals_stringindexer_transform": 229, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 12}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "None", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "Your teaching method It is career based", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 3, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 147, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "60", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "Manager", "WhyChooseForCareerGoals": "THE WORLD CHANGING GOING DIGITAL AND I NEED KNOWLEDGE IN DIGITAL WORLD", "Industry": "Business Support and Logistics", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 4, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 8, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 120, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Volunteer", "WhyChooseForCareerGoals": "I have heard much about your teaching", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 33, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 13, "WhyChooseForCareerGoals_stringindexer_transform": 105, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "SQLBI Bootcamp  Mar 18 2017 PLANO TX", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Help getting job after courses completed", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Help with finding job afterwards", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 53, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 14, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 407, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Rwanda", "JobRole": "Other", "WhyChooseForCareerGoals": "My friend went to this school and she had a great experience", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 9, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 149, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Dispatcher", "WhyChooseForCareerGoals": "My friends learned in Colaberry are a life testimony seeing them reach their goal really motivated me go forward and i hope to see my self there too", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 40, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 74, "WhyChooseForCareerGoals_stringindexer_transform": 247, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Driver ", "WhyChooseForCareerGoals": "My goal career is to work from home", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 20, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 12, "WhyChooseForCareerGoals_stringindexer_transform": 4, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "based on success story from another person", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 22, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 291, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Configuration Analyst II", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 6, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 6, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 80, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Commission employee ", "WhyChooseForCareerGoals": "Because I wanted hands on training that was very to the point In college everything took longer than it should of and classes that could have been done in weeks if structured properly took a semester or even multiple semesters Colaberrys program is much shorter and allows me to learn the tools and knowledge faster ", "Industry": "Construction Machinery and Homes", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 37, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 27, "WhyChooseForCareerGoals_stringindexer_transform": 112, "Industry_stringindexer_transform": 17, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Encouragement from a friend already in class and positive testimonies from YouTube", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 27, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 47, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Cameroon", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "My husband recommended", "Industry": "Insurance", "YrsOnJob": 1, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 22, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 7, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 400, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 11}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 34, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 5, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Business Analyst ", "WhyChooseForCareerGoals": "I hear good stories from a fiend regarding the training program and possible job replacement opportunity ", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 60, "WhyChooseForCareerGoals_stringindexer_transform": 96, "Industry_stringindexer_transform": 12, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "ClassType": "Live In  Person", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Grate reviews", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 46, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 88, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "referral from previous student", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 25, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 5, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 209, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Congo Democratic Republic of the", "JobRole": "Partner", "WhyChooseForCareerGoals": "want to lear Not applicablend your class time", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 18, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 15, "JobRole_stringindexer_transform": 6, "WhyChooseForCareerGoals_stringindexer_transform": 382, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "i choose colaberry because i will acquire the industry oriented knowledge and skills so that i can hit the ground running", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 7, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 249, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "referral from friends", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 41, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 14, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Career goal", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 4, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 13, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 7, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 415, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  June 1  2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Success stories and I know someone who attended", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 50, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 349, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "Friend referred more opportunity ", "Industry": "Retail and Consumer Durables", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 11, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 160, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "China", "JobRole": "Analyst", "WhyChooseForCareerGoals": "None", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 8, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 19, "JobRole_stringindexer_transform": 69, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "   To fill the gap in knowledge what the employer needs and what I have    Communication challenges specially in interviews", "Industry": "Government", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 30, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 243, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "ClassType": "Live In  Person", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 46, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": " i was really impressed my friend who took his career in colliery ", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 18, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 20, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 12}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "A friend convinced me of its benefits", "Industry": "Construction Machinery and Homes", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 14, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 231, "Industry_stringindexer_transform": 17, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Morocco", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "For better job position ", "Industry": "Entertainment and Leisure", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 23, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 259, "Industry_stringindexer_transform": 14, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Correctional officer", "WhyChooseForCareerGoals": "my expectation to succeed", "Industry": "Government", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 30, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 19, "WhyChooseForCareerGoals_stringindexer_transform": 251, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "Cause of the stories I heard ", "Industry": "Food and Beverages", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 347, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard from one of my friend  former student of Colaberry  it is a good school ", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 137, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Student", "WhyChooseForCareerGoals": "Because my friend graduated your class and now is living a Not applicablemazing life with well paid job He inspired me to join the class ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 23, "WhyChooseForCareerGoals_stringindexer_transform": 215, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Perso Not applicablel experience from a close friend", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 29, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 173, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "SQLBI Bootcamp  May 22 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I JUST HEARD A GOOD THINGS ABOUT THE SCHOOL", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Webinars", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 45, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 372, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "A FRIEND INTRODUCED ME", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "None", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 7, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 353, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Referred by a successful Alumni I want to be like him He is doing great", "Industry": "Business Support and Logistics", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 5, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 134, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "None", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 36, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard that colaberry is the perfect BOOTCAMP center on data science A Not applicablelytics field and also helps until getting a job ", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 43, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 5, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Mexico", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Recommendation ", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 12, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 110, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Friend", "Industry": "Food and Beverages", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 5, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 12, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "I prefer not to specify", "CountryOfOrgin": "Nigeria", "JobRole": "unemployed", "WhyChooseForCareerGoals": "hands  on", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Longer Facebook Posts", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 18, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 2, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 14, "WhyChooseForCareerGoals_stringindexer_transform": 281, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 13}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "A friend convinced me", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 5, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 216, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "I want to pursue my desire to become involved in Data Science as i have worked as a database a Not applicablelyst for some time in the past And also to gain knowledge to have a professio Not applicablel path to support my self and my family", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 19, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 346, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "Success Stories Scholarship", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 25, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 398, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "None", "ClassType": "None", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Still deciding  Heard from friend that there are good results ", "Industry": "Construction Machinery and Homes", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 15, "ClassType_stringindexer_transform": 2, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 22, "Industry_stringindexer_transform": 17, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Owner", "WhyChooseForCareerGoals": "Because of the high level of job placement", "Industry": "Entertainment and Leisure", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 107, "Industry_stringindexer_transform": 14, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Self employed", "WhyChooseForCareerGoals": "I want to get the skill to functio Not applicables a Not applicable Not applicablelyst", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 11, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 68, "WhyChooseForCareerGoals_stringindexer_transform": 152, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "i like that it offers an online program", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 153, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Good curriculum  Good job placements  ", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 41, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 241, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "None", "ClassType": "None", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Management  C Level", "WhyChooseForCareerGoals": "Referral", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 4, "InformationConsumed": "Webinars", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 15, "ClassType_stringindexer_transform": 2, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 9, "WhyChooseForCareerGoals_stringindexer_transform": 2, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "home maker", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 10, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 18, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Friend referral", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 23, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 15, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 12}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 18 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "per testimony you help with employment ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 47, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 326, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Manager", "WhyChooseForCareerGoals": "I  heard good recommendations about the school", "Industry": "Advertising and MARCHketing", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 192, "Industry_stringindexer_transform": 13, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Utilities Energy and Extraction", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 20, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because I want to elevate my career goals and opportunities and this seems like a legit and good place to achieve that  ", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 14, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 199, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "its has a track record of success and career placements", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 24, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 219, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Rwanda", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "seen other people make it", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 10, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 9, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 302, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Congo Democratic Republic of the", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "I love IT and a want to get some experience in this industry", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 11, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 15, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 244, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "BI BootCamp  Jan 3 2015 Richardson TX", "ClassType": "Live In  Person", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "improve my career and income", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 60, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 7, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Testimonials from Past Students outlining how their  experience at Colaberry contributed to their career success.", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I am doing a career switch to Data A Not applicablelytics I am looking for a school that will help me improve my data a Not applicablelysis skills and prepare me to ace the job interviews", "Industry": "Automotive", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 6, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 10, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 98, "Industry_stringindexer_transform": 16, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because it convenient for me  ", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 11, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 304, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "60", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 46, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 4, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 18, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "self employed", "WhyChooseForCareerGoals": "I have been told that it was a good school and it has lots of information", "Industry": "Entertainment and Leisure", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 10, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 65, "WhyChooseForCareerGoals_stringindexer_transform": 288, "Industry_stringindexer_transform": 14, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  July 20  2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "a great referral from a friend ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 74, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 221, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "India", "JobRole": "unemployeed", "WhyChooseForCareerGoals": "IDK ", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 0, "ClassName_stringindexer_transform": 18, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 15, "WhyChooseForCareerGoals_stringindexer_transform": 213, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Driver ", "WhyChooseForCareerGoals": "My goal career is to work from home", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 6, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 12, "WhyChooseForCareerGoals_stringindexer_transform": 4, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Great review from a friend", "Industry": "Real Estate", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 236, "Industry_stringindexer_transform": 19, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Success stories", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 31, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 3, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Uganda", "JobRole": "Other", "WhyChooseForCareerGoals": "Gain new skill sets", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 8, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 334, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I picked this school because of the success stories I heard from alumni students", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 27, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 128, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "friends results", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 184, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Because it was the first school I saw that not only offers continued education for professio Not applicablels but also for people who have no prior IT experience I Not applicableddition you make it affordable for people to get this education by providing payment plans early bird specials etc  Fi Not applicablelly the job placement aspect of it along with the portfolio creation is what made this most appealing You are really helping your students not like some of the other places that ripped people off back in the late     s early   s ", "Industry": "Finance and Financial Services", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 29, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 35, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because of the job guarantee ", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 20, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 84, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 07 2019 PLANO", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "matches the current IT demand field", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 49, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 93, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "None", "ClassType": "None", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "none", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 15, "ClassType_stringindexer_transform": 2, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 8, "JobRole_stringindexer_transform": 81, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Brewer", "WhyChooseForCareerGoals": "It seems like the alumni network is a valid way to actually get a job  Seems like a lot of code schools just want your money", "Industry": "Food and Beverages", "YrsOnJob": 2, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 62, "WhyChooseForCareerGoals_stringindexer_transform": 265, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "BECAUSE YOUR PROGRAM HAS WHAT I NEED TO ACHIEVE MY LONG TERM CAREER IN IT", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 19, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 7, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 111, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "career change", "Industry": "Automotive", "YrsOnJob": 7, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 10, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 414, "Industry_stringindexer_transform": 16, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Uganda", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "friend", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 16, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 8, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 108, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Close friends have been successful using this program", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 9, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 79, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Other", "WhyChooseForCareerGoals": "Success stories", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 3, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "None", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "None", "WhyChooseForCareerGoals": "None", "Industry": "None", "YrsOnJob": 0, "InformationConsumed": "None", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 5, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 8, "JobRole_stringindexer_transform": 11, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 18, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "To have a better life to make more money", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 8, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 135, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Other", "WhyChooseForCareerGoals": "mentorship program", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 13, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 7, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 194, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "None", "ClassType": "None", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Good reviews", "Industry": "Manufacturing", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 15, "ClassType_stringindexer_transform": 2, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 325, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Full Scholarship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Tunisia", "JobRole": "Other", "WhyChooseForCareerGoals": "FULL SCHOLARSHIP", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Webinars", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 9, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 21, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 182, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Zimbabwe", "JobRole": "Other", "WhyChooseForCareerGoals": "I felt the curriculum would help me become a data engineer  ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 19, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 11, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 392, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "Someone I know had completed a course through Colaberry", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 20, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 7, "WhyChooseForCareerGoals_stringindexer_transform": 290, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Ive seen others success with your program", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 19, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 329, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 11}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Housemaker", "WhyChooseForCareerGoals": "It helps individual to build up his her career in the IT sector ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 5, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 43, "WhyChooseForCareerGoals_stringindexer_transform": 207, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I want to change careers and look for something long term with job security", "Industry": "Insurance", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 41, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 45, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "because of your methodology ", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 121, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard about people successful ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 327, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jul 14 2018 PLANO", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "change of career", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Longer Facebook Posts", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 75, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 174, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 13}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "success stories of cola berry all over the country", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 14, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 77, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "SHORT TIME AND IPBC", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 13, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 282, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 21, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "because of my friend who said good things about your school ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 2, "ClassName_stringindexer_transform": 7, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 148, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Career change and I would like to explore the IT industry ", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 287, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard from friend Colaberry is best school", "Industry": "Finance and Financial Services", "YrsOnJob": 10, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 32, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 364, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 12}, {"ClassName": "SQLBI Bootcamp  May 22 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "independent contractor", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "None", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 45, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 87, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "Data Analytics I with MS SQL Server BI  Sep 8 2018 IRVING", "ClassType": "Live In  Person", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "21", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "They have helped my cousi Not applicables well as others  get into a better position So I believe they will do the same for me", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 59, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 228, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "To improve my carrier and life standard", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 8, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 25, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 11}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 32, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 6, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "get knowledge  and earn money", "Industry": "Advertising and MARCHketing", "YrsOnJob": 2, "InformationConsumed": "Longer Facebook Posts", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 12, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 4, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 64, "Industry_stringindexer_transform": 13, "InformationConsumed_stringindexer_transform": 13}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because my friend studied in your school and he is now successful", "Industry": "Food and Beverages", "YrsOnJob": 1, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 11, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 60, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 11}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "from freinds", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 28, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 71, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Partner", "WhyChooseForCareerGoals": "Career Shifting I choose this school due to a former student graduating and landing a solid job with an income increase", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 10, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 6, "WhyChooseForCareerGoals_stringindexer_transform": 295, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard all good news about Colaberry the friends went there talks about it a lot and they suggested me to register and learn ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 239, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Not working", "WhyChooseForCareerGoals": "Colaberry made a huge difference in my life a few years ago", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 23, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 36, "WhyChooseForCareerGoals_stringindexer_transform": 273, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "60", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "The short answer is that you offered me unbelievable fi Not applicablencial help And you are offering a lucrative course data a Not applicablelytics ", "Industry": "Insurance", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 4, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 170, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Reputatio Not applicablend success stories from Alumni and more so people I know perso Not applicablelly", "Industry": "Manufacturing", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 9, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 404, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "A friend told me about it", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 6, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 61, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Independent Contractor Taxi Driver ", "WhyChooseForCareerGoals": "I believe Colaberry is one of the best schools in technology field  ", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 20, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 44, "WhyChooseForCareerGoals_stringindexer_transform": 114, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "TO GET KNOWLEDGE ON THE IT WORLD", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 23, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 373, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "to upgrade my career", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 4, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 27, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "None", "ClassType": "None", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Owner", "WhyChooseForCareerGoals": "Because of the good reviews ", "Industry": "Education", "YrsOnJob": 4, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 15, "ClassType_stringindexer_transform": 2, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 321, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 11}, {"ClassName": "DATA ANALYTICS  JUNE 01 2024 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Senior Manager", "WhyChooseForCareerGoals": "Referrals from close Friends and how it has changed their lives", "Industry": "Retail and Consumer Durables", "YrsOnJob": 7, "InformationConsumed": "Webinars", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 51, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 8, "WhyChooseForCareerGoals_stringindexer_transform": 262, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 07 2019 PLANO", "ClassType": "Live In  Person", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "improve my career and income", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 49, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 7, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jul 14 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": " Not applicable", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Webinars", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 48, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 1, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "India", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Alumni referral", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 10, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 6, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Cote d'Ivoire", "JobRole": "Self employee computer technician", "WhyChooseForCareerGoals": "I chose Colaberry to help reach my career because I heard a lot of good from people who took class with the school", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 5, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 13, "JobRole_stringindexer_transform": 35, "WhyChooseForCareerGoals_stringindexer_transform": 284, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Worked in the past in IT. Current home maker.", "WhyChooseForCareerGoals": "I have a friend who successfully completed the course and she suggested that it was a good option if I have to get into the IT job MARCHket", "Industry": "I am currently not employed", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 39, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 32, "WhyChooseForCareerGoals_stringindexer_transform": 178, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Manager", "WhyChooseForCareerGoals": "Colleague told me", "Industry": "Real Estate", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 43, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 270, "Industry_stringindexer_transform": 19, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "recomended by a friend", "Industry": "Entertainment and Leisure", "YrsOnJob": 10, "InformationConsumed": "None", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 5, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 172, "Industry_stringindexer_transform": 14, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Flexibility and overall sense of I want you to succeed that I felt from the site and w  or    d  of  mout.", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Perso Not applicablel recommendation from a trust worthy friend and a desire to move into a more applicable growing industry while learning new skills that I can one day use to help others ", "Industry": "Insurance", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 19, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 24, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 359, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "unemployed", "WhyChooseForCareerGoals": "referred by a friend", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 14, "WhyChooseForCareerGoals_stringindexer_transform": 90, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "None", "YrsOnJob": 10, "InformationConsumed": "None", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 9, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 18, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "SQLBI Bootcamp  Jul 08 2017 PLANO", "ClassType": "Live In  Person", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ghana", "JobRole": "Intern", "WhyChooseForCareerGoals": "I choose colaberry because i wanted a change in my life and that of my Family", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 56, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 10, "JobRole_stringindexer_transform": 10, "WhyChooseForCareerGoals_stringindexer_transform": 330, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Because of the practical training approach to deliver graduates who are ready for the job MARCHket", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 205, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "Data Analytics I with MS SQL Server BI  Sep 15 2018 PLANO", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Inf  or    mation you found on Facebook", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Food and Beverages", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 64, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 8, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "Heard good things about the program from a former student I was especially motivated by the job preparatio Not applicablend support aspect of the Colaberry program", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 7, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 278, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I was inspired by a friend who also attended Colaberry ", "Industry": "Food and Beverages", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 7, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 246, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Database admin", "WhyChooseForCareerGoals": "Strong reference from a friend ", "Industry": "Nonprofit", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 9, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 84, "WhyChooseForCareerGoals_stringindexer_transform": 188, "Industry_stringindexer_transform": 15, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "None", "WhyChooseForCareerGoals": "Because it seems interesting and I heard theres a good future in it", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 32, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 11, "WhyChooseForCareerGoals_stringindexer_transform": 365, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "flexibility of training", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 133, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Because the success story associated with it", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 25, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 306, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I came to know that Colaberry is the best place to be Data Scientist ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 14, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 253, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Healthcare   Ct Technologist", "WhyChooseForCareerGoals": "referral", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 26, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 52, "WhyChooseForCareerGoals_stringindexer_transform": 235, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "None", "ClassType": "None", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Partner", "WhyChooseForCareerGoals": "because of the good reviews and the content", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 15, "ClassType_stringindexer_transform": 2, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 7, "JobRole_stringindexer_transform": 6, "WhyChooseForCareerGoals_stringindexer_transform": 132, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "The fact that I can learn new skill i Not applicableshort period a time", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 390, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "Data Analytics I with MS SQL Server BI  Nov 17 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Positive feedback from alumni", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 0, "ClassName_stringindexer_transform": 71, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 73, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because it seems that I didnt have anyone guide me or take interest in my career Based upon the great reviews  I was convinced that this is what I needed", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 12, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 269, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "I like IT", "Industry": "Insurance", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 7, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 18, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "BI BootCamp  Feb 22 2014 Richardson", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I have hear success stories from former students and the guidance provided to obtai Not applicablejob is not really found with other schools", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 4, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 69, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 49, "Industry_stringindexer_transform": 12, "InformationConsumed_stringindexer_transform": 11}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "A friend introduced it to me and I listened to the success stories from the site", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 56, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Transitioning Veteran", "WhyChooseForCareerGoals": "The Data A Not applicablelytics focus program the reviews on course report the dates and times for the program and the military scholarship", "Industry": "Government", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 20, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 79, "WhyChooseForCareerGoals_stringindexer_transform": 155, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": " Not applicable", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Webinars", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 34, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 1, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 9}, {"ClassName": "Data Analytics I with MS SQL Server BI  Mar 10 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ghana", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Previous student", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 52, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 10, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 70, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I have a fried who is currently in Colaberry and also heard of some success Stories", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 23, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 289, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Medical technician", "WhyChooseForCareerGoals": "Because I had a lot of positive feedback about the school ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 14, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 7, "JobRole_stringindexer_transform": 34, "WhyChooseForCareerGoals_stringindexer_transform": 119, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "I prefer not to specify", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I know people who went through the program and are doing well", "Industry": "Finance and Financial Services", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 2, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 250, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "home maker", "WhyChooseForCareerGoals": "To learn data tools ", "Industry": "I am currently not employed", "YrsOnJob": 10, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 22, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 18, "WhyChooseForCareerGoals_stringindexer_transform": 91, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "60", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Timing", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 40, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 5, "Age_stringindexer_transform": 4, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 316, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Structure and help with resume job search", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 34, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 13, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "Good reputation from the few people i have interreacted with over the few months ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Webinars", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 41, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 7, "WhyChooseForCareerGoals_stringindexer_transform": 233, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "independent ", "WhyChooseForCareerGoals": "alumni", "Industry": "Transportation and Delivery", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 85, "WhyChooseForCareerGoals_stringindexer_transform": 300, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Colaberry gets straight to the point If I was to choose a major in the same field at a university it would take me longer", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 39, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 28, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "It works", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 7, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 378, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "yes", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 10, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "BI BootCamp  Nov 7 2015 Online", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "India", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I took that Colaberry as one of my friend told me about it and one day we went to Boston MA joined the class and it is now being my career goal because I have a dream to work in this field since I was high school ", "Industry": "Manufacturing", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 55, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 380, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "i heard success stories", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 8, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 344, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Manager", "WhyChooseForCareerGoals": "None", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Webinars", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 12, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 9}, {"ClassName": "Data Analytics I with MS SQL Server BI  May 5 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Zimbabwe", "JobRole": "RN", "WhyChooseForCareerGoals": "Friend", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 73, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 11, "JobRole_stringindexer_transform": 67, "WhyChooseForCareerGoals_stringindexer_transform": 12, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 11}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I trusted that the information shared Colaberry Alumin shared with me was credible", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 17, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 266, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "That colabery would fulfil dreams ", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Currently i am unemployed", "WhyChooseForCareerGoals": "i hear about colaberry a lot of good things the school is very supportive ", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 30, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 12, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 51, "WhyChooseForCareerGoals_stringindexer_transform": 279, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Manager", "WhyChooseForCareerGoals": "Assistance is job placement", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 10, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 340, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "Colaberry will help me get a carrier path The tuition is also affordable", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 44, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 352, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Zimbabwe", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "reviews on social media", "Industry": "Food and Beverages", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 19, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 11, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 274, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Volunteer", "WhyChooseForCareerGoals": "Achieve a new career", "Industry": "Education", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 17, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 13, "WhyChooseForCareerGoals_stringindexer_transform": 177, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "I prefer not to specify", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "Heard good things about Colaberry from friends", "Industry": "Government", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 12, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 2, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 222, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "Its short term training and well known", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 187, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "Duration of courses and class", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 13, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 387, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "None", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "HAVE HEARD A LOT OF GOOD FEEDBACK ABOUT COLABBERY", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "None", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 6, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 6, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 6, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 41, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Knowing a couple of people who have successfully completed the course and have gotten placed Seeing the way their lives have changed inspired me to do something more with my life and career!", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 29, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 323, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Senior Manager", "WhyChooseForCareerGoals": "I have two cousins that graduated from this program", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 35, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 8, "WhyChooseForCareerGoals_stringindexer_transform": 350, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Because of the testimonies online about the particular school program", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 11, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 4, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 7, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 403, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 27, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 6, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 11}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Other", "WhyChooseForCareerGoals": "I have heard so many people are doing better after completing SQL from Colaberry That makes me interested", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 37, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I have heard good things", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 113, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Burundi", "JobRole": "Owner", "WhyChooseForCareerGoals": "it has a good reputatio Not applicablend i loved the way you take care of your students untill they are good to go for jobd", "Industry": "Manufacturing", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 26, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 14, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 136, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "None", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 19, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Partner", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 4, "InformationConsumed": "Webinars", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 33, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 6, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 6, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Referral", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 22, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 2, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "It helped a friend of mine reach his goals", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 26, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 8, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 33, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 7, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Manager", "WhyChooseForCareerGoals": "Provided a scholarship opportunity", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 286, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 11}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "na", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 11, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 70, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "None", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "It was recommended by a family member who knows someone that completed the course It came highly recommended", "Industry": "Business Support and Logistics", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 5, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 94, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Customer Service Representative", "WhyChooseForCareerGoals": "Good Reputation ", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 30, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 46, "WhyChooseForCareerGoals_stringindexer_transform": 292, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "The school has a great reputatio Not applicablend the goal is to help people wi Not applicablejob as long as one puts in the work I know its a guarantee", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 399, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Sudan", "JobRole": "Manager", "WhyChooseForCareerGoals": "referral feedback about job hunting ", "Industry": "Business Support and Logistics", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 38, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 16, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 261, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Full time Student", "WhyChooseForCareerGoals": "I heard it was the quickest place to get your data a Not applicablelytics diploma degree and thats what I needed in my life at that point in time So here I am", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 22, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 48, "WhyChooseForCareerGoals_stringindexer_transform": 370, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Diversity", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 21, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 106, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "i want to lear Not applicablend add valuable skill", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 396, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Partner", "WhyChooseForCareerGoals": "success story", "Industry": "Construction Machinery and Homes", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 5, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 6, "WhyChooseForCareerGoals_stringindexer_transform": 8, "Industry_stringindexer_transform": 17, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Seeing results ", "Industry": "Manufacturing", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 5, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 36, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Was a Financial Analyst currently out of Job", "WhyChooseForCareerGoals": "THE TESTIMONIALS OF PAST STUDENT", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 39, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 4, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 90, "WhyChooseForCareerGoals_stringindexer_transform": 126, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Canada", "JobRole": "Management  C Level", "WhyChooseForCareerGoals": "A referral from a friend", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 29, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 20, "JobRole_stringindexer_transform": 9, "WhyChooseForCareerGoals_stringindexer_transform": 179, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  June 1  2019 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Individuals who had gone through the course and shared their st  or    ies.", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Had good reviews and people had their stories to share", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 50, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 22, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 357, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "peoples success st  or    ies", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "nurse", "WhyChooseForCareerGoals": "everyone i talked to referred me to this school", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 9, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 16, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 29, "WhyChooseForCareerGoals_stringindexer_transform": 72, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "None", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "no", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 5, "ClassName_stringindexer_transform": 17, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 6, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 6, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 386, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ghana", "JobRole": "Certified nurses aide ", "WhyChooseForCareerGoals": "A friend recommended it to me", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 32, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 10, "JobRole_stringindexer_transform": 30, "WhyChooseForCareerGoals_stringindexer_transform": 280, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Inf  or    mation I found from friend.", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Yes ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 11, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 27, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 200, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "The reviews and testimonies", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 89, "Industry_stringindexer_transform": 7, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jul 14 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "60", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "It was the only opportunity i had", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 48, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 4, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 24, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Having got inf  or    mation from someone whos got a decent job after taking your course.", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Listening to other peoples stories", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 16, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 11, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 117, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 30 2019 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Referral", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 54, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 2, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Currently Not working", "WhyChooseForCareerGoals": "I have learnt Data science by myself but I do not have direct experience in IT industry I want to build my portfolio and network for career growth Looking forward to data a Not applicablelytics as first step toward industry", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 14, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 72, "WhyChooseForCareerGoals_stringindexer_transform": 299, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP   Mar 23 2019 PLANO", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Learn IT processess", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 62, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 50, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 07 2019 PLANO", "ClassType": "Live In  Person", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Rwanda", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Because of Alumni Success The School has a good rating and I wanted to do data science", "Industry": "Automotive", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 49, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 9, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 204, "Industry_stringindexer_transform": 16, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "A friend highly recommended your school ", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 16, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 17, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 46, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "From  the feedback I get from my friends who have attended the program in the  past indicates the program is quite rich and  creates a good launching pad into the  MARCHket especially for beginners like me", "Industry": "Government", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 401, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Senior Tech Computer Desktop Support", "WhyChooseForCareerGoals": "To better advance in my career by identifying the best opportunities of employment", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Webinars", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 18, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 24, "WhyChooseForCareerGoals_stringindexer_transform": 355, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 9}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Mexico", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I want practical skills soon", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 18, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 12, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 256, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Housewife", "WhyChooseForCareerGoals": "I chose Colaberry School of Data A Not applicablelytics  Colaberry SODA  because it perfectly aligns with my career aspirations and offers the ideal platform to transition into the dy Not applicablemic field of data a Not applicablelytics As someone with a background in Executive Assisting and Project Ma Not applicablegement Ive developed a keen eye for detail a love for problem  solving and a k Not applicableck for optimizing processes These skills coupled with my passion for math and a Not applicablelytics make data a Not applicablelytics a  Not applicabletural progression for me  What drew me specifically to Colaberry SODA is its reputation for fostering a comprehensive understanding of both the theoretical and practical aspects of data a Not applicablelysis The curriculums emphasis on real  world applications and hands  on experience will not only equip me with the necessary technical skills but also provide me with the confidence to tackle complex a Not applicablelytical challenges i Not applicableny industry  Moreover the flexibility offered by Colaberry SODA including remote learning options is incredibly appealing to me As someone who values the freedom to work remotely and pursue my passions outside of work this flexibility ensures that I ca Not applicablechieve a healthy work  life balance without compromising on my professio Not applicablel development  Furthermore the fact that my sister husband and brother  in  law have all enrolled in Colaberry SODA speaks volumes about the quality of educatio Not applicablend the opportunities it offers Both my sister and husband are Colaberry SODA alumni and witnessing their successful transition into the field of data a Not applicablelytics has only solidified my decision to choose Colaberry SODA for my own career journey  Ultimately I believe that Colaberry SODA will not only help me transition into a rewarding career in data a Not applicablelytics but also provide me with the tools and opportunities to excel i Not applicablerapidly evolving industry while maintaining the lifestyle I desire", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 35, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 33, "WhyChooseForCareerGoals_stringindexer_transform": 314, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "To be successful and to reach my IT career goal ", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 32, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 103, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Mexico", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Great instructors I also have a lot of friends that have finished the course and have a great jobs Also its a short term course and not a    year university I also am enrolled in college I attend Colin Community College  ", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 2, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 12, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 413, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Based on strong feedbacks", "Industry": "Insurance", "YrsOnJob": 2, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 10, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 165, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Business Development Analyst", "WhyChooseForCareerGoals": "recommended", "Industry": "Food and Beverages", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 42, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 77, "WhyChooseForCareerGoals_stringindexer_transform": 360, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "NURSE", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 9, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 38, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard this is a great program", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 42, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 296, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Student", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "None", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 34, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 23, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "the success stories   feedback", "Industry": "Insurance", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 20, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 230, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "because to have easey life", "Industry": "Manufacturing", "YrsOnJob": 1, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 8, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 86, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Intern", "WhyChooseForCareerGoals": "my friend give me good advice about your platform", "Industry": "Government", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 4, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 10, "WhyChooseForCareerGoals_stringindexer_transform": 129, "Industry_stringindexer_transform": 5, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Job oriented", "Industry": "Advertising and MARCHketing", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 17, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 338, "Industry_stringindexer_transform": 13, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "From what i heard and understand your teaching approach is very sought after and essential remedy to my shortcomings", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 16, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 5, "WhyChooseForCareerGoals_stringindexer_transform": 141, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "I couldnt find any other school ", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Counselor", "WhyChooseForCareerGoals": "None", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "None", "NetPromotorScore": 3, "ClassName_stringindexer_transform": 42, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 30, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 28, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 8, "InformationConsumed_stringindexer_transform": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 7, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Growth and development ", "Industry": "Insurance", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7, "ClassName_stringindexer_transform": 20, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 43, "Industry_stringindexer_transform": 10, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Truck Driver", "WhyChooseForCareerGoals": "I was referred by a friend and liked what I saw", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 20, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 21, "WhyChooseForCareerGoals_stringindexer_transform": 383, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Information Technology", "WhyChooseForCareerGoals": "Because I am a vetera Not applicablend this school cares about veterian", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 78, "WhyChooseForCareerGoals_stringindexer_transform": 69, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I think its the best fit for me", "Industry": "Real Estate", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 154, "Industry_stringindexer_transform": 19, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "SQLBI Bootcamp  Jan 14 2017 IRVING", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I was convinced that it would serve as my ticket out of the epitome of a dead  end job", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 61, "ClassType_stringindexer_transform": 1, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 351, "Industry_stringindexer_transform": 12, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 4, "ClassName_stringindexer_transform": 16, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 3, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 4, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 3, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "in between jobs", "WhyChooseForCareerGoals": "alumini", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 18, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 57, "WhyChooseForCareerGoals_stringindexer_transform": 225, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 12}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "its more in to computer science and i feel like its the right place to start my future goals with colabery ", "Industry": "Manufacturing", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 0, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 2, "WhyChooseForCareerGoals_stringindexer_transform": 248, "Industry_stringindexer_transform": 9, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Manager", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 22, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 4, "Age_stringindexer_transform": 3, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 4, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 4, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "unemployeed", "WhyChooseForCareerGoals": "None", "Industry": "Food and Beverages", "YrsOnJob": 7, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 9, "ClassName_stringindexer_transform": 8, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 1, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 15, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 11, "InformationConsumed_stringindexer_transform": 11}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I have heard testimonies about your school", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 3, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 308, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I have heard a lot of good reviews both online and from a friend of mine who took the class", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 39, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 1, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 191, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard from my friends that you encourage them to do their best and to work hard", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 36, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 2, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 5, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 100, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Positive Feedback from friends", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 6, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 2, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 332, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "None", "ClassType": "None", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "i am a success st  or    y", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "DBAReport Developer", "WhyChooseForCareerGoals": "I am a Not applicablelumni", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 15, "ClassType_stringindexer_transform": 2, "Education_stringindexer_transform": 4, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 17, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 7, "JobRole_stringindexer_transform": 76, "WhyChooseForCareerGoals_stringindexer_transform": 161, "Industry_stringindexer_transform": 2, "InformationConsumed_stringindexer_transform": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "60", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 34, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 2, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 4, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 3, "WhyChooseForCareerGoals_stringindexer_transform": 0, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Not employed ", "WhyChooseForCareerGoals": "Have come to understand how important a data a Not applicablelyst is i Not applicablen organization ", "Industry": "I am currently not employed", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 6, "ClassName_stringindexer_transform": 36, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 1, "CountryOfOrgin_stringindexer_transform": 6, "JobRole_stringindexer_transform": 92, "WhyChooseForCareerGoals_stringindexer_transform": 237, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I liked your program and heard many good things about you", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 17, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 3, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 1, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 0, "WhyChooseForCareerGoals_stringindexer_transform": 48, "Industry_stringindexer_transform": 6, "InformationConsumed_stringindexer_transform": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Management  C Level", "WhyChooseForCareerGoals": "because of testimonies", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10, "ClassName_stringindexer_transform": 1, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 3, "JobRole_stringindexer_transform": 9, "WhyChooseForCareerGoals_stringindexer_transform": 362, "Industry_stringindexer_transform": 0, "InformationConsumed_stringindexer_transform": 1}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Development Specialist", "WhyChooseForCareerGoals": "Because I believe that your organization is the best place for me to receive quality training to achieve my desired career change ", "Industry": "Nonprofit", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 5, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 0, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 1, "Age_stringindexer_transform": 2, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 40, "WhyChooseForCareerGoals_stringindexer_transform": 46, "Industry_stringindexer_transform": 15, "InformationConsumed_stringindexer_transform": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Its well structured and has a good reputation for job placement", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 8, "ClassName_stringindexer_transform": 13, "ClassType_stringindexer_transform": 0, "Education_stringindexer_transform": 5, "HouseholdIncome_stringindexer_transform": 0, "No  EnrollReason_stringindexer_transform": 0, "Age_stringindexer_transform": 0, "Gender_stringindexer_transform": 0, "CountryOfOrgin_stringindexer_transform": 0, "JobRole_stringindexer_transform": 1, "WhyChooseForCareerGoals_stringindexer_transform": 16, "Industry_stringindexer_transform": 1, "InformationConsumed_stringindexer_transform": 10}], "FE": [{"transformationsData": [{"feature_label": "ClassName", "transformation_label": "String Indexer"}], "feature": "ClassName", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "BI BootCamp  Feb 22 2014 Richardson", "max": "SQLBI Bootcamp  May 22 2021 ONLINE", "missing": "0", "distinct": "77"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "ClassName"}, {"transformationsData": [{"feature_label": "ClassType", "transformation_label": "String Indexer"}], "feature": "ClassType", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Live In  Person", "max": "Self Paced Online", "missing": "0", "distinct": "4"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "ClassType"}, {"transformationsData": [{"feature_label": "Education", "transformation_label": "String Indexer"}], "feature": "Education", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "   year of college", "max": "Some graduate school", "missing": "0", "distinct": "8"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Education"}, {"transformationsData": [{"feature_label": "HouseholdIncome", "transformation_label": "String Indexer"}], "feature": "HouseholdIncome", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "  ", "max": "  ", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "HouseholdIncome"}, {"transformationsData": [{"feature_label": "No  EnrollReason", "transformation_label": "String Indexer"}], "feature": "No  EnrollReason", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Advertising", "max": "the way tuition is paid. its a game changer to older school models.", "missing": "0", "distinct": "31"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "No  EnrollReason"}, {"transformationsData": [{"feature_label": "Age", "transformation_label": "String Indexer"}], "feature": "Age", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "36.95", "stddev": "8.71", "min": "21", "max": "None", "missing": "0", "distinct": "6"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Age"}, {"transformationsData": [{"feature_label": "Gender", "transformation_label": "String Indexer"}], "feature": "Gender", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Female", "max": "None", "missing": "0", "distinct": "4"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Gender"}, {"transformationsData": [{"feature_label": "CountryOfOrgin", "transformation_label": "String Indexer"}], "feature": "CountryOfOrgin", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Burundi", "max": "Zimbabwe", "missing": "0", "distinct": "25"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CountryOfOrgin"}, {"transformationsData": [{"feature_label": "JobRole", "transformation_label": "String Indexer"}], "feature": "JobRole", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Accountant", "max": "unemployeed", "missing": "0", "distinct": "93"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "JobRole"}, {"transformationsData": [{"feature_label": "WhyChooseForCareerGoals", "transformation_label": "String Indexer"}], "feature": "WhyChooseForCareerGoals", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "   To fill the gap in knowledge what the employer needs and what I have    Communication challenges specially in interviews", "max": "yes", "missing": "0", "distinct": "416"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "WhyChooseForCareerGoals"}, {"transformationsData": [{"feature_label": "Industry", "transformation_label": "String Indexer"}], "feature": "Industry", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Advertising and MARCHketing", "max": "Utilities Energy and Extraction", "missing": "0", "distinct": "22"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Industry"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "YrsOnJob", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "3.82", "stddev": "2.98", "min": "0", "max": "10", "missing": "0"}, "updatedLabel": "YrsOnJob"}, {"transformationsData": [{"feature_label": "InformationConsumed", "transformation_label": "String Indexer"}], "feature": "InformationConsumed", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Daily Emails\u00a0", "max": "Weekly Emails\u00a0", "missing": "0", "distinct": "14"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "InformationConsumed"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "NetPromotorScore", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "8.48", "stddev": "1.85", "min": "0", "max": "10", "missing": "0"}, "updatedLabel": "NetPromotorScore"}, {"feature": "ClassName_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "21.34", "stddev": "17.31", "min": "0.0", "max": "76.0", "missing": "0"}, "updatedLabel": "ClassName_stringindexer_t..."}, {"feature": "ClassType_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.1", "stddev": "0.38", "min": "0", "max": "3", "missing": "0"}, "updatedLabel": "ClassType_stringindexer_t..."}, {"feature": "Education_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.46", "stddev": "1.51", "min": "0.0", "max": "7.0", "missing": "0"}, "updatedLabel": "Education_stringindexer_t..."}, {"feature": "HouseholdIncome_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "HouseholdIncome_stringind..."}, {"feature": "No  EnrollReason_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.82", "stddev": "4.29", "min": "0.0", "max": "30.0", "missing": "0"}, "updatedLabel": "No  EnrollReason_stringin..."}, {"feature": "Age_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.97", "stddev": "1.05", "min": "0.0", "max": "5.0", "missing": "0"}, "updatedLabel": "Age_stringindexer_transfo..."}, {"feature": "Gender_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.47", "stddev": "0.54", "min": "0", "max": "3", "missing": "0"}, "updatedLabel": "Gender_stringindexer_tran..."}, {"feature": "CountryOfOrgin_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.83", "stddev": "3.75", "min": "0.0", "max": "24.0", "missing": "0"}, "updatedLabel": "CountryOfOrgin_stringinde..."}, {"feature": "JobRole_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "10.5", "stddev": "20.82", "min": "0.0", "max": "92.0", "missing": "0"}, "updatedLabel": "JobRole_stringindexer_tra..."}, {"feature": "WhyChooseForCareerGoals_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "172.97", "stddev": "133.95", "min": "0.0", "max": "415.0", "missing": "0"}, "updatedLabel": "WhyChooseForCareerGoals_s..."}, {"feature": "Industry_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "4.68", "stddev": "4.88", "min": "0.0", "max": "21.0", "missing": "0"}, "updatedLabel": "Industry_stringindexer_tr..."}, {"feature": "InformationConsumed_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "3.12", "stddev": "3.35", "min": "0.0", "max": "13.0", "missing": "0"}, "updatedLabel": "InformationConsumed_strin..."}], "samplecount": 500, "message": "Successfully executed", "status": 1, "userid": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "FEGraph": [{"values": {"label": ["DATA ANALYTICS  MARCH 30 2024 ONLINE", "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "SQLBI Bootcamp  April 24 2021 ONLINE", "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "SQLBI Bootcamp  Jun 26 2021 ONLINE", "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "DATA ANALYTICS  JUNE 29 2024 ONLINE", "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "None", "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "DATA ANALYTICS  JUNE 01 2024 ONLINE", "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "Data Analytics I with MS SQL Server BI  Jul 14 2018 ONLINE", "DATA ANALYTICS  APRIL 27 2024 ONLINE", "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "Data Analytics I with MS SQL Server BI  Jan 6 2018 IRVING", "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "DATA ANALYTICS BOOTCAMP  Jan 18 2020 ONLINE", "SQLBI Bootcamp  Mar 18 2017 PLANO TX", "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "SQLBI Bootcamp  May 22 2021 ONLINE", "DATA ANALYTICS BOOTCAMP   July 13 2019 PLANO", "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "SQLBI Bootcamp  Jul 08 2017 PLANO", "DATA ANALYTICS BOOTCAMP  June 1  2019 ONLINE", "DATA ANALYTICS  JULY 27 2024 ONLINE", "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "Data Analytics I with MS SQL Server BI  Mar 10 2018 PLANO", "Data Analytics I with MS SQL Server BI  Jan 13 2018 PLANO", "Data Analytics I with MS SQL Server BI  Sep 8 2018 ONLINE", "BI BootCamp  July 23rd 2016 Plano TX", "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "IPBC DIRECT SIGN UP  2024", "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "BI BootCamp  June 14 2014 Richardson", "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "Data Analytics I with MS SQL Server BI  Mar 10 2018 ONLINE", "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "BI BootCamp  Nov 7 2015 Online", "DATA ANALYTICS BOOTCAMP  Mar 30 2019 ONLINE", "SQLBI Bootcamp  Mar 18 2017 ONLINE", "BI BootCamp  Jan 3 2015 Richardson TX", "DATA ANALYTICS BOOTCAMP  July 20  2019 ONLINE", "DATA ANALYTICS BOOTCAMP  Sep 07 2019 PLANO", "Data Analytics I with MS SQL Server BI  Jul 14 2018 PLANO", "Data Analytics I with MS SQL Server BI  Sep 8 2018 IRVING", "Data Analytics I with MS SQL Server BI  Sep 15 2018 PLANO", "Data Analytics I with MS SQL Server BI  Nov 17 2018 ONLINE", "BI BootCamp  Feb 22 2014 Richardson", "Data Analytics I with MS SQL Server BI  May 5 2018 ONLINE", "DATA ANALYTICS BOOTCAMP   Mar 23 2019 PLANO", "SQLBI Bootcamp  Jan 14 2017 IRVING"], "data": [6, 12, 14, 6, 11, 7, 19, 20, 16, 13, 7, 7, 11, 12, 6, 8, 13, 9, 7, 15, 3, 9, 7, 7, 3, 6, 6, 11, 12, 11, 18, 6, 1, 5, 15, 11, 7, 16, 6, 4, 2, 5, 5, 1, 12, 9, 8, 2, 3, 1, 10, 1, 1, 1, 1, 6, 6, 1, 10, 1, 5, 2, 6, 2, 2, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "ClassName", "count": 77, "min": "BI BootCamp  Feb 22 2014 Richardson", "max": "SQLBI Bootcamp  May 22 2021 ONLINE"}, {"values": {"label": ["Live Online", "None", "Live In  Person", "Self Paced Online"], "data": [463, 11, 25, 1]}, "label": "ClassType", "count": 4, "min": "Live In  Person", "max": "Self Paced Online"}, {"values": {"label": ["Graduated from college", "   years of college", "Graduated from high school", "Some graduate school", "Completed graduate school", "   year of college", "Did not attend school", "None"], "data": [186, 102, 67, 21, 90, 31, 1, 2]}, "label": "Education", "count": 8, "min": "   year of college", "max": "Some graduate school"}, {"values": {"label": ["  "], "data": [500]}, "label": "HouseholdIncome", "count": 1, "min": "  ", "max": "  "}, {"values": {"label": ["Friend  or close relationship", "Friend  or  close relationship", "info I found on google", "The course content.", "Advertising", "Community", "Online classes", "None", "On campus classes", "F  or    mer Student", "Employer", "It was the few interactions with the staff that seemed very genuine. I get the sense that everyone at Colaberry wants to see you become the next success st  or    y and thats exactly what I want. ", "Feedback from f  or    mer students", "I want better life.", "Veteran assistance", "Inf  or    mation you found on Facebook", "curriculum", "the way tuition is paid. its a game changer to older school models.", "n  or  a", "Info you found on LinkedIn", "Help getting job after courses completed", "Testimonials from Past Students outlining how their  experience at Colaberry contributed to their career success.", "Full Scholarship", "Flexibility and overall sense of I want you to succeed that I felt from the site and w  or    d  of  mout.", "That colabery would fulfil dreams ", "Individuals who had gone through the course and shared their st  or    ies.", "peoples success st  or    ies", "Inf  or    mation I found from friend.", "Having got inf  or    mation from someone whos got a decent job after taking your course.", "I couldnt find any other school ", "i am a success st  or    y"], "data": [1, 242, 2, 1, 13, 43, 134, 10, 21, 1, 11, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "No  EnrollReason", "count": 31, "min": "Advertising", "max": "the way tuition is paid. its a game changer to older school models."}, {"values": {"label": ["50", "30", "40", "21", "60", "None"], "data": [79, 165, 205, 42, 7, 2]}, "label": "Age", "count": 6, "min": "21", "max": "None"}, {"values": {"label": ["Male", "I prefer not to specify", "Female", "None"], "data": [273, 5, 220, 2]}, "label": "Gender", "count": 4, "min": "Female", "max": "None"}, {"values": {"label": ["Ghana", "Nigeria", "Ethiopia", "United States", "Kenya", "India", "Eritrea", "None of the above", "Cameroon", "Rwanda", "Sudan", "Togo", "South Sudan", "Uganda", "Burundi", "Zambia", "Cote d'Ivoire", "Zimbabwe", "Sierra Leone", "Congo Democratic Republic of the", "China", "Morocco", "Mexico", "Tunisia", "Canada"], "data": [5, 64, 82, 149, 75, 22, 25, 26, 15, 5, 2, 1, 1, 9, 2, 1, 2, 4, 1, 2, 1, 1, 3, 1, 1]}, "label": "CountryOfOrgin", "count": 25, "min": "Burundi", "max": "Zimbabwe"}, {"values": {"label": ["Partner", "None", "Currently unemployed", "Individual Contributor", "Real estate agent ", "Truck Driver", "Hourly Employee", "Management  C Level", "Researcher", "Not employed for now", "Team Lead", "Other", "Intern", "Owner", "house wife", "Unemployed", "Manager", "Database Administrator", "unemployed", "pharmacy technician", "delivery", "manufacturing technician", "Working a little from home", "I do not have awork", "Preparing to re enter the workforce after physical therapy due to an auto accident.", "Independent contractor", "small business entrepreneur", "Driver", "PARALEGAL", "Tax Preparer", "Independent Contractor;Process Server", "stay at home mom", "Insurance Adjuster Realtor", "Correctional officer", "Volunteer", "Senior Manager", "currently not working", "student", "Independent contractor   health care", "Stay home mom and started small business name    Days LLC", "senior analyst", "SELF EMPLOYED", "Contractor", "Home Maker", "Teacher", "Accountant", "College Student", "Driver ", "Army", "MARCHketing Director", "Service Desk Analyst", "Dispatcher", "Configuration Analyst II", "Commission employee ", "Business Analyst ", "Analyst", "Student", "Self employed", "home maker", "self employed", "unemployeed", "none", "Brewer", "Housemaker", "independent contractor", "Not working", "Independent Contractor Taxi Driver ", "Self employee computer technician", "Worked in the past in IT. Current home maker.", "Database admin", "Healthcare   Ct Technologist", "Transitioning Veteran", "Medical technician", "independent ", "RN", "Currently i am unemployed", "na", "Customer Service Representative", "Full time Student", "Was a Financial Analyst currently out of Job", "nurse", "Certified nurses aide ", "Currently Not working", "Senior Tech Computer Desktop Support", "Housewife", "Business Development Analyst", "NURSE", "Counselor", "Information Technology", "in between jobs", "DBAReport Developer", "Not employed ", "Development Specialist"], "data": [10, 4, 2, 61, 1, 2, 153, 5, 2, 1, 39, 71, 5, 19, 1, 6, 26, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 3, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "JobRole", "count": 93, "min": "Accountant", "max": "unemployeed"}, {"values": {"label": [" heard  success stories from friends who do not have IT skills but Colaberry trained them and are now IT professio Not applicablels ", "None", "In the near future information technology is a new form of business growth that is my pla Not applicablend strong demand", "I did my research and trust that the knowledge is here ", "Referred to you from a friend  ", "I would like to have an IT background to help complement what I am studying in college  Economics ", "My friend went through the program and he has achieved success since that time And he felt that I could also achieve the same success", "success story", "I heard the testimonials and believe in them", "To improve my career", "l listened to success stories and l am at that point of trying to change my life to the better", "I was informed of the prompt assistance help with securing jobs", "referral from friends", "Better job", "I wanted to work from home", "I want to work by IT database", "I have a couple of friends going through classes at the moment and a recent graduate who have all given me motivatio Not applicablel information on how to build upon my future", "The great feedbacks I got from my closest friends", "I believe in skill set that Ill acquire with the program", "I heard that colaberry is the perfect BOOTCAMP center on data science A Not applicablelytics field and also helps until getting a job ", "I referred by a friend who explained the advantages ", "I have heard from friends who have taken classes great things about your school and I wanted to do that for myself and better my currier", "  All the best  feedback from friends ", "Because it is skill oriented ", "It was recommended to me", "I need something that I can do while working my current job", "job", "because it is the best data a Not applicablelytics school ", "positive reviews of the school", "Your school is good a teaching data a Not applicablelytics", "I heard from my friend that it is one of the best", "Because i saw the success stories", "WORDS FROM FRIEND", "heard good reports about the school", "I HEARD GREAT NEWS FROM A  FRIEND", "For Money", "learning proces is good  ", "I wanted an instructor led ML course", "I witnessed the success story of a family member who is a Not applicablelumni of Colaberry She is definitely living the American Dream I was recently let go at my job So this was absolutely the right timing I enrolled", "suggestion from afriend", "I love the fact that colberry is online and flexible payment options are available the fact that colaberry provides you with a one on one mentor to help you through the course work on your resume and help you find a job and still provide mentorship and assistance when you need help at your new job after the course", "it was cheaper and influence from friends that went to your school", " I have seen many practical results which are graduates from your courses", "I hear noting but success from all the people I talk to that attended  Colaberry  ", "I have been searching for a school that are excel at data A Not applicablelytics and based on the information I got from friends Colaberry is the best place to equip myself in the area of data a Not applicablelytics ", "Convenience of online learning  and reputation ", "I have heard good things about the school from a friend", "Because of the success stories attached to the school", "Good reviews from family members", "Highly Recommended by a Friend", "GOOD REVIEW ", "success stories heard from my friends and people around me ", "The entire program structure goes beyond the ordi Not applicablery concepts of many educatio Not applicablel Institutions", "Neighbor turned friend    referral ", "Because l have a friend who got his certificate here and he now has a great stable job ", "Statistics and training", "For the fact that it is the best place that gets me ready for a job", "My brother in  law attended years ago and hes making great money", "My friend told me that Colaberry is a good school for data a Not applicablelytics", "After considering other options I chose Colaberry because of the work that they have done with military veterans It lets me know that with hard work and focus I ca Not applicablechieve my goal of entering the IT field just as other veterans have done", "because couple friends told  me about it", "very good curriculum ", "because I heard a lot from my friend and his friends who got their job after taking this program", "Familiar faces and the story behind how it all began", "Good feedback from former students", "Students success Stories", "I heard a good story about Colaberry", "To help me understand my courses and further my career", "heard of many successful stories and the i liked the way of teaching and homeworks", "seemed easy and understandable", "A friend did the program and loved it I have been wanting to do something similar to this but never knew where to start", "I have done some research and data a Not applicablelyst is what I want", "Professio Not applicablelism and high level of experience in problem solving and delivery of required knowledge", "Success stories", "Structure and help with resume job search", "I chose Colaberry after speaking to a friend whose currently been enrolled for about a month now She shared her experience with me and so far I am impressed I think this school will give me a foot in the door to help me reach my career goal", "Because I to have a job in IT field", "Success rate", "friends were there ", "Speaking to a friend", "Because I have two close friends who graduated from your school they are working from home and are making good money", "Great reviews from past students", "Its well structured and has a good reputation for job placement", "Was referred to by a former studient ", "A FRIEND TOLD ME ABOUT THE COURSE", "REFERRAL FROM CURRENT STUDENT   PAULINE KAMERE", "I was looking for a career to start working towards", "what people say", "career desires and success stories from people who went through colaberry and their lives changed positively", "best reviews", "We are headed into the digital world if I MAY say everything today you can purchase at the convenience of your device I figured MAYbe it wouldnt hurt to give this a try to be Familiar with technology and turn this occupation into a career", "Training and job opportunities", "Recommendations from friends", "Due to knowing someone perso Not applicablelly who attended and was successful showed the goal was obtai Not applicableble and tangible as long as i stayed determined ", "to enhance my skills and knowledge in IT Field ", "better pay", "I have heard just extraordi Not applicablery reviews about this establishment and I might want to go to this foundation to future my instruction", "Vetera Not applicablessistance and job placement assistance", "reports from alumni", "I know someone who completed the course and heard great things about the program", "Was motivated about the successes of the other students", "To advance career", "GOOD REFERRAL", "I heard many students get a good paying job and i want to part of it too ", "Referral ", "because i hered that is the better choise in here where i live and i proved what i hered ", "To be fi Not applicablencially independent", "Ive seen how it has changed lives", "The school normalizes data a Not applicablelytics i Not applicableway that has one thinking it is relatable to every business We must simply put in the time to learn its format and techniques ", "Studied and friends recommended me", "Practical application", "Because I was highly recommended to the school by my friend who graduated from your program successfully", "I wanted a career change into the IT business and Colaberry i Not applicableddition to being in the same city where i live it came in on top in my research ", "alumni story", "Referred from a friend of friend that he knew took the course and made a career change  He is now making really good money just starting out  ", "Recommendation from friend", "great value for money and time", "Job improvement and salary", "Success story from a friend", "great BOOTCAMP curriculum ", "Referred by a friend", "interesting", "I like how you guys help your students eve Not applicablefter they graduate ", "I heard that it was hands on training supported with videos which was my preferred way of learning", "Heard you have a proven track record of successfully training and helping students succeed ", "Module and tutorial o Not applicablece a week", "its growing day by day", "Its rated very highly", "It seems simple to communicate", "It comes highly recommended", "My friend had provided good feedback about the program", "Ive heard from others who have taken the course how it changed their life", "TO improve quality of life", "I read that Colaberry has good reviews so want to see and try it myself with a leap of faith", "Colaberry is The nearest school I know ", "the referral spoke highly of the school and the programme", "The good reputation of the school", "Speed Cost Track Record", "GOOD SUCCESS STORIES", "Reaching my fi Not applicablencial goals in my current career will be very challenging", "A friend highly recommended your school ", " testimony of a friend", "A coworker informed me about the program and I was interested in improving myself as well as learning skills that will prepare me for the future ", "I enjoyed the open house and I was encouraged by a friend", "I received encouragement from the cousin of a friend who completed the data a Not applicablelytics BOOTCAMP course", "because of the positive feedback i have received", "Referral from a trusted source ", "Alumni testimony and success story ", "to improve my life", "good rewiews", "The curriculum is what stood out to me", "It was recommended by a friend who is in the IT world", "Enhance career in short period of time by learning industry required skills", "I heard good things about school and my friend got job too", "It has the best  program and boot camp structure as per advice from a Not applicablelumni its can be done online with flexible schedules Military scholarship and generally welcoming and helpful environment when taking the courses", "yes", "Affordability", "I was referred by a friend after doing my research he really did recommend this school", "good goodwill", "to improve myself and change my career", "Heard very positive review Class time matches my schedule ", "I heard of only success stories", "TO IMPROVE AND CHANGE MY SELF FOR BETTER CEREER", " Not applicable", "I chose your school because traditio Not applicablel education in the US is failing kids flat There is a lot of skills gap that traditio Not applicablel    years universities even IVY league one cant fix Colaberry is better than coursera", "Lots of success stories ", "Well organize and oriented details ", "interview readiness", "cause of the success stories from friends", "On the job training and assisting with job hiring", "My cousin recommended it; its a worthwhile career", "Recommended", "Teaching process", "I feel it will bring me right where I want to be  and other colleges like universities would just put me in debt  I also love that the school is hands on", "Friend referral", "because i believe it will help me get a deceit job", "Have read more about the reviews ", "A friends recommendation ", "I am hoping to gain experience and hopefully a well paying job afterwards", "I love the school curriculum and how the studies are structured Also success stories from friends ", "I wanted to change career as I just moved to America from Ca Not applicableda and this seem to be the best choice as my family friend spoke highly of this school ", "Because colaberry is a reference now to train people and this peoples get a jobs and change live that my goal ", "Hearing about success stories from Colaberry alumni", "The success stories of people who have been through it", "because there`s endless opportunities to develop your career ", "Technique used for job placement", "because of good testimony that my friend gives to me", "Because your about helping folks and I couldnt afford $  that the other schools were asking me to pay Also my friend said many great things about your support team ", "My goal career is to work from home", "I heard the testimony of my friend ", "Perso Not applicablel testimony from a friend and getting more information from customer service", "Impressive testimonies from a Not applicablelumni", "I made some poor decisions when i was younger and didnt finish school I needed a path out of the restaurant industry ", "Because of the testimonials i heard ", "working independently working remote", "Recommendation", "BECAUSE OF SUCCESS STORIES", "Convenient relevant and aligns with new job role", "because I can et more support from the team", "Alumni referral", "Career", "COURSE LENGTH COMPARED TO TRADITIO Not applicableL COLLEGES", "I talked to a Family member who is attending your course and she gave me very good feedback ", "texas", "reputation precedes ", "By interacting with alumni and see real change", "SQL python data a Not applicablelytics", "It is very structured and it operates a group that is a big motivation", "Heard proper guidance and make the student do it ", "My friend recommended Colaberry", "It will help me advance my career ", "I was told collabery is the place to be if you  need to succeed in career change", "Your teaching method It is career based", "THE WORLD CHANGING GOING DIGITAL AND I NEED KNOWLEDGE IN DIGITAL WORLD", "I have heard much about your teaching", "Help with finding job afterwards", "My friend went to this school and she had a great experience", "My friends learned in Colaberry are a life testimony seeing them reach their goal really motivated me go forward and i hope to see my self there too", "based on success story from another person", "Because I wanted hands on training that was very to the point In college everything took longer than it should of and classes that could have been done in weeks if structured properly took a semester or even multiple semesters Colaberrys program is much shorter and allows me to learn the tools and knowledge faster ", "Encouragement from a friend already in class and positive testimonies from YouTube", "My husband recommended", "I hear good stories from a fiend regarding the training program and possible job replacement opportunity ", "Grate reviews", "referral from previous student", "want to lear Not applicablend your class time", "i choose colaberry because i will acquire the industry oriented knowledge and skills so that i can hit the ground running", "Career goal", "Success stories and I know someone who attended", "Friend referred more opportunity ", "   To fill the gap in knowledge what the employer needs and what I have    Communication challenges specially in interviews", " i was really impressed my friend who took his career in colliery ", "A friend convinced me of its benefits", "For better job position ", "my expectation to succeed", "Cause of the stories I heard ", "I heard from one of my friend  former student of Colaberry  it is a good school ", "Because my friend graduated your class and now is living a Not applicablemazing life with well paid job He inspired me to join the class ", "Perso Not applicablel experience from a close friend", "I JUST HEARD A GOOD THINGS ABOUT THE SCHOOL", "A FRIEND INTRODUCED ME", "Referred by a successful Alumni I want to be like him He is doing great", "Recommendation ", "Friend", "hands  on", "A friend convinced me", "I want to pursue my desire to become involved in Data Science as i have worked as a database a Not applicablelyst for some time in the past And also to gain knowledge to have a professio Not applicablel path to support my self and my family", "Success Stories Scholarship", "Still deciding  Heard from friend that there are good results ", "Because of the high level of job placement", "I want to get the skill to functio Not applicables a Not applicable Not applicablelyst", "i like that it offers an online program", "Good curriculum  Good job placements  ", "Referral", "per testimony you help with employment ", "I  heard good recommendations about the school", "Because I want to elevate my career goals and opportunities and this seems like a legit and good place to achieve that  ", "its has a track record of success and career placements", "seen other people make it", "I love IT and a want to get some experience in this industry", "improve my career and income", "I am doing a career switch to Data A Not applicablelytics I am looking for a school that will help me improve my data a Not applicablelysis skills and prepare me to ace the job interviews", "because it convenient for me  ", "I have been told that it was a good school and it has lots of information", "a great referral from a friend ", "IDK ", "Great review from a friend", "Gain new skill sets", "I picked this school because of the success stories I heard from alumni students", "friends results", "Because it was the first school I saw that not only offers continued education for professio Not applicablels but also for people who have no prior IT experience I Not applicableddition you make it affordable for people to get this education by providing payment plans early bird specials etc  Fi Not applicablelly the job placement aspect of it along with the portfolio creation is what made this most appealing You are really helping your students not like some of the other places that ripped people off back in the late     s early   s ", "Because of the job guarantee ", "matches the current IT demand field", "It seems like the alumni network is a valid way to actually get a job  Seems like a lot of code schools just want your money", "BECAUSE YOUR PROGRAM HAS WHAT I NEED TO ACHIEVE MY LONG TERM CAREER IN IT", "career change", "friend", "Close friends have been successful using this program", "To have a better life to make more money", "mentorship program", "Good reviews", "FULL SCHOLARSHIP", "I felt the curriculum would help me become a data engineer  ", "Someone I know had completed a course through Colaberry", "Ive seen others success with your program", "It helps individual to build up his her career in the IT sector ", "I want to change careers and look for something long term with job security", "because of your methodology ", "I heard about people successful ", "change of career", "success stories of cola berry all over the country", "SHORT TIME AND IPBC", "because of my friend who said good things about your school ", "Career change and I would like to explore the IT industry ", "I heard from friend Colaberry is best school", "They have helped my cousi Not applicables well as others  get into a better position So I believe they will do the same for me", "To improve my carrier and life standard", "get knowledge  and earn money", "because my friend studied in your school and he is now successful", "from freinds", "Career Shifting I choose this school due to a former student graduating and landing a solid job with an income increase", "I heard all good news about Colaberry the friends went there talks about it a lot and they suggested me to register and learn ", "Colaberry made a huge difference in my life a few years ago", "The short answer is that you offered me unbelievable fi Not applicablencial help And you are offering a lucrative course data a Not applicablelytics ", "Reputatio Not applicablend success stories from Alumni and more so people I know perso Not applicablelly", "A friend told me about it", "I believe Colaberry is one of the best schools in technology field  ", "TO GET KNOWLEDGE ON THE IT WORLD", "to upgrade my career", "Because of the good reviews ", "Referrals from close Friends and how it has changed their lives", "I chose Colaberry to help reach my career because I heard a lot of good from people who took class with the school", "I have a friend who successfully completed the course and she suggested that it was a good option if I have to get into the IT job MARCHket", "Colleague told me", "recomended by a friend", "Perso Not applicablel recommendation from a trust worthy friend and a desire to move into a more applicable growing industry while learning new skills that I can one day use to help others ", "referred by a friend", "I choose colaberry because i wanted a change in my life and that of my Family", "Because of the practical training approach to deliver graduates who are ready for the job MARCHket", "Heard good things about the program from a former student I was especially motivated by the job preparatio Not applicablend support aspect of the Colaberry program", "I was inspired by a friend who also attended Colaberry ", "Strong reference from a friend ", "Because it seems interesting and I heard theres a good future in it", "flexibility of training", "Because the success story associated with it", "I came to know that Colaberry is the best place to be Data Scientist ", "referral", "because of the good reviews and the content", "The fact that I can learn new skill i Not applicableshort period a time", "Positive feedback from alumni", "Because it seems that I didnt have anyone guide me or take interest in my career Based upon the great reviews  I was convinced that this is what I needed", "I like IT", "I have hear success stories from former students and the guidance provided to obtai Not applicablejob is not really found with other schools", "A friend introduced it to me and I listened to the success stories from the site", "The Data A Not applicablelytics focus program the reviews on course report the dates and times for the program and the military scholarship", "Previous student", "I have a fried who is currently in Colaberry and also heard of some success Stories", "Because I had a lot of positive feedback about the school ", "I know people who went through the program and are doing well", "To learn data tools ", "Timing", "Good reputation from the few people i have interreacted with over the few months ", "alumni", "Colaberry gets straight to the point If I was to choose a major in the same field at a university it would take me longer", "It works", "I took that Colaberry as one of my friend told me about it and one day we went to Boston MA joined the class and it is now being my career goal because I have a dream to work in this field since I was high school ", "i heard success stories", "I trusted that the information shared Colaberry Alumin shared with me was credible", "i hear about colaberry a lot of good things the school is very supportive ", "Assistance is job placement", "Colaberry will help me get a carrier path The tuition is also affordable", "reviews on social media", "Achieve a new career", "Heard good things about Colaberry from friends", "Its short term training and well known", "Duration of courses and class", "HAVE HEARD A LOT OF GOOD FEEDBACK ABOUT COLABBERY", "Knowing a couple of people who have successfully completed the course and have gotten placed Seeing the way their lives have changed inspired me to do something more with my life and career!", "I have two cousins that graduated from this program", "Because of the testimonies online about the particular school program", "I have heard so many people are doing better after completing SQL from Colaberry That makes me interested", "I have heard good things", "it has a good reputatio Not applicablend i loved the way you take care of your students untill they are good to go for jobd", "It helped a friend of mine reach his goals", "Provided a scholarship opportunity", "It was recommended by a family member who knows someone that completed the course It came highly recommended", "Good Reputation ", "The school has a great reputatio Not applicablend the goal is to help people wi Not applicablejob as long as one puts in the work I know its a guarantee", "referral feedback about job hunting ", "I heard it was the quickest place to get your data a Not applicablelytics diploma degree and thats what I needed in my life at that point in time So here I am", "Diversity", "i want to lear Not applicablend add valuable skill", "Seeing results ", "THE TESTIMONIALS OF PAST STUDENT", "A referral from a friend", "Had good reviews and people had their stories to share", "everyone i talked to referred me to this school", "no", "A friend recommended it to me", "Yes ", "The reviews and testimonies", "It was the only opportunity i had", "Listening to other peoples stories", "I have learnt Data science by myself but I do not have direct experience in IT industry I want to build my portfolio and network for career growth Looking forward to data a Not applicablelytics as first step toward industry", "Learn IT processess", "Because of Alumni Success The School has a good rating and I wanted to do data science", "From  the feedback I get from my friends who have attended the program in the  past indicates the program is quite rich and  creates a good launching pad into the  MARCHket especially for beginners like me", "To better advance in my career by identifying the best opportunities of employment", "I want practical skills soon", "I chose Colaberry School of Data A Not applicablelytics  Colaberry SODA  because it perfectly aligns with my career aspirations and offers the ideal platform to transition into the dy Not applicablemic field of data a Not applicablelytics As someone with a background in Executive Assisting and Project Ma Not applicablegement Ive developed a keen eye for detail a love for problem  solving and a k Not applicableck for optimizing processes These skills coupled with my passion for math and a Not applicablelytics make data a Not applicablelytics a  Not applicabletural progression for me  What drew me specifically to Colaberry SODA is its reputation for fostering a comprehensive understanding of both the theoretical and practical aspects of data a Not applicablelysis The curriculums emphasis on real  world applications and hands  on experience will not only equip me with the necessary technical skills but also provide me with the confidence to tackle complex a Not applicablelytical challenges i Not applicableny industry  Moreover the flexibility offered by Colaberry SODA including remote learning options is incredibly appealing to me As someone who values the freedom to work remotely and pursue my passions outside of work this flexibility ensures that I ca Not applicablechieve a healthy work  life balance without compromising on my professio Not applicablel development  Furthermore the fact that my sister husband and brother  in  law have all enrolled in Colaberry SODA speaks volumes about the quality of educatio Not applicablend the opportunities it offers Both my sister and husband are Colaberry SODA alumni and witnessing their successful transition into the field of data a Not applicablelytics has only solidified my decision to choose Colaberry SODA for my own career journey  Ultimately I believe that Colaberry SODA will not only help me transition into a rewarding career in data a Not applicablelytics but also provide me with the tools and opportunities to excel i Not applicablerapidly evolving industry while maintaining the lifestyle I desire", "To be successful and to reach my IT career goal ", "Great instructors I also have a lot of friends that have finished the course and have a great jobs Also its a short term course and not a    year university I also am enrolled in college I attend Colin Community College  ", "Based on strong feedbacks", "recommended", "I heard this is a great program", "the success stories   feedback", "because to have easey life", "my friend give me good advice about your platform", "Job oriented", "From what i heard and understand your teaching approach is very sought after and essential remedy to my shortcomings", "Growth and development ", "I was referred by a friend and liked what I saw", "Because I am a vetera Not applicablend this school cares about veterian", "I think its the best fit for me", "I was convinced that it would serve as my ticket out of the epitome of a dead  end job", "alumini", "its more in to computer science and i feel like its the right place to start my future goals with colabery ", "I have heard testimonies about your school", "I have heard a lot of good reviews both online and from a friend of mine who took the class", "I heard from my friends that you encourage them to do their best and to work hard", "Positive Feedback from friends", "I am a Not applicablelumni", "Have come to understand how important a data a Not applicablelyst is i Not applicablen organization ", "I liked your program and heard many good things about you", "because of testimonies", "Because I believe that your organization is the best place for me to receive quality training to achieve my desired career change "], "data": [1, 62, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "WhyChooseForCareerGoals", "count": 416, "min": "   To fill the gap in knowledge what the employer needs and what I have    Communication challenges specially in interviews", "max": "yes"}, {"values": {"label": ["Food and Beverages", "None", "Transportation and Delivery", "Finance and Financial Services", "Airlines and Aerospace including Defense", "Real Estate", "Education", "I am currently not employed", "Healthcare and Pharmaceuticals", "Business Support and Logistics", "Entertainment and Leisure", "Nonprofit", "Retail and Consumer Durables", "Manufacturing", "Government", "Insurance", "Telecommunications Technology Internet and Electronics", "Utilities Energy and Extraction", "Advertising and MARCHketing", "Automotive", "Agriculture", "Construction Machinery and Homes"], "data": [16, 5, 64, 40, 7, 5, 21, 83, 90, 28, 6, 6, 24, 20, 26, 17, 21, 3, 7, 5, 1, 5]}, "label": "Industry", "count": 22, "min": "Advertising and MARCHketing", "max": "Utilities Energy and Extraction"}, {"values": {"label": ["1", "0", "4", "2", "7", "10"], "data": [119, 11, 98, 132, 88, 52]}, "label": "YrsOnJob", "count": 6, "min": "0", "max": "10"}, {"values": {"label": ["Daily Emails\u00a0", "None", "Long video clips\u00a0", "Longer form blog articles\u00a0", "Industry ReportsorImportant Relevant Content\u00a0", "Short video clips such as Youtube videos", "Open House Events\u00a0", "Meet The Instructor Events\u00a0", "Weekly Emails\u00a0", "Short blog articles\u00a0", "Success Story Blog Posts\u00a0", "Longer Facebook Posts", "Webinars", "Short Facebook Posts\u00a0"], "data": [94, 17, 34, 12, 130, 57, 23, 36, 13, 45, 10, 4, 13, 12]}, "label": "InformationConsumed", "count": 14, "min": "Daily Emails\u00a0", "max": "Weekly Emails\u00a0"}, {"values": {"label": ["10", "7", "6", "8", "9", "0", "5", "2", "4", "3"], "data": [221, 56, 21, 96, 62, 4, 32, 2, 4, 2]}, "label": "NetPromotorScore", "count": 10, "min": "0", "max": "10"}, {"values": {"label": ["0.0 - 7.6", "7.6 - 15.2", "15.2 - 22.8", "22.8 - 30.4", "30.4 - 38.0", "38.0 - 45.6", "45.6 - 53.2", "53.2 - 60.8", "60.8 - 68.4", "68.4 - 76.0"], "data": [133, 96, 71, 60, 44, 45, 25, 10, 8, 8]}, "label": "ClassName_stringindexer_transform", "count": 10, "min": 0, "max": 76}, {"values": {"label": ["0", "2", "1", "3"], "data": [463, 11, 25, 1]}, "label": "ClassType_stringindexer_transform", "count": 4, "min": "0", "max": "3"}, {"values": {"label": ["0.0", "1.0", "3.0", "5.0", "2.0", "4.0", "7.0", "6.0"], "data": [186, 102, 67, 21, 90, 31, 1, 2]}, "label": "Education_stringindexer_transform", "count": 8, "min": "0.0", "max": "7.0"}, {"values": {"label": ["0"], "data": [500]}, "label": "HouseholdIncome_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0.0 - 3.0", "3.0 - 6.0", "6.0 - 9.0", "9.0 - 12.0", "12.0 - 15.0", "15.0 - 18.0", "18.0 - 21.0", "21.0 - 24.0", "24.0 - 27.0", "27.0 - 30.0"], "data": [419, 45, 14, 3, 3, 3, 3, 3, 3, 4]}, "label": "No  EnrollReason_stringindexer_transform", "count": 10, "min": 0, "max": 30}, {"values": {"label": ["2.0", "1.0", "0.0", "3.0", "4.0", "5.0"], "data": [79, 165, 205, 42, 7, 2]}, "label": "Age_stringindexer_transform", "count": 6, "min": "0.0", "max": "5.0"}, {"values": {"label": ["0", "2", "1", "3"], "data": [273, 5, 220, 2]}, "label": "Gender_stringindexer_transform", "count": 4, "min": "0", "max": "3"}, {"values": {"label": ["0.0 - 2.4", "2.4 - 4.8", "4.8 - 7.2", "7.2 - 9.6", "9.6 - 12.0", "12.0 - 14.4", "14.4 - 16.8", "16.8 - 19.2", "19.2 - 21.6", "21.6 - 24.0"], "data": [306, 90, 62, 14, 9, 7, 4, 3, 2, 3]}, "label": "CountryOfOrgin_stringindexer_transform", "count": 10, "min": 0, "max": 24}, {"values": {"label": ["0.0 - 9.2", "9.2 - 18.4", "18.4 - 27.6", "27.6 - 36.8", "36.8 - 46.0", "46.0 - 55.2", "55.2 - 64.4", "64.4 - 73.6", "73.6 - 82.8", "82.8 - 92.0"], "data": [395, 26, 14, 9, 9, 10, 9, 9, 9, 10]}, "label": "JobRole_stringindexer_transform", "count": 10, "min": 0, "max": 92}, {"values": {"label": ["0.0 - 41.5", "41.5 - 83.0", "83.0 - 124.5", "124.5 - 166.0", "166.0 - 207.5", "207.5 - 249.0", "249.0 - 290.5", "290.5 - 332.0", "332.0 - 373.5", "373.5 - 415.0"], "data": [126, 41, 42, 41, 42, 41, 42, 41, 42, 42]}, "label": "WhyChooseForCareerGoals_stringindexer_transform", "count": 10, "min": 0, "max": 415}, {"values": {"label": ["0.0 - 2.1", "2.1 - 4.2", "4.2 - 6.3", "6.3 - 8.4", "8.4 - 10.5", "10.5 - 12.6", "12.6 - 14.7", "14.7 - 16.8", "16.8 - 18.9", "18.9 - 21.0"], "data": [237, 68, 50, 42, 37, 23, 13, 11, 10, 9]}, "label": "Industry_stringindexer_transform", "count": 10, "min": 0, "max": 21}, {"values": {"label": ["0.0 - 1.3", "1.3 - 2.6", "2.6 - 3.9", "3.9 - 5.2", "5.2 - 6.5", "6.5 - 7.8", "7.8 - 9.1", "9.1 - 10.4", "10.4 - 11.7", "11.7 - 13.0"], "data": [224, 57, 45, 70, 23, 17, 26, 12, 12, 14]}, "label": "InformationConsumed_stringindexer_transform", "count": 10, "min": 0, "max": 13}], "stageId": "66a4e2c44a48563179e65f08", "FESamplePath": "/FileStore/platform/sampleData/66a4e2c44a48563179e65f08_AutoFE/part-00000-56531082-9de7-4028-9ad0-ad02de097073-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/66a4e2c44a48563179e65f08_AutoFE/part-00000-56531082-9de7-4028-9ad0-ad02de097073-c000.csv", "originalcount": 1000, "graphdata": {"ClassName": {"label": ["DATA ANALYTICS  MARCH 30 2024 ONLINE", "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "SQLBI Bootcamp  April 24 2021 ONLINE", "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "SQLBI Bootcamp  Jun 26 2021 ONLINE", "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "DATA ANALYTICS  JUNE 29 2024 ONLINE", "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "None", "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "DATA ANALYTICS  JUNE 01 2024 ONLINE", "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "Data Analytics I with MS SQL Server BI  Jul 14 2018 ONLINE", "DATA ANALYTICS  APRIL 27 2024 ONLINE", "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "Data Analytics I with MS SQL Server BI  Jan 6 2018 IRVING", "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "DATA ANALYTICS BOOTCAMP  Jan 18 2020 ONLINE", "SQLBI Bootcamp  Mar 18 2017 PLANO TX", "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "SQLBI Bootcamp  May 22 2021 ONLINE", "DATA ANALYTICS BOOTCAMP   July 13 2019 PLANO", "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "SQLBI Bootcamp  Jul 08 2017 PLANO", "DATA ANALYTICS BOOTCAMP  June 1  2019 ONLINE", "DATA ANALYTICS  JULY 27 2024 ONLINE", "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "Data Analytics I with MS SQL Server BI  Mar 10 2018 PLANO", "Data Analytics I with MS SQL Server BI  Jan 13 2018 PLANO", "Data Analytics I with MS SQL Server BI  Sep 8 2018 ONLINE", "BI BootCamp  July 23rd 2016 Plano TX", "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "IPBC DIRECT SIGN UP  2024", "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "BI BootCamp  June 14 2014 Richardson", "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "Data Analytics I with MS SQL Server BI  Mar 10 2018 ONLINE", "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "BI BootCamp  Nov 7 2015 Online", "DATA ANALYTICS BOOTCAMP  Mar 30 2019 ONLINE", "SQLBI Bootcamp  Mar 18 2017 ONLINE", "BI BootCamp  Jan 3 2015 Richardson TX", "DATA ANALYTICS BOOTCAMP  July 20  2019 ONLINE", "DATA ANALYTICS BOOTCAMP  Sep 07 2019 PLANO", "Data Analytics I with MS SQL Server BI  Jul 14 2018 PLANO", "Data Analytics I with MS SQL Server BI  Sep 8 2018 IRVING", "Data Analytics I with MS SQL Server BI  Sep 15 2018 PLANO", "Data Analytics I with MS SQL Server BI  Nov 17 2018 ONLINE", "BI BootCamp  Feb 22 2014 Richardson", "Data Analytics I with MS SQL Server BI  May 5 2018 ONLINE", "DATA ANALYTICS BOOTCAMP   Mar 23 2019 PLANO", "SQLBI Bootcamp  Jan 14 2017 IRVING"], "data": [6, 12, 14, 6, 11, 7, 19, 20, 16, 13, 7, 7, 11, 12, 6, 8, 13, 9, 7, 15, 3, 9, 7, 7, 3, 6, 6, 11, 12, 11, 18, 6, 1, 5, 15, 11, 7, 16, 6, 4, 2, 5, 5, 1, 12, 9, 8, 2, 3, 1, 10, 1, 1, 1, 1, 6, 6, 1, 10, 1, 5, 2, 6, 2, 2, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1]}, "ClassType": {"label": ["Live Online", "None", "Live In  Person", "Self Paced Online"], "data": [463, 11, 25, 1]}, "Education": {"label": ["Graduated from college", "   years of college", "Graduated from high school", "Some graduate school", "Completed graduate school", "   year of college", "Did not attend school", "None"], "data": [186, 102, 67, 21, 90, 31, 1, 2]}, "HouseholdIncome": {"label": ["  "], "data": [500]}, "No  EnrollReason": {"label": ["Friend  or close relationship", "Friend  or  close relationship", "info I found on google", "The course content.", "Advertising", "Community", "Online classes", "None", "On campus classes", "F  or    mer Student", "Employer", "It was the few interactions with the staff that seemed very genuine. I get the sense that everyone at Colaberry wants to see you become the next success st  or    y and thats exactly what I want. ", "Feedback from f  or    mer students", "I want better life.", "Veteran assistance", "Inf  or    mation you found on Facebook", "curriculum", "the way tuition is paid. its a game changer to older school models.", "n  or  a", "Info you found on LinkedIn", "Help getting job after courses completed", "Testimonials from Past Students outlining how their  experience at Colaberry contributed to their career success.", "Full Scholarship", "Flexibility and overall sense of I want you to succeed that I felt from the site and w  or    d  of  mout.", "That colabery would fulfil dreams ", "Individuals who had gone through the course and shared their st  or    ies.", "peoples success st  or    ies", "Inf  or    mation I found from friend.", "Having got inf  or    mation from someone whos got a decent job after taking your course.", "I couldnt find any other school ", "i am a success st  or    y"], "data": [1, 242, 2, 1, 13, 43, 134, 10, 21, 1, 11, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "Age": {"label": ["50", "30", "40", "21", "60", "None"], "data": [79, 165, 205, 42, 7, 2]}, "Gender": {"label": ["Male", "I prefer not to specify", "Female", "None"], "data": [273, 5, 220, 2]}, "CountryOfOrgin": {"label": ["Ghana", "Nigeria", "Ethiopia", "United States", "Kenya", "India", "Eritrea", "None of the above", "Cameroon", "Rwanda", "Sudan", "Togo", "South Sudan", "Uganda", "Burundi", "Zambia", "Cote d'Ivoire", "Zimbabwe", "Sierra Leone", "Congo Democratic Republic of the", "China", "Morocco", "Mexico", "Tunisia", "Canada"], "data": [5, 64, 82, 149, 75, 22, 25, 26, 15, 5, 2, 1, 1, 9, 2, 1, 2, 4, 1, 2, 1, 1, 3, 1, 1]}, "JobRole": {"label": ["Partner", "None", "Currently unemployed", "Individual Contributor", "Real estate agent ", "Truck Driver", "Hourly Employee", "Management  C Level", "Researcher", "Not employed for now", "Team Lead", "Other", "Intern", "Owner", "house wife", "Unemployed", "Manager", "Database Administrator", "unemployed", "pharmacy technician", "delivery", "manufacturing technician", "Working a little from home", "I do not have awork", "Preparing to re enter the workforce after physical therapy due to an auto accident.", "Independent contractor", "small business entrepreneur", "Driver", "PARALEGAL", "Tax Preparer", "Independent Contractor;Process Server", "stay at home mom", "Insurance Adjuster Realtor", "Correctional officer", "Volunteer", "Senior Manager", "currently not working", "student", "Independent contractor   health care", "Stay home mom and started small business name    Days LLC", "senior analyst", "SELF EMPLOYED", "Contractor", "Home Maker", "Teacher", "Accountant", "College Student", "Driver ", "Army", "MARCHketing Director", "Service Desk Analyst", "Dispatcher", "Configuration Analyst II", "Commission employee ", "Business Analyst ", "Analyst", "Student", "Self employed", "home maker", "self employed", "unemployeed", "none", "Brewer", "Housemaker", "independent contractor", "Not working", "Independent Contractor Taxi Driver ", "Self employee computer technician", "Worked in the past in IT. Current home maker.", "Database admin", "Healthcare   Ct Technologist", "Transitioning Veteran", "Medical technician", "independent ", "RN", "Currently i am unemployed", "na", "Customer Service Representative", "Full time Student", "Was a Financial Analyst currently out of Job", "nurse", "Certified nurses aide ", "Currently Not working", "Senior Tech Computer Desktop Support", "Housewife", "Business Development Analyst", "NURSE", "Counselor", "Information Technology", "in between jobs", "DBAReport Developer", "Not employed ", "Development Specialist"], "data": [10, 4, 2, 61, 1, 2, 153, 5, 2, 1, 39, 71, 5, 19, 1, 6, 26, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 3, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "WhyChooseForCareerGoals": {"label": [" heard  success stories from friends who do not have IT skills but Colaberry trained them and are now IT professio Not applicablels ", "None", "In the near future information technology is a new form of business growth that is my pla Not applicablend strong demand", "I did my research and trust that the knowledge is here ", "Referred to you from a friend  ", "I would like to have an IT background to help complement what I am studying in college  Economics ", "My friend went through the program and he has achieved success since that time And he felt that I could also achieve the same success", "success story", "I heard the testimonials and believe in them", "To improve my career", "l listened to success stories and l am at that point of trying to change my life to the better", "I was informed of the prompt assistance help with securing jobs", "referral from friends", "Better job", "I wanted to work from home", "I want to work by IT database", "I have a couple of friends going through classes at the moment and a recent graduate who have all given me motivatio Not applicablel information on how to build upon my future", "The great feedbacks I got from my closest friends", "I believe in skill set that Ill acquire with the program", "I heard that colaberry is the perfect BOOTCAMP center on data science A Not applicablelytics field and also helps until getting a job ", "I referred by a friend who explained the advantages ", "I have heard from friends who have taken classes great things about your school and I wanted to do that for myself and better my currier", "  All the best  feedback from friends ", "Because it is skill oriented ", "It was recommended to me", "I need something that I can do while working my current job", "job", "because it is the best data a Not applicablelytics school ", "positive reviews of the school", "Your school is good a teaching data a Not applicablelytics", "I heard from my friend that it is one of the best", "Because i saw the success stories", "WORDS FROM FRIEND", "heard good reports about the school", "I HEARD GREAT NEWS FROM A  FRIEND", "For Money", "learning proces is good  ", "I wanted an instructor led ML course", "I witnessed the success story of a family member who is a Not applicablelumni of Colaberry She is definitely living the American Dream I was recently let go at my job So this was absolutely the right timing I enrolled", "suggestion from afriend", "I love the fact that colberry is online and flexible payment options are available the fact that colaberry provides you with a one on one mentor to help you through the course work on your resume and help you find a job and still provide mentorship and assistance when you need help at your new job after the course", "it was cheaper and influence from friends that went to your school", " I have seen many practical results which are graduates from your courses", "I hear noting but success from all the people I talk to that attended  Colaberry  ", "I have been searching for a school that are excel at data A Not applicablelytics and based on the information I got from friends Colaberry is the best place to equip myself in the area of data a Not applicablelytics ", "Convenience of online learning  and reputation ", "I have heard good things about the school from a friend", "Because of the success stories attached to the school", "Good reviews from family members", "Highly Recommended by a Friend", "GOOD REVIEW ", "success stories heard from my friends and people around me ", "The entire program structure goes beyond the ordi Not applicablery concepts of many educatio Not applicablel Institutions", "Neighbor turned friend    referral ", "Because l have a friend who got his certificate here and he now has a great stable job ", "Statistics and training", "For the fact that it is the best place that gets me ready for a job", "My brother in  law attended years ago and hes making great money", "My friend told me that Colaberry is a good school for data a Not applicablelytics", "After considering other options I chose Colaberry because of the work that they have done with military veterans It lets me know that with hard work and focus I ca Not applicablechieve my goal of entering the IT field just as other veterans have done", "because couple friends told  me about it", "very good curriculum ", "because I heard a lot from my friend and his friends who got their job after taking this program", "Familiar faces and the story behind how it all began", "Good feedback from former students", "Students success Stories", "I heard a good story about Colaberry", "To help me understand my courses and further my career", "heard of many successful stories and the i liked the way of teaching and homeworks", "seemed easy and understandable", "A friend did the program and loved it I have been wanting to do something similar to this but never knew where to start", "I have done some research and data a Not applicablelyst is what I want", "Professio Not applicablelism and high level of experience in problem solving and delivery of required knowledge", "Success stories", "Structure and help with resume job search", "I chose Colaberry after speaking to a friend whose currently been enrolled for about a month now She shared her experience with me and so far I am impressed I think this school will give me a foot in the door to help me reach my career goal", "Because I to have a job in IT field", "Success rate", "friends were there ", "Speaking to a friend", "Because I have two close friends who graduated from your school they are working from home and are making good money", "Great reviews from past students", "Its well structured and has a good reputation for job placement", "Was referred to by a former studient ", "A FRIEND TOLD ME ABOUT THE COURSE", "REFERRAL FROM CURRENT STUDENT   PAULINE KAMERE", "I was looking for a career to start working towards", "what people say", "career desires and success stories from people who went through colaberry and their lives changed positively", "best reviews", "We are headed into the digital world if I MAY say everything today you can purchase at the convenience of your device I figured MAYbe it wouldnt hurt to give this a try to be Familiar with technology and turn this occupation into a career", "Training and job opportunities", "Recommendations from friends", "Due to knowing someone perso Not applicablelly who attended and was successful showed the goal was obtai Not applicableble and tangible as long as i stayed determined ", "to enhance my skills and knowledge in IT Field ", "better pay", "I have heard just extraordi Not applicablery reviews about this establishment and I might want to go to this foundation to future my instruction", "Vetera Not applicablessistance and job placement assistance", "reports from alumni", "I know someone who completed the course and heard great things about the program", "Was motivated about the successes of the other students", "To advance career", "GOOD REFERRAL", "I heard many students get a good paying job and i want to part of it too ", "Referral ", "because i hered that is the better choise in here where i live and i proved what i hered ", "To be fi Not applicablencially independent", "Ive seen how it has changed lives", "The school normalizes data a Not applicablelytics i Not applicableway that has one thinking it is relatable to every business We must simply put in the time to learn its format and techniques ", "Studied and friends recommended me", "Practical application", "Because I was highly recommended to the school by my friend who graduated from your program successfully", "I wanted a career change into the IT business and Colaberry i Not applicableddition to being in the same city where i live it came in on top in my research ", "alumni story", "Referred from a friend of friend that he knew took the course and made a career change  He is now making really good money just starting out  ", "Recommendation from friend", "great value for money and time", "Job improvement and salary", "Success story from a friend", "great BOOTCAMP curriculum ", "Referred by a friend", "interesting", "I like how you guys help your students eve Not applicablefter they graduate ", "I heard that it was hands on training supported with videos which was my preferred way of learning", "Heard you have a proven track record of successfully training and helping students succeed ", "Module and tutorial o Not applicablece a week", "its growing day by day", "Its rated very highly", "It seems simple to communicate", "It comes highly recommended", "My friend had provided good feedback about the program", "Ive heard from others who have taken the course how it changed their life", "TO improve quality of life", "I read that Colaberry has good reviews so want to see and try it myself with a leap of faith", "Colaberry is The nearest school I know ", "the referral spoke highly of the school and the programme", "The good reputation of the school", "Speed Cost Track Record", "GOOD SUCCESS STORIES", "Reaching my fi Not applicablencial goals in my current career will be very challenging", "A friend highly recommended your school ", " testimony of a friend", "A coworker informed me about the program and I was interested in improving myself as well as learning skills that will prepare me for the future ", "I enjoyed the open house and I was encouraged by a friend", "I received encouragement from the cousin of a friend who completed the data a Not applicablelytics BOOTCAMP course", "because of the positive feedback i have received", "Referral from a trusted source ", "Alumni testimony and success story ", "to improve my life", "good rewiews", "The curriculum is what stood out to me", "It was recommended by a friend who is in the IT world", "Enhance career in short period of time by learning industry required skills", "I heard good things about school and my friend got job too", "It has the best  program and boot camp structure as per advice from a Not applicablelumni its can be done online with flexible schedules Military scholarship and generally welcoming and helpful environment when taking the courses", "yes", "Affordability", "I was referred by a friend after doing my research he really did recommend this school", "good goodwill", "to improve myself and change my career", "Heard very positive review Class time matches my schedule ", "I heard of only success stories", "TO IMPROVE AND CHANGE MY SELF FOR BETTER CEREER", " Not applicable", "I chose your school because traditio Not applicablel education in the US is failing kids flat There is a lot of skills gap that traditio Not applicablel    years universities even IVY league one cant fix Colaberry is better than coursera", "Lots of success stories ", "Well organize and oriented details ", "interview readiness", "cause of the success stories from friends", "On the job training and assisting with job hiring", "My cousin recommended it; its a worthwhile career", "Recommended", "Teaching process", "I feel it will bring me right where I want to be  and other colleges like universities would just put me in debt  I also love that the school is hands on", "Friend referral", "because i believe it will help me get a deceit job", "Have read more about the reviews ", "A friends recommendation ", "I am hoping to gain experience and hopefully a well paying job afterwards", "I love the school curriculum and how the studies are structured Also success stories from friends ", "I wanted to change career as I just moved to America from Ca Not applicableda and this seem to be the best choice as my family friend spoke highly of this school ", "Because colaberry is a reference now to train people and this peoples get a jobs and change live that my goal ", "Hearing about success stories from Colaberry alumni", "The success stories of people who have been through it", "because there`s endless opportunities to develop your career ", "Technique used for job placement", "because of good testimony that my friend gives to me", "Because your about helping folks and I couldnt afford $  that the other schools were asking me to pay Also my friend said many great things about your support team ", "My goal career is to work from home", "I heard the testimony of my friend ", "Perso Not applicablel testimony from a friend and getting more information from customer service", "Impressive testimonies from a Not applicablelumni", "I made some poor decisions when i was younger and didnt finish school I needed a path out of the restaurant industry ", "Because of the testimonials i heard ", "working independently working remote", "Recommendation", "BECAUSE OF SUCCESS STORIES", "Convenient relevant and aligns with new job role", "because I can et more support from the team", "Alumni referral", "Career", "COURSE LENGTH COMPARED TO TRADITIO Not applicableL COLLEGES", "I talked to a Family member who is attending your course and she gave me very good feedback ", "texas", "reputation precedes ", "By interacting with alumni and see real change", "SQL python data a Not applicablelytics", "It is very structured and it operates a group that is a big motivation", "Heard proper guidance and make the student do it ", "My friend recommended Colaberry", "It will help me advance my career ", "I was told collabery is the place to be if you  need to succeed in career change", "Your teaching method It is career based", "THE WORLD CHANGING GOING DIGITAL AND I NEED KNOWLEDGE IN DIGITAL WORLD", "I have heard much about your teaching", "Help with finding job afterwards", "My friend went to this school and she had a great experience", "My friends learned in Colaberry are a life testimony seeing them reach their goal really motivated me go forward and i hope to see my self there too", "based on success story from another person", "Because I wanted hands on training that was very to the point In college everything took longer than it should of and classes that could have been done in weeks if structured properly took a semester or even multiple semesters Colaberrys program is much shorter and allows me to learn the tools and knowledge faster ", "Encouragement from a friend already in class and positive testimonies from YouTube", "My husband recommended", "I hear good stories from a fiend regarding the training program and possible job replacement opportunity ", "Grate reviews", "referral from previous student", "want to lear Not applicablend your class time", "i choose colaberry because i will acquire the industry oriented knowledge and skills so that i can hit the ground running", "Career goal", "Success stories and I know someone who attended", "Friend referred more opportunity ", "   To fill the gap in knowledge what the employer needs and what I have    Communication challenges specially in interviews", " i was really impressed my friend who took his career in colliery ", "A friend convinced me of its benefits", "For better job position ", "my expectation to succeed", "Cause of the stories I heard ", "I heard from one of my friend  former student of Colaberry  it is a good school ", "Because my friend graduated your class and now is living a Not applicablemazing life with well paid job He inspired me to join the class ", "Perso Not applicablel experience from a close friend", "I JUST HEARD A GOOD THINGS ABOUT THE SCHOOL", "A FRIEND INTRODUCED ME", "Referred by a successful Alumni I want to be like him He is doing great", "Recommendation ", "Friend", "hands  on", "A friend convinced me", "I want to pursue my desire to become involved in Data Science as i have worked as a database a Not applicablelyst for some time in the past And also to gain knowledge to have a professio Not applicablel path to support my self and my family", "Success Stories Scholarship", "Still deciding  Heard from friend that there are good results ", "Because of the high level of job placement", "I want to get the skill to functio Not applicables a Not applicable Not applicablelyst", "i like that it offers an online program", "Good curriculum  Good job placements  ", "Referral", "per testimony you help with employment ", "I  heard good recommendations about the school", "Because I want to elevate my career goals and opportunities and this seems like a legit and good place to achieve that  ", "its has a track record of success and career placements", "seen other people make it", "I love IT and a want to get some experience in this industry", "improve my career and income", "I am doing a career switch to Data A Not applicablelytics I am looking for a school that will help me improve my data a Not applicablelysis skills and prepare me to ace the job interviews", "because it convenient for me  ", "I have been told that it was a good school and it has lots of information", "a great referral from a friend ", "IDK ", "Great review from a friend", "Gain new skill sets", "I picked this school because of the success stories I heard from alumni students", "friends results", "Because it was the first school I saw that not only offers continued education for professio Not applicablels but also for people who have no prior IT experience I Not applicableddition you make it affordable for people to get this education by providing payment plans early bird specials etc  Fi Not applicablelly the job placement aspect of it along with the portfolio creation is what made this most appealing You are really helping your students not like some of the other places that ripped people off back in the late     s early   s ", "Because of the job guarantee ", "matches the current IT demand field", "It seems like the alumni network is a valid way to actually get a job  Seems like a lot of code schools just want your money", "BECAUSE YOUR PROGRAM HAS WHAT I NEED TO ACHIEVE MY LONG TERM CAREER IN IT", "career change", "friend", "Close friends have been successful using this program", "To have a better life to make more money", "mentorship program", "Good reviews", "FULL SCHOLARSHIP", "I felt the curriculum would help me become a data engineer  ", "Someone I know had completed a course through Colaberry", "Ive seen others success with your program", "It helps individual to build up his her career in the IT sector ", "I want to change careers and look for something long term with job security", "because of your methodology ", "I heard about people successful ", "change of career", "success stories of cola berry all over the country", "SHORT TIME AND IPBC", "because of my friend who said good things about your school ", "Career change and I would like to explore the IT industry ", "I heard from friend Colaberry is best school", "They have helped my cousi Not applicables well as others  get into a better position So I believe they will do the same for me", "To improve my carrier and life standard", "get knowledge  and earn money", "because my friend studied in your school and he is now successful", "from freinds", "Career Shifting I choose this school due to a former student graduating and landing a solid job with an income increase", "I heard all good news about Colaberry the friends went there talks about it a lot and they suggested me to register and learn ", "Colaberry made a huge difference in my life a few years ago", "The short answer is that you offered me unbelievable fi Not applicablencial help And you are offering a lucrative course data a Not applicablelytics ", "Reputatio Not applicablend success stories from Alumni and more so people I know perso Not applicablelly", "A friend told me about it", "I believe Colaberry is one of the best schools in technology field  ", "TO GET KNOWLEDGE ON THE IT WORLD", "to upgrade my career", "Because of the good reviews ", "Referrals from close Friends and how it has changed their lives", "I chose Colaberry to help reach my career because I heard a lot of good from people who took class with the school", "I have a friend who successfully completed the course and she suggested that it was a good option if I have to get into the IT job MARCHket", "Colleague told me", "recomended by a friend", "Perso Not applicablel recommendation from a trust worthy friend and a desire to move into a more applicable growing industry while learning new skills that I can one day use to help others ", "referred by a friend", "I choose colaberry because i wanted a change in my life and that of my Family", "Because of the practical training approach to deliver graduates who are ready for the job MARCHket", "Heard good things about the program from a former student I was especially motivated by the job preparatio Not applicablend support aspect of the Colaberry program", "I was inspired by a friend who also attended Colaberry ", "Strong reference from a friend ", "Because it seems interesting and I heard theres a good future in it", "flexibility of training", "Because the success story associated with it", "I came to know that Colaberry is the best place to be Data Scientist ", "referral", "because of the good reviews and the content", "The fact that I can learn new skill i Not applicableshort period a time", "Positive feedback from alumni", "Because it seems that I didnt have anyone guide me or take interest in my career Based upon the great reviews  I was convinced that this is what I needed", "I like IT", "I have hear success stories from former students and the guidance provided to obtai Not applicablejob is not really found with other schools", "A friend introduced it to me and I listened to the success stories from the site", "The Data A Not applicablelytics focus program the reviews on course report the dates and times for the program and the military scholarship", "Previous student", "I have a fried who is currently in Colaberry and also heard of some success Stories", "Because I had a lot of positive feedback about the school ", "I know people who went through the program and are doing well", "To learn data tools ", "Timing", "Good reputation from the few people i have interreacted with over the few months ", "alumni", "Colaberry gets straight to the point If I was to choose a major in the same field at a university it would take me longer", "It works", "I took that Colaberry as one of my friend told me about it and one day we went to Boston MA joined the class and it is now being my career goal because I have a dream to work in this field since I was high school ", "i heard success stories", "I trusted that the information shared Colaberry Alumin shared with me was credible", "i hear about colaberry a lot of good things the school is very supportive ", "Assistance is job placement", "Colaberry will help me get a carrier path The tuition is also affordable", "reviews on social media", "Achieve a new career", "Heard good things about Colaberry from friends", "Its short term training and well known", "Duration of courses and class", "HAVE HEARD A LOT OF GOOD FEEDBACK ABOUT COLABBERY", "Knowing a couple of people who have successfully completed the course and have gotten placed Seeing the way their lives have changed inspired me to do something more with my life and career!", "I have two cousins that graduated from this program", "Because of the testimonies online about the particular school program", "I have heard so many people are doing better after completing SQL from Colaberry That makes me interested", "I have heard good things", "it has a good reputatio Not applicablend i loved the way you take care of your students untill they are good to go for jobd", "It helped a friend of mine reach his goals", "Provided a scholarship opportunity", "It was recommended by a family member who knows someone that completed the course It came highly recommended", "Good Reputation ", "The school has a great reputatio Not applicablend the goal is to help people wi Not applicablejob as long as one puts in the work I know its a guarantee", "referral feedback about job hunting ", "I heard it was the quickest place to get your data a Not applicablelytics diploma degree and thats what I needed in my life at that point in time So here I am", "Diversity", "i want to lear Not applicablend add valuable skill", "Seeing results ", "THE TESTIMONIALS OF PAST STUDENT", "A referral from a friend", "Had good reviews and people had their stories to share", "everyone i talked to referred me to this school", "no", "A friend recommended it to me", "Yes ", "The reviews and testimonies", "It was the only opportunity i had", "Listening to other peoples stories", "I have learnt Data science by myself but I do not have direct experience in IT industry I want to build my portfolio and network for career growth Looking forward to data a Not applicablelytics as first step toward industry", "Learn IT processess", "Because of Alumni Success The School has a good rating and I wanted to do data science", "From  the feedback I get from my friends who have attended the program in the  past indicates the program is quite rich and  creates a good launching pad into the  MARCHket especially for beginners like me", "To better advance in my career by identifying the best opportunities of employment", "I want practical skills soon", "I chose Colaberry School of Data A Not applicablelytics  Colaberry SODA  because it perfectly aligns with my career aspirations and offers the ideal platform to transition into the dy Not applicablemic field of data a Not applicablelytics As someone with a background in Executive Assisting and Project Ma Not applicablegement Ive developed a keen eye for detail a love for problem  solving and a k Not applicableck for optimizing processes These skills coupled with my passion for math and a Not applicablelytics make data a Not applicablelytics a  Not applicabletural progression for me  What drew me specifically to Colaberry SODA is its reputation for fostering a comprehensive understanding of both the theoretical and practical aspects of data a Not applicablelysis The curriculums emphasis on real  world applications and hands  on experience will not only equip me with the necessary technical skills but also provide me with the confidence to tackle complex a Not applicablelytical challenges i Not applicableny industry  Moreover the flexibility offered by Colaberry SODA including remote learning options is incredibly appealing to me As someone who values the freedom to work remotely and pursue my passions outside of work this flexibility ensures that I ca Not applicablechieve a healthy work  life balance without compromising on my professio Not applicablel development  Furthermore the fact that my sister husband and brother  in  law have all enrolled in Colaberry SODA speaks volumes about the quality of educatio Not applicablend the opportunities it offers Both my sister and husband are Colaberry SODA alumni and witnessing their successful transition into the field of data a Not applicablelytics has only solidified my decision to choose Colaberry SODA for my own career journey  Ultimately I believe that Colaberry SODA will not only help me transition into a rewarding career in data a Not applicablelytics but also provide me with the tools and opportunities to excel i Not applicablerapidly evolving industry while maintaining the lifestyle I desire", "To be successful and to reach my IT career goal ", "Great instructors I also have a lot of friends that have finished the course and have a great jobs Also its a short term course and not a    year university I also am enrolled in college I attend Colin Community College  ", "Based on strong feedbacks", "recommended", "I heard this is a great program", "the success stories   feedback", "because to have easey life", "my friend give me good advice about your platform", "Job oriented", "From what i heard and understand your teaching approach is very sought after and essential remedy to my shortcomings", "Growth and development ", "I was referred by a friend and liked what I saw", "Because I am a vetera Not applicablend this school cares about veterian", "I think its the best fit for me", "I was convinced that it would serve as my ticket out of the epitome of a dead  end job", "alumini", "its more in to computer science and i feel like its the right place to start my future goals with colabery ", "I have heard testimonies about your school", "I have heard a lot of good reviews both online and from a friend of mine who took the class", "I heard from my friends that you encourage them to do their best and to work hard", "Positive Feedback from friends", "I am a Not applicablelumni", "Have come to understand how important a data a Not applicablelyst is i Not applicablen organization ", "I liked your program and heard many good things about you", "because of testimonies", "Because I believe that your organization is the best place for me to receive quality training to achieve my desired career change "], "data": [1, 62, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "Industry": {"label": ["Food and Beverages", "None", "Transportation and Delivery", "Finance and Financial Services", "Airlines and Aerospace including Defense", "Real Estate", "Education", "I am currently not employed", "Healthcare and Pharmaceuticals", "Business Support and Logistics", "Entertainment and Leisure", "Nonprofit", "Retail and Consumer Durables", "Manufacturing", "Government", "Insurance", "Telecommunications Technology Internet and Electronics", "Utilities Energy and Extraction", "Advertising and MARCHketing", "Automotive", "Agriculture", "Construction Machinery and Homes"], "data": [16, 5, 64, 40, 7, 5, 21, 83, 90, 28, 6, 6, 24, 20, 26, 17, 21, 3, 7, 5, 1, 5]}, "YrsOnJob": {"label": ["1", "0", "4", "2", "7", "10"], "data": [119, 11, 98, 132, 88, 52]}, "InformationConsumed": {"label": ["Daily Emails\u00a0", "None", "Long video clips\u00a0", "Longer form blog articles\u00a0", "Industry ReportsorImportant Relevant Content\u00a0", "Short video clips such as Youtube videos", "Open House Events\u00a0", "Meet The Instructor Events\u00a0", "Weekly Emails\u00a0", "Short blog articles\u00a0", "Success Story Blog Posts\u00a0", "Longer Facebook Posts", "Webinars", "Short Facebook Posts\u00a0"], "data": [94, 17, 34, 12, 130, 57, 23, 36, 13, 45, 10, 4, 13, 12]}, "NetPromotorScore": {"label": ["10", "7", "6", "8", "9", "0", "5", "2", "4", "3"], "data": [221, 56, 21, 96, 62, 4, 32, 2, 4, 2]}, "ClassName_stringindexer_transform": {"label": ["0.0 - 7.6", "7.6 - 15.2", "15.2 - 22.8", "22.8 - 30.4", "30.4 - 38.0", "38.0 - 45.6", "45.6 - 53.2", "53.2 - 60.8", "60.8 - 68.4", "68.4 - 76.0"], "data": [133, 96, 71, 60, 44, 45, 25, 10, 8, 8]}, "ClassType_stringindexer_transform": {"label": ["0", "2", "1", "3"], "data": [463, 11, 25, 1]}, "Education_stringindexer_transform": {"label": ["0.0", "1.0", "3.0", "5.0", "2.0", "4.0", "7.0", "6.0"], "data": [186, 102, 67, 21, 90, 31, 1, 2]}, "HouseholdIncome_stringindexer_transform": {"label": ["0"], "data": [500]}, "No  EnrollReason_stringindexer_transform": {"label": ["0.0 - 3.0", "3.0 - 6.0", "6.0 - 9.0", "9.0 - 12.0", "12.0 - 15.0", "15.0 - 18.0", "18.0 - 21.0", "21.0 - 24.0", "24.0 - 27.0", "27.0 - 30.0"], "data": [419, 45, 14, 3, 3, 3, 3, 3, 3, 4]}, "Age_stringindexer_transform": {"label": ["2.0", "1.0", "0.0", "3.0", "4.0", "5.0"], "data": [79, 165, 205, 42, 7, 2]}, "Gender_stringindexer_transform": {"label": ["0", "2", "1", "3"], "data": [273, 5, 220, 2]}, "CountryOfOrgin_stringindexer_transform": {"label": ["0.0 - 2.4", "2.4 - 4.8", "4.8 - 7.2", "7.2 - 9.6", "9.6 - 12.0", "12.0 - 14.4", "14.4 - 16.8", "16.8 - 19.2", "19.2 - 21.6", "21.6 - 24.0"], "data": [306, 90, 62, 14, 9, 7, 4, 3, 2, 3]}, "JobRole_stringindexer_transform": {"label": ["0.0 - 9.2", "9.2 - 18.4", "18.4 - 27.6", "27.6 - 36.8", "36.8 - 46.0", "46.0 - 55.2", "55.2 - 64.4", "64.4 - 73.6", "73.6 - 82.8", "82.8 - 92.0"], "data": [395, 26, 14, 9, 9, 10, 9, 9, 9, 10]}, "WhyChooseForCareerGoals_stringindexer_transform": {"label": ["0.0 - 41.5", "41.5 - 83.0", "83.0 - 124.5", "124.5 - 166.0", "166.0 - 207.5", "207.5 - 249.0", "249.0 - 290.5", "290.5 - 332.0", "332.0 - 373.5", "373.5 - 415.0"], "data": [126, 41, 42, 41, 42, 41, 42, 41, 42, 42]}, "Industry_stringindexer_transform": {"label": ["0.0 - 2.1", "2.1 - 4.2", "4.2 - 6.3", "6.3 - 8.4", "8.4 - 10.5", "10.5 - 12.6", "12.6 - 14.7", "14.7 - 16.8", "16.8 - 18.9", "18.9 - 21.0"], "data": [237, 68, 50, 42, 37, 23, 13, 11, 10, 9]}, "InformationConsumed_stringindexer_transform": {"label": ["0.0 - 1.3", "1.3 - 2.6", "2.6 - 3.9", "3.9 - 5.2", "5.2 - 6.5", "6.5 - 7.8", "7.8 - 9.1", "9.1 - 10.4", "10.4 - 11.7", "11.7 - 13.0"], "data": [224, 57, 45, 70, 23, 17, 26, 12, 12, 14]}}}, "ManualFE": {"FE": [{"transformationsData": [{"feature_label": "ClassName", "transformation_label": "String Indexer"}], "feature": "ClassName", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "BI BootCamp  Feb 22 2014 Richardson", "max": "SQLBI Bootcamp  May 22 2021 ONLINE", "missing": "0", "distinct": "77"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "ClassName"}, {"transformationsData": [{"feature_label": "ClassType", "transformation_label": "String Indexer"}], "feature": "ClassType", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Live In  Person", "max": "Self Paced Online", "missing": "0", "distinct": "4"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "ClassType"}, {"transformationsData": [{"feature_label": "Education", "transformation_label": "String Indexer"}], "feature": "Education", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "   year of college", "max": "Some graduate school", "missing": "0", "distinct": "8"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Education"}, {"transformationsData": [{"feature_label": "HouseholdIncome", "transformation_label": "String Indexer"}], "feature": "HouseholdIncome", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "  ", "max": "  ", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "HouseholdIncome"}, {"transformationsData": [{"feature_label": "No  EnrollReason", "transformation_label": "String Indexer"}], "feature": "No  EnrollReason", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Advertising", "max": "the way tuition is paid. its a game changer to older school models.", "missing": "0", "distinct": "31"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "No  EnrollReason"}, {"transformationsData": [{"feature_label": "Age", "transformation_label": "String Indexer"}], "feature": "Age", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "36.95", "stddev": "8.71", "min": "21", "max": "None", "missing": "0", "distinct": "6"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Age"}, {"transformationsData": [{"feature_label": "Gender", "transformation_label": "String Indexer"}], "feature": "Gender", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Female", "max": "None", "missing": "0", "distinct": "4"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Gender"}, {"transformationsData": [{"feature_label": "CountryOfOrgin", "transformation_label": "String Indexer"}], "feature": "CountryOfOrgin", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Burundi", "max": "Zimbabwe", "missing": "0", "distinct": "25"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CountryOfOrgin"}, {"transformationsData": [{"feature_label": "JobRole", "transformation_label": "String Indexer"}], "feature": "JobRole", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Accountant", "max": "unemployeed", "missing": "0", "distinct": "93"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "JobRole"}, {"transformationsData": [{"feature_label": "WhyChooseForCareerGoals", "transformation_label": "String Indexer"}], "feature": "WhyChooseForCareerGoals", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "   To fill the gap in knowledge what the employer needs and what I have    Communication challenges specially in interviews", "max": "yes", "missing": "0", "distinct": "416"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "WhyChooseForCareerGoals"}, {"transformationsData": [{"feature_label": "Industry", "transformation_label": "String Indexer"}], "feature": "Industry", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Advertising and MARCHketing", "max": "Utilities Energy and Extraction", "missing": "0", "distinct": "22"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Industry"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "YrsOnJob", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "3.82", "stddev": "2.98", "min": "0", "max": "10", "missing": "0"}, "updatedLabel": "YrsOnJob"}, {"transformationsData": [{"feature_label": "InformationConsumed", "transformation_label": "String Indexer"}], "feature": "InformationConsumed", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Daily Emails\u00a0", "max": "Weekly Emails\u00a0", "missing": "0", "distinct": "14"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "InformationConsumed"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "NetPromotorScore", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "8.48", "stddev": "1.85", "min": "0", "max": "10", "missing": "0"}, "updatedLabel": "NetPromotorScore"}, {"feature": "ClassName_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "21.34", "stddev": "17.31", "min": "0.0", "max": "76.0", "missing": "0"}, "updatedLabel": "ClassName_stringindexer_t..."}, {"feature": "ClassType_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.1", "stddev": "0.38", "min": "0", "max": "3", "missing": "0"}, "updatedLabel": "ClassType_stringindexer_t..."}, {"feature": "Education_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.46", "stddev": "1.51", "min": "0.0", "max": "7.0", "missing": "0"}, "updatedLabel": "Education_stringindexer_t..."}, {"feature": "HouseholdIncome_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "HouseholdIncome_stringind..."}, {"feature": "No  EnrollReason_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.82", "stddev": "4.29", "min": "0.0", "max": "30.0", "missing": "0"}, "updatedLabel": "No  EnrollReason_stringin..."}, {"feature": "Age_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.97", "stddev": "1.05", "min": "0.0", "max": "5.0", "missing": "0"}, "updatedLabel": "Age_stringindexer_transfo..."}, {"feature": "Gender_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.47", "stddev": "0.54", "min": "0", "max": "3", "missing": "0"}, "updatedLabel": "Gender_stringindexer_tran..."}, {"feature": "CountryOfOrgin_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.83", "stddev": "3.75", "min": "0.0", "max": "24.0", "missing": "0"}, "updatedLabel": "CountryOfOrgin_stringinde..."}, {"feature": "JobRole_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "10.5", "stddev": "20.82", "min": "0.0", "max": "92.0", "missing": "0"}, "updatedLabel": "JobRole_stringindexer_tra..."}, {"feature": "WhyChooseForCareerGoals_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "172.97", "stddev": "133.95", "min": "0.0", "max": "415.0", "missing": "0"}, "updatedLabel": "WhyChooseForCareerGoals_s..."}, {"feature": "Industry_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "4.68", "stddev": "4.88", "min": "0.0", "max": "21.0", "missing": "0"}, "updatedLabel": "Industry_stringindexer_tr..."}, {"feature": "InformationConsumed_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "3.12", "stddev": "3.35", "min": "0.0", "max": "13.0", "missing": "0"}, "updatedLabel": "InformationConsumed_strin..."}], "message": "Successfully executed", "status": 1, "userid": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "autoFE_flag": true, "stageId": "66a4e2c44a48563179e65f08", "FESamplePath": "/FileStore/platform/sampleData/66a4e2c44a48563179e65f08_AutoFE/part-00000-56531082-9de7-4028-9ad0-ad02de097073-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/66a4e2c44a48563179e65f08_AutoFE/part-00000-56531082-9de7-4028-9ad0-ad02de097073-c000.csv", "samplecount": 500, "originalcount": 1000, "dataPercentage": "10", "FEGraph": [{"values": {"label": ["DATA ANALYTICS  MARCH 30 2024 ONLINE", "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "SQLBI Bootcamp  April 24 2021 ONLINE", "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "SQLBI Bootcamp  Jun 26 2021 ONLINE", "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "DATA ANALYTICS  JUNE 29 2024 ONLINE", "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "None", "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "DATA ANALYTICS  JUNE 01 2024 ONLINE", "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "Data Analytics I with MS SQL Server BI  Jul 14 2018 ONLINE", "DATA ANALYTICS  APRIL 27 2024 ONLINE", "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "Data Analytics I with MS SQL Server BI  Jan 6 2018 IRVING", "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "DATA ANALYTICS BOOTCAMP  Jan 18 2020 ONLINE", "SQLBI Bootcamp  Mar 18 2017 PLANO TX", "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "SQLBI Bootcamp  May 22 2021 ONLINE", "DATA ANALYTICS BOOTCAMP   July 13 2019 PLANO", "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "SQLBI Bootcamp  Jul 08 2017 PLANO", "DATA ANALYTICS BOOTCAMP  June 1  2019 ONLINE", "DATA ANALYTICS  JULY 27 2024 ONLINE", "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "Data Analytics I with MS SQL Server BI  Mar 10 2018 PLANO", "Data Analytics I with MS SQL Server BI  Jan 13 2018 PLANO", "Data Analytics I with MS SQL Server BI  Sep 8 2018 ONLINE", "BI BootCamp  July 23rd 2016 Plano TX", "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "IPBC DIRECT SIGN UP  2024", "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "BI BootCamp  June 14 2014 Richardson", "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "Data Analytics I with MS SQL Server BI  Mar 10 2018 ONLINE", "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "BI BootCamp  Nov 7 2015 Online", "DATA ANALYTICS BOOTCAMP  Mar 30 2019 ONLINE", "SQLBI Bootcamp  Mar 18 2017 ONLINE", "BI BootCamp  Jan 3 2015 Richardson TX", "DATA ANALYTICS BOOTCAMP  July 20  2019 ONLINE", "DATA ANALYTICS BOOTCAMP  Sep 07 2019 PLANO", "Data Analytics I with MS SQL Server BI  Jul 14 2018 PLANO", "Data Analytics I with MS SQL Server BI  Sep 8 2018 IRVING", "Data Analytics I with MS SQL Server BI  Sep 15 2018 PLANO", "Data Analytics I with MS SQL Server BI  Nov 17 2018 ONLINE", "BI BootCamp  Feb 22 2014 Richardson", "Data Analytics I with MS SQL Server BI  May 5 2018 ONLINE", "DATA ANALYTICS BOOTCAMP   Mar 23 2019 PLANO", "SQLBI Bootcamp  Jan 14 2017 IRVING"], "data": [6, 12, 14, 6, 11, 7, 19, 20, 16, 13, 7, 7, 11, 12, 6, 8, 13, 9, 7, 15, 3, 9, 7, 7, 3, 6, 6, 11, 12, 11, 18, 6, 1, 5, 15, 11, 7, 16, 6, 4, 2, 5, 5, 1, 12, 9, 8, 2, 3, 1, 10, 1, 1, 1, 1, 6, 6, 1, 10, 1, 5, 2, 6, 2, 2, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "ClassName", "count": 77, "min": "BI BootCamp  Feb 22 2014 Richardson", "max": "SQLBI Bootcamp  May 22 2021 ONLINE"}, {"values": {"label": ["Live Online", "None", "Live In  Person", "Self Paced Online"], "data": [463, 11, 25, 1]}, "label": "ClassType", "count": 4, "min": "Live In  Person", "max": "Self Paced Online"}, {"values": {"label": ["Graduated from college", "   years of college", "Graduated from high school", "Some graduate school", "Completed graduate school", "   year of college", "Did not attend school", "None"], "data": [186, 102, 67, 21, 90, 31, 1, 2]}, "label": "Education", "count": 8, "min": "   year of college", "max": "Some graduate school"}, {"values": {"label": ["  "], "data": [500]}, "label": "HouseholdIncome", "count": 1, "min": "  ", "max": "  "}, {"values": {"label": ["Friend  or close relationship", "Friend  or  close relationship", "info I found on google", "The course content.", "Advertising", "Community", "Online classes", "None", "On campus classes", "F  or    mer Student", "Employer", "It was the few interactions with the staff that seemed very genuine. I get the sense that everyone at Colaberry wants to see you become the next success st  or    y and thats exactly what I want. ", "Feedback from f  or    mer students", "I want better life.", "Veteran assistance", "Inf  or    mation you found on Facebook", "curriculum", "the way tuition is paid. its a game changer to older school models.", "n  or  a", "Info you found on LinkedIn", "Help getting job after courses completed", "Testimonials from Past Students outlining how their  experience at Colaberry contributed to their career success.", "Full Scholarship", "Flexibility and overall sense of I want you to succeed that I felt from the site and w  or    d  of  mout.", "That colabery would fulfil dreams ", "Individuals who had gone through the course and shared their st  or    ies.", "peoples success st  or    ies", "Inf  or    mation I found from friend.", "Having got inf  or    mation from someone whos got a decent job after taking your course.", "I couldnt find any other school ", "i am a success st  or    y"], "data": [1, 242, 2, 1, 13, 43, 134, 10, 21, 1, 11, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "No  EnrollReason", "count": 31, "min": "Advertising", "max": "the way tuition is paid. its a game changer to older school models."}, {"values": {"label": ["50", "30", "40", "21", "60", "None"], "data": [79, 165, 205, 42, 7, 2]}, "label": "Age", "count": 6, "min": "21", "max": "None"}, {"values": {"label": ["Male", "I prefer not to specify", "Female", "None"], "data": [273, 5, 220, 2]}, "label": "Gender", "count": 4, "min": "Female", "max": "None"}, {"values": {"label": ["Ghana", "Nigeria", "Ethiopia", "United States", "Kenya", "India", "Eritrea", "None of the above", "Cameroon", "Rwanda", "Sudan", "Togo", "South Sudan", "Uganda", "Burundi", "Zambia", "Cote d'Ivoire", "Zimbabwe", "Sierra Leone", "Congo Democratic Republic of the", "China", "Morocco", "Mexico", "Tunisia", "Canada"], "data": [5, 64, 82, 149, 75, 22, 25, 26, 15, 5, 2, 1, 1, 9, 2, 1, 2, 4, 1, 2, 1, 1, 3, 1, 1]}, "label": "CountryOfOrgin", "count": 25, "min": "Burundi", "max": "Zimbabwe"}, {"values": {"label": ["Partner", "None", "Currently unemployed", "Individual Contributor", "Real estate agent ", "Truck Driver", "Hourly Employee", "Management  C Level", "Researcher", "Not employed for now", "Team Lead", "Other", "Intern", "Owner", "house wife", "Unemployed", "Manager", "Database Administrator", "unemployed", "pharmacy technician", "delivery", "manufacturing technician", "Working a little from home", "I do not have awork", "Preparing to re enter the workforce after physical therapy due to an auto accident.", "Independent contractor", "small business entrepreneur", "Driver", "PARALEGAL", "Tax Preparer", "Independent Contractor;Process Server", "stay at home mom", "Insurance Adjuster Realtor", "Correctional officer", "Volunteer", "Senior Manager", "currently not working", "student", "Independent contractor   health care", "Stay home mom and started small business name    Days LLC", "senior analyst", "SELF EMPLOYED", "Contractor", "Home Maker", "Teacher", "Accountant", "College Student", "Driver ", "Army", "MARCHketing Director", "Service Desk Analyst", "Dispatcher", "Configuration Analyst II", "Commission employee ", "Business Analyst ", "Analyst", "Student", "Self employed", "home maker", "self employed", "unemployeed", "none", "Brewer", "Housemaker", "independent contractor", "Not working", "Independent Contractor Taxi Driver ", "Self employee computer technician", "Worked in the past in IT. Current home maker.", "Database admin", "Healthcare   Ct Technologist", "Transitioning Veteran", "Medical technician", "independent ", "RN", "Currently i am unemployed", "na", "Customer Service Representative", "Full time Student", "Was a Financial Analyst currently out of Job", "nurse", "Certified nurses aide ", "Currently Not working", "Senior Tech Computer Desktop Support", "Housewife", "Business Development Analyst", "NURSE", "Counselor", "Information Technology", "in between jobs", "DBAReport Developer", "Not employed ", "Development Specialist"], "data": [10, 4, 2, 61, 1, 2, 153, 5, 2, 1, 39, 71, 5, 19, 1, 6, 26, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 3, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "JobRole", "count": 93, "min": "Accountant", "max": "unemployeed"}, {"values": {"label": [" heard  success stories from friends who do not have IT skills but Colaberry trained them and are now IT professio Not applicablels ", "None", "In the near future information technology is a new form of business growth that is my pla Not applicablend strong demand", "I did my research and trust that the knowledge is here ", "Referred to you from a friend  ", "I would like to have an IT background to help complement what I am studying in college  Economics ", "My friend went through the program and he has achieved success since that time And he felt that I could also achieve the same success", "success story", "I heard the testimonials and believe in them", "To improve my career", "l listened to success stories and l am at that point of trying to change my life to the better", "I was informed of the prompt assistance help with securing jobs", "referral from friends", "Better job", "I wanted to work from home", "I want to work by IT database", "I have a couple of friends going through classes at the moment and a recent graduate who have all given me motivatio Not applicablel information on how to build upon my future", "The great feedbacks I got from my closest friends", "I believe in skill set that Ill acquire with the program", "I heard that colaberry is the perfect BOOTCAMP center on data science A Not applicablelytics field and also helps until getting a job ", "I referred by a friend who explained the advantages ", "I have heard from friends who have taken classes great things about your school and I wanted to do that for myself and better my currier", "  All the best  feedback from friends ", "Because it is skill oriented ", "It was recommended to me", "I need something that I can do while working my current job", "job", "because it is the best data a Not applicablelytics school ", "positive reviews of the school", "Your school is good a teaching data a Not applicablelytics", "I heard from my friend that it is one of the best", "Because i saw the success stories", "WORDS FROM FRIEND", "heard good reports about the school", "I HEARD GREAT NEWS FROM A  FRIEND", "For Money", "learning proces is good  ", "I wanted an instructor led ML course", "I witnessed the success story of a family member who is a Not applicablelumni of Colaberry She is definitely living the American Dream I was recently let go at my job So this was absolutely the right timing I enrolled", "suggestion from afriend", "I love the fact that colberry is online and flexible payment options are available the fact that colaberry provides you with a one on one mentor to help you through the course work on your resume and help you find a job and still provide mentorship and assistance when you need help at your new job after the course", "it was cheaper and influence from friends that went to your school", " I have seen many practical results which are graduates from your courses", "I hear noting but success from all the people I talk to that attended  Colaberry  ", "I have been searching for a school that are excel at data A Not applicablelytics and based on the information I got from friends Colaberry is the best place to equip myself in the area of data a Not applicablelytics ", "Convenience of online learning  and reputation ", "I have heard good things about the school from a friend", "Because of the success stories attached to the school", "Good reviews from family members", "Highly Recommended by a Friend", "GOOD REVIEW ", "success stories heard from my friends and people around me ", "The entire program structure goes beyond the ordi Not applicablery concepts of many educatio Not applicablel Institutions", "Neighbor turned friend    referral ", "Because l have a friend who got his certificate here and he now has a great stable job ", "Statistics and training", "For the fact that it is the best place that gets me ready for a job", "My brother in  law attended years ago and hes making great money", "My friend told me that Colaberry is a good school for data a Not applicablelytics", "After considering other options I chose Colaberry because of the work that they have done with military veterans It lets me know that with hard work and focus I ca Not applicablechieve my goal of entering the IT field just as other veterans have done", "because couple friends told  me about it", "very good curriculum ", "because I heard a lot from my friend and his friends who got their job after taking this program", "Familiar faces and the story behind how it all began", "Good feedback from former students", "Students success Stories", "I heard a good story about Colaberry", "To help me understand my courses and further my career", "heard of many successful stories and the i liked the way of teaching and homeworks", "seemed easy and understandable", "A friend did the program and loved it I have been wanting to do something similar to this but never knew where to start", "I have done some research and data a Not applicablelyst is what I want", "Professio Not applicablelism and high level of experience in problem solving and delivery of required knowledge", "Success stories", "Structure and help with resume job search", "I chose Colaberry after speaking to a friend whose currently been enrolled for about a month now She shared her experience with me and so far I am impressed I think this school will give me a foot in the door to help me reach my career goal", "Because I to have a job in IT field", "Success rate", "friends were there ", "Speaking to a friend", "Because I have two close friends who graduated from your school they are working from home and are making good money", "Great reviews from past students", "Its well structured and has a good reputation for job placement", "Was referred to by a former studient ", "A FRIEND TOLD ME ABOUT THE COURSE", "REFERRAL FROM CURRENT STUDENT   PAULINE KAMERE", "I was looking for a career to start working towards", "what people say", "career desires and success stories from people who went through colaberry and their lives changed positively", "best reviews", "We are headed into the digital world if I MAY say everything today you can purchase at the convenience of your device I figured MAYbe it wouldnt hurt to give this a try to be Familiar with technology and turn this occupation into a career", "Training and job opportunities", "Recommendations from friends", "Due to knowing someone perso Not applicablelly who attended and was successful showed the goal was obtai Not applicableble and tangible as long as i stayed determined ", "to enhance my skills and knowledge in IT Field ", "better pay", "I have heard just extraordi Not applicablery reviews about this establishment and I might want to go to this foundation to future my instruction", "Vetera Not applicablessistance and job placement assistance", "reports from alumni", "I know someone who completed the course and heard great things about the program", "Was motivated about the successes of the other students", "To advance career", "GOOD REFERRAL", "I heard many students get a good paying job and i want to part of it too ", "Referral ", "because i hered that is the better choise in here where i live and i proved what i hered ", "To be fi Not applicablencially independent", "Ive seen how it has changed lives", "The school normalizes data a Not applicablelytics i Not applicableway that has one thinking it is relatable to every business We must simply put in the time to learn its format and techniques ", "Studied and friends recommended me", "Practical application", "Because I was highly recommended to the school by my friend who graduated from your program successfully", "I wanted a career change into the IT business and Colaberry i Not applicableddition to being in the same city where i live it came in on top in my research ", "alumni story", "Referred from a friend of friend that he knew took the course and made a career change  He is now making really good money just starting out  ", "Recommendation from friend", "great value for money and time", "Job improvement and salary", "Success story from a friend", "great BOOTCAMP curriculum ", "Referred by a friend", "interesting", "I like how you guys help your students eve Not applicablefter they graduate ", "I heard that it was hands on training supported with videos which was my preferred way of learning", "Heard you have a proven track record of successfully training and helping students succeed ", "Module and tutorial o Not applicablece a week", "its growing day by day", "Its rated very highly", "It seems simple to communicate", "It comes highly recommended", "My friend had provided good feedback about the program", "Ive heard from others who have taken the course how it changed their life", "TO improve quality of life", "I read that Colaberry has good reviews so want to see and try it myself with a leap of faith", "Colaberry is The nearest school I know ", "the referral spoke highly of the school and the programme", "The good reputation of the school", "Speed Cost Track Record", "GOOD SUCCESS STORIES", "Reaching my fi Not applicablencial goals in my current career will be very challenging", "A friend highly recommended your school ", " testimony of a friend", "A coworker informed me about the program and I was interested in improving myself as well as learning skills that will prepare me for the future ", "I enjoyed the open house and I was encouraged by a friend", "I received encouragement from the cousin of a friend who completed the data a Not applicablelytics BOOTCAMP course", "because of the positive feedback i have received", "Referral from a trusted source ", "Alumni testimony and success story ", "to improve my life", "good rewiews", "The curriculum is what stood out to me", "It was recommended by a friend who is in the IT world", "Enhance career in short period of time by learning industry required skills", "I heard good things about school and my friend got job too", "It has the best  program and boot camp structure as per advice from a Not applicablelumni its can be done online with flexible schedules Military scholarship and generally welcoming and helpful environment when taking the courses", "yes", "Affordability", "I was referred by a friend after doing my research he really did recommend this school", "good goodwill", "to improve myself and change my career", "Heard very positive review Class time matches my schedule ", "I heard of only success stories", "TO IMPROVE AND CHANGE MY SELF FOR BETTER CEREER", " Not applicable", "I chose your school because traditio Not applicablel education in the US is failing kids flat There is a lot of skills gap that traditio Not applicablel    years universities even IVY league one cant fix Colaberry is better than coursera", "Lots of success stories ", "Well organize and oriented details ", "interview readiness", "cause of the success stories from friends", "On the job training and assisting with job hiring", "My cousin recommended it; its a worthwhile career", "Recommended", "Teaching process", "I feel it will bring me right where I want to be  and other colleges like universities would just put me in debt  I also love that the school is hands on", "Friend referral", "because i believe it will help me get a deceit job", "Have read more about the reviews ", "A friends recommendation ", "I am hoping to gain experience and hopefully a well paying job afterwards", "I love the school curriculum and how the studies are structured Also success stories from friends ", "I wanted to change career as I just moved to America from Ca Not applicableda and this seem to be the best choice as my family friend spoke highly of this school ", "Because colaberry is a reference now to train people and this peoples get a jobs and change live that my goal ", "Hearing about success stories from Colaberry alumni", "The success stories of people who have been through it", "because there`s endless opportunities to develop your career ", "Technique used for job placement", "because of good testimony that my friend gives to me", "Because your about helping folks and I couldnt afford $  that the other schools were asking me to pay Also my friend said many great things about your support team ", "My goal career is to work from home", "I heard the testimony of my friend ", "Perso Not applicablel testimony from a friend and getting more information from customer service", "Impressive testimonies from a Not applicablelumni", "I made some poor decisions when i was younger and didnt finish school I needed a path out of the restaurant industry ", "Because of the testimonials i heard ", "working independently working remote", "Recommendation", "BECAUSE OF SUCCESS STORIES", "Convenient relevant and aligns with new job role", "because I can et more support from the team", "Alumni referral", "Career", "COURSE LENGTH COMPARED TO TRADITIO Not applicableL COLLEGES", "I talked to a Family member who is attending your course and she gave me very good feedback ", "texas", "reputation precedes ", "By interacting with alumni and see real change", "SQL python data a Not applicablelytics", "It is very structured and it operates a group that is a big motivation", "Heard proper guidance and make the student do it ", "My friend recommended Colaberry", "It will help me advance my career ", "I was told collabery is the place to be if you  need to succeed in career change", "Your teaching method It is career based", "THE WORLD CHANGING GOING DIGITAL AND I NEED KNOWLEDGE IN DIGITAL WORLD", "I have heard much about your teaching", "Help with finding job afterwards", "My friend went to this school and she had a great experience", "My friends learned in Colaberry are a life testimony seeing them reach their goal really motivated me go forward and i hope to see my self there too", "based on success story from another person", "Because I wanted hands on training that was very to the point In college everything took longer than it should of and classes that could have been done in weeks if structured properly took a semester or even multiple semesters Colaberrys program is much shorter and allows me to learn the tools and knowledge faster ", "Encouragement from a friend already in class and positive testimonies from YouTube", "My husband recommended", "I hear good stories from a fiend regarding the training program and possible job replacement opportunity ", "Grate reviews", "referral from previous student", "want to lear Not applicablend your class time", "i choose colaberry because i will acquire the industry oriented knowledge and skills so that i can hit the ground running", "Career goal", "Success stories and I know someone who attended", "Friend referred more opportunity ", "   To fill the gap in knowledge what the employer needs and what I have    Communication challenges specially in interviews", " i was really impressed my friend who took his career in colliery ", "A friend convinced me of its benefits", "For better job position ", "my expectation to succeed", "Cause of the stories I heard ", "I heard from one of my friend  former student of Colaberry  it is a good school ", "Because my friend graduated your class and now is living a Not applicablemazing life with well paid job He inspired me to join the class ", "Perso Not applicablel experience from a close friend", "I JUST HEARD A GOOD THINGS ABOUT THE SCHOOL", "A FRIEND INTRODUCED ME", "Referred by a successful Alumni I want to be like him He is doing great", "Recommendation ", "Friend", "hands  on", "A friend convinced me", "I want to pursue my desire to become involved in Data Science as i have worked as a database a Not applicablelyst for some time in the past And also to gain knowledge to have a professio Not applicablel path to support my self and my family", "Success Stories Scholarship", "Still deciding  Heard from friend that there are good results ", "Because of the high level of job placement", "I want to get the skill to functio Not applicables a Not applicable Not applicablelyst", "i like that it offers an online program", "Good curriculum  Good job placements  ", "Referral", "per testimony you help with employment ", "I  heard good recommendations about the school", "Because I want to elevate my career goals and opportunities and this seems like a legit and good place to achieve that  ", "its has a track record of success and career placements", "seen other people make it", "I love IT and a want to get some experience in this industry", "improve my career and income", "I am doing a career switch to Data A Not applicablelytics I am looking for a school that will help me improve my data a Not applicablelysis skills and prepare me to ace the job interviews", "because it convenient for me  ", "I have been told that it was a good school and it has lots of information", "a great referral from a friend ", "IDK ", "Great review from a friend", "Gain new skill sets", "I picked this school because of the success stories I heard from alumni students", "friends results", "Because it was the first school I saw that not only offers continued education for professio Not applicablels but also for people who have no prior IT experience I Not applicableddition you make it affordable for people to get this education by providing payment plans early bird specials etc  Fi Not applicablelly the job placement aspect of it along with the portfolio creation is what made this most appealing You are really helping your students not like some of the other places that ripped people off back in the late     s early   s ", "Because of the job guarantee ", "matches the current IT demand field", "It seems like the alumni network is a valid way to actually get a job  Seems like a lot of code schools just want your money", "BECAUSE YOUR PROGRAM HAS WHAT I NEED TO ACHIEVE MY LONG TERM CAREER IN IT", "career change", "friend", "Close friends have been successful using this program", "To have a better life to make more money", "mentorship program", "Good reviews", "FULL SCHOLARSHIP", "I felt the curriculum would help me become a data engineer  ", "Someone I know had completed a course through Colaberry", "Ive seen others success with your program", "It helps individual to build up his her career in the IT sector ", "I want to change careers and look for something long term with job security", "because of your methodology ", "I heard about people successful ", "change of career", "success stories of cola berry all over the country", "SHORT TIME AND IPBC", "because of my friend who said good things about your school ", "Career change and I would like to explore the IT industry ", "I heard from friend Colaberry is best school", "They have helped my cousi Not applicables well as others  get into a better position So I believe they will do the same for me", "To improve my carrier and life standard", "get knowledge  and earn money", "because my friend studied in your school and he is now successful", "from freinds", "Career Shifting I choose this school due to a former student graduating and landing a solid job with an income increase", "I heard all good news about Colaberry the friends went there talks about it a lot and they suggested me to register and learn ", "Colaberry made a huge difference in my life a few years ago", "The short answer is that you offered me unbelievable fi Not applicablencial help And you are offering a lucrative course data a Not applicablelytics ", "Reputatio Not applicablend success stories from Alumni and more so people I know perso Not applicablelly", "A friend told me about it", "I believe Colaberry is one of the best schools in technology field  ", "TO GET KNOWLEDGE ON THE IT WORLD", "to upgrade my career", "Because of the good reviews ", "Referrals from close Friends and how it has changed their lives", "I chose Colaberry to help reach my career because I heard a lot of good from people who took class with the school", "I have a friend who successfully completed the course and she suggested that it was a good option if I have to get into the IT job MARCHket", "Colleague told me", "recomended by a friend", "Perso Not applicablel recommendation from a trust worthy friend and a desire to move into a more applicable growing industry while learning new skills that I can one day use to help others ", "referred by a friend", "I choose colaberry because i wanted a change in my life and that of my Family", "Because of the practical training approach to deliver graduates who are ready for the job MARCHket", "Heard good things about the program from a former student I was especially motivated by the job preparatio Not applicablend support aspect of the Colaberry program", "I was inspired by a friend who also attended Colaberry ", "Strong reference from a friend ", "Because it seems interesting and I heard theres a good future in it", "flexibility of training", "Because the success story associated with it", "I came to know that Colaberry is the best place to be Data Scientist ", "referral", "because of the good reviews and the content", "The fact that I can learn new skill i Not applicableshort period a time", "Positive feedback from alumni", "Because it seems that I didnt have anyone guide me or take interest in my career Based upon the great reviews  I was convinced that this is what I needed", "I like IT", "I have hear success stories from former students and the guidance provided to obtai Not applicablejob is not really found with other schools", "A friend introduced it to me and I listened to the success stories from the site", "The Data A Not applicablelytics focus program the reviews on course report the dates and times for the program and the military scholarship", "Previous student", "I have a fried who is currently in Colaberry and also heard of some success Stories", "Because I had a lot of positive feedback about the school ", "I know people who went through the program and are doing well", "To learn data tools ", "Timing", "Good reputation from the few people i have interreacted with over the few months ", "alumni", "Colaberry gets straight to the point If I was to choose a major in the same field at a university it would take me longer", "It works", "I took that Colaberry as one of my friend told me about it and one day we went to Boston MA joined the class and it is now being my career goal because I have a dream to work in this field since I was high school ", "i heard success stories", "I trusted that the information shared Colaberry Alumin shared with me was credible", "i hear about colaberry a lot of good things the school is very supportive ", "Assistance is job placement", "Colaberry will help me get a carrier path The tuition is also affordable", "reviews on social media", "Achieve a new career", "Heard good things about Colaberry from friends", "Its short term training and well known", "Duration of courses and class", "HAVE HEARD A LOT OF GOOD FEEDBACK ABOUT COLABBERY", "Knowing a couple of people who have successfully completed the course and have gotten placed Seeing the way their lives have changed inspired me to do something more with my life and career!", "I have two cousins that graduated from this program", "Because of the testimonies online about the particular school program", "I have heard so many people are doing better after completing SQL from Colaberry That makes me interested", "I have heard good things", "it has a good reputatio Not applicablend i loved the way you take care of your students untill they are good to go for jobd", "It helped a friend of mine reach his goals", "Provided a scholarship opportunity", "It was recommended by a family member who knows someone that completed the course It came highly recommended", "Good Reputation ", "The school has a great reputatio Not applicablend the goal is to help people wi Not applicablejob as long as one puts in the work I know its a guarantee", "referral feedback about job hunting ", "I heard it was the quickest place to get your data a Not applicablelytics diploma degree and thats what I needed in my life at that point in time So here I am", "Diversity", "i want to lear Not applicablend add valuable skill", "Seeing results ", "THE TESTIMONIALS OF PAST STUDENT", "A referral from a friend", "Had good reviews and people had their stories to share", "everyone i talked to referred me to this school", "no", "A friend recommended it to me", "Yes ", "The reviews and testimonies", "It was the only opportunity i had", "Listening to other peoples stories", "I have learnt Data science by myself but I do not have direct experience in IT industry I want to build my portfolio and network for career growth Looking forward to data a Not applicablelytics as first step toward industry", "Learn IT processess", "Because of Alumni Success The School has a good rating and I wanted to do data science", "From  the feedback I get from my friends who have attended the program in the  past indicates the program is quite rich and  creates a good launching pad into the  MARCHket especially for beginners like me", "To better advance in my career by identifying the best opportunities of employment", "I want practical skills soon", "I chose Colaberry School of Data A Not applicablelytics  Colaberry SODA  because it perfectly aligns with my career aspirations and offers the ideal platform to transition into the dy Not applicablemic field of data a Not applicablelytics As someone with a background in Executive Assisting and Project Ma Not applicablegement Ive developed a keen eye for detail a love for problem  solving and a k Not applicableck for optimizing processes These skills coupled with my passion for math and a Not applicablelytics make data a Not applicablelytics a  Not applicabletural progression for me  What drew me specifically to Colaberry SODA is its reputation for fostering a comprehensive understanding of both the theoretical and practical aspects of data a Not applicablelysis The curriculums emphasis on real  world applications and hands  on experience will not only equip me with the necessary technical skills but also provide me with the confidence to tackle complex a Not applicablelytical challenges i Not applicableny industry  Moreover the flexibility offered by Colaberry SODA including remote learning options is incredibly appealing to me As someone who values the freedom to work remotely and pursue my passions outside of work this flexibility ensures that I ca Not applicablechieve a healthy work  life balance without compromising on my professio Not applicablel development  Furthermore the fact that my sister husband and brother  in  law have all enrolled in Colaberry SODA speaks volumes about the quality of educatio Not applicablend the opportunities it offers Both my sister and husband are Colaberry SODA alumni and witnessing their successful transition into the field of data a Not applicablelytics has only solidified my decision to choose Colaberry SODA for my own career journey  Ultimately I believe that Colaberry SODA will not only help me transition into a rewarding career in data a Not applicablelytics but also provide me with the tools and opportunities to excel i Not applicablerapidly evolving industry while maintaining the lifestyle I desire", "To be successful and to reach my IT career goal ", "Great instructors I also have a lot of friends that have finished the course and have a great jobs Also its a short term course and not a    year university I also am enrolled in college I attend Colin Community College  ", "Based on strong feedbacks", "recommended", "I heard this is a great program", "the success stories   feedback", "because to have easey life", "my friend give me good advice about your platform", "Job oriented", "From what i heard and understand your teaching approach is very sought after and essential remedy to my shortcomings", "Growth and development ", "I was referred by a friend and liked what I saw", "Because I am a vetera Not applicablend this school cares about veterian", "I think its the best fit for me", "I was convinced that it would serve as my ticket out of the epitome of a dead  end job", "alumini", "its more in to computer science and i feel like its the right place to start my future goals with colabery ", "I have heard testimonies about your school", "I have heard a lot of good reviews both online and from a friend of mine who took the class", "I heard from my friends that you encourage them to do their best and to work hard", "Positive Feedback from friends", "I am a Not applicablelumni", "Have come to understand how important a data a Not applicablelyst is i Not applicablen organization ", "I liked your program and heard many good things about you", "because of testimonies", "Because I believe that your organization is the best place for me to receive quality training to achieve my desired career change "], "data": [1, 62, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "WhyChooseForCareerGoals", "count": 416, "min": "   To fill the gap in knowledge what the employer needs and what I have    Communication challenges specially in interviews", "max": "yes"}, {"values": {"label": ["Food and Beverages", "None", "Transportation and Delivery", "Finance and Financial Services", "Airlines and Aerospace including Defense", "Real Estate", "Education", "I am currently not employed", "Healthcare and Pharmaceuticals", "Business Support and Logistics", "Entertainment and Leisure", "Nonprofit", "Retail and Consumer Durables", "Manufacturing", "Government", "Insurance", "Telecommunications Technology Internet and Electronics", "Utilities Energy and Extraction", "Advertising and MARCHketing", "Automotive", "Agriculture", "Construction Machinery and Homes"], "data": [16, 5, 64, 40, 7, 5, 21, 83, 90, 28, 6, 6, 24, 20, 26, 17, 21, 3, 7, 5, 1, 5]}, "label": "Industry", "count": 22, "min": "Advertising and MARCHketing", "max": "Utilities Energy and Extraction"}, {"values": {"label": ["1", "0", "4", "2", "7", "10"], "data": [119, 11, 98, 132, 88, 52]}, "label": "YrsOnJob", "count": 6, "min": "0", "max": "10"}, {"values": {"label": ["Daily Emails\u00a0", "None", "Long video clips\u00a0", "Longer form blog articles\u00a0", "Industry ReportsorImportant Relevant Content\u00a0", "Short video clips such as Youtube videos", "Open House Events\u00a0", "Meet The Instructor Events\u00a0", "Weekly Emails\u00a0", "Short blog articles\u00a0", "Success Story Blog Posts\u00a0", "Longer Facebook Posts", "Webinars", "Short Facebook Posts\u00a0"], "data": [94, 17, 34, 12, 130, 57, 23, 36, 13, 45, 10, 4, 13, 12]}, "label": "InformationConsumed", "count": 14, "min": "Daily Emails\u00a0", "max": "Weekly Emails\u00a0"}, {"values": {"label": ["10", "7", "6", "8", "9", "0", "5", "2", "4", "3"], "data": [221, 56, 21, 96, 62, 4, 32, 2, 4, 2]}, "label": "NetPromotorScore", "count": 10, "min": "0", "max": "10"}, {"values": {"label": ["0.0 - 7.6", "7.6 - 15.2", "15.2 - 22.8", "22.8 - 30.4", "30.4 - 38.0", "38.0 - 45.6", "45.6 - 53.2", "53.2 - 60.8", "60.8 - 68.4", "68.4 - 76.0"], "data": [133, 96, 71, 60, 44, 45, 25, 10, 8, 8]}, "label": "ClassName_stringindexer_transform", "count": 10, "min": 0, "max": 76}, {"values": {"label": ["0", "2", "1", "3"], "data": [463, 11, 25, 1]}, "label": "ClassType_stringindexer_transform", "count": 4, "min": "0", "max": "3"}, {"values": {"label": ["0.0", "1.0", "3.0", "5.0", "2.0", "4.0", "7.0", "6.0"], "data": [186, 102, 67, 21, 90, 31, 1, 2]}, "label": "Education_stringindexer_transform", "count": 8, "min": "0.0", "max": "7.0"}, {"values": {"label": ["0"], "data": [500]}, "label": "HouseholdIncome_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0.0 - 3.0", "3.0 - 6.0", "6.0 - 9.0", "9.0 - 12.0", "12.0 - 15.0", "15.0 - 18.0", "18.0 - 21.0", "21.0 - 24.0", "24.0 - 27.0", "27.0 - 30.0"], "data": [419, 45, 14, 3, 3, 3, 3, 3, 3, 4]}, "label": "No  EnrollReason_stringindexer_transform", "count": 10, "min": 0, "max": 30}, {"values": {"label": ["2.0", "1.0", "0.0", "3.0", "4.0", "5.0"], "data": [79, 165, 205, 42, 7, 2]}, "label": "Age_stringindexer_transform", "count": 6, "min": "0.0", "max": "5.0"}, {"values": {"label": ["0", "2", "1", "3"], "data": [273, 5, 220, 2]}, "label": "Gender_stringindexer_transform", "count": 4, "min": "0", "max": "3"}, {"values": {"label": ["0.0 - 2.4", "2.4 - 4.8", "4.8 - 7.2", "7.2 - 9.6", "9.6 - 12.0", "12.0 - 14.4", "14.4 - 16.8", "16.8 - 19.2", "19.2 - 21.6", "21.6 - 24.0"], "data": [306, 90, 62, 14, 9, 7, 4, 3, 2, 3]}, "label": "CountryOfOrgin_stringindexer_transform", "count": 10, "min": 0, "max": 24}, {"values": {"label": ["0.0 - 9.2", "9.2 - 18.4", "18.4 - 27.6", "27.6 - 36.8", "36.8 - 46.0", "46.0 - 55.2", "55.2 - 64.4", "64.4 - 73.6", "73.6 - 82.8", "82.8 - 92.0"], "data": [395, 26, 14, 9, 9, 10, 9, 9, 9, 10]}, "label": "JobRole_stringindexer_transform", "count": 10, "min": 0, "max": 92}, {"values": {"label": ["0.0 - 41.5", "41.5 - 83.0", "83.0 - 124.5", "124.5 - 166.0", "166.0 - 207.5", "207.5 - 249.0", "249.0 - 290.5", "290.5 - 332.0", "332.0 - 373.5", "373.5 - 415.0"], "data": [126, 41, 42, 41, 42, 41, 42, 41, 42, 42]}, "label": "WhyChooseForCareerGoals_stringindexer_transform", "count": 10, "min": 0, "max": 415}, {"values": {"label": ["0.0 - 2.1", "2.1 - 4.2", "4.2 - 6.3", "6.3 - 8.4", "8.4 - 10.5", "10.5 - 12.6", "12.6 - 14.7", "14.7 - 16.8", "16.8 - 18.9", "18.9 - 21.0"], "data": [237, 68, 50, 42, 37, 23, 13, 11, 10, 9]}, "label": "Industry_stringindexer_transform", "count": 10, "min": 0, "max": 21}, {"values": {"label": ["0.0 - 1.3", "1.3 - 2.6", "2.6 - 3.9", "3.9 - 5.2", "5.2 - 6.5", "6.5 - 7.8", "7.8 - 9.1", "9.1 - 10.4", "10.4 - 11.7", "11.7 - 13.0"], "data": [224, 57, 45, 70, 23, 17, 26, 12, 12, 14]}, "label": "InformationConsumed_stringindexer_transform", "count": 10, "min": 0, "max": 13}]}, "source_attributes": null, "autoFE_flag": true}, "status": "new", "position": {"x": 62, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/transformation/feature-transformation.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "transformation", "text": "Auto FE", "slug": "auto-fe", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "10"}, "ManualFE": {"FE": []}, "selectedFE": [], "autoFE_flag": true}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"inherited": true, "checked": true, "field": "YrsOnJob", "alias": "YrsOnJob", "type": "numeric", "position": 0}, {"inherited": true, "checked": true, "field": "NetPromotorScore", "alias": "NetPromotorScore", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "ClassName_stringindexer", "alias": "ClassName_stringindexer", "type": "real", "position": 2}, {"inherited": true, "checked": true, "field": "ClassType_stringindexer", "alias": "ClassType_stringindexer", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "Education_stringindexer", "alias": "Education_stringindexer", "type": "real", "position": 4}, {"inherited": true, "checked": true, "field": "HouseholdIncome_stringindexer", "alias": "HouseholdIncome_stringindexer", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "No  EnrollReason_stringindexer", "alias": "No  EnrollReason_stringindexer", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "Age_stringindexer", "alias": "Age_stringindexer", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "Gender_stringindexer", "alias": "Gender_stringindexer", "type": "numeric", "position": 8}, {"inherited": true, "checked": true, "field": "CountryOfOrgin_stringindexer", "alias": "CountryOfOrgin_stringindexer", "type": "real", "position": 9}, {"inherited": true, "checked": true, "field": "JobRole_stringindexer", "alias": "JobRole_stringindexer", "type": "real", "position": 10}, {"inherited": true, "checked": true, "field": "WhyChooseForCareerGoals_stringindexer", "alias": "WhyChooseForCareerGoals_stringindexer", "type": "real", "position": 11}, {"inherited": true, "checked": true, "field": "Industry_stringindexer", "alias": "Industry_stringindexer", "type": "real", "position": 12}, {"inherited": true, "checked": true, "field": "InformationConsumed_stringindexer", "alias": "InformationConsumed_stringindexer", "type": "real", "position": 13}], "actual_schema": [{"inherited": true, "checked": true, "field": "ClassName", "alias": "ClassName", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "ClassType", "alias": "ClassType", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "Education", "alias": "Education", "type": "String", "position": 2}, {"inherited": true, "checked": true, "field": "HouseholdIncome", "alias": "HouseholdIncome", "type": "String", "position": 3}, {"inherited": true, "checked": true, "field": "No  EnrollReason", "alias": "No  EnrollReason", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "Age", "alias": "Age", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "Gender", "alias": "Gender", "type": "String", "position": 6}, {"inherited": true, "checked": true, "field": "CountryOfOrgin", "alias": "CountryOfOrgin", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "JobRole", "alias": "JobRole", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "WhyChooseForCareerGoals", "alias": "WhyChooseForCareerGoals", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "Industry", "alias": "Industry", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "YrsOnJob", "alias": "YrsOnJob", "type": "numeric", "position": 11}, {"inherited": true, "checked": true, "field": "InformationConsumed", "alias": "InformationConsumed", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "NetPromotorScore", "alias": "NetPromotorScore", "type": "numeric", "position": 13}], "selected_schema": [], "created_at": "2024-07-27 12:06:28.240000", "originalcount": 1000, "samplecount": 1000, "samplefile": "/FileStore/platform/sampleData/66a4e2c44a48563179e65f07/part-00000-ab766288-cb1a-4ead-8341-99c0c77fcd48-c000.csv", "joinSchema": [], "updated_at": "2024-08-05 21:24:03.688000", "__v": 0, "datacache": 0, "sampleData": [{"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ghana", "JobRole": "Partner", "WhyChooseForCareerGoals": " heard  success stories from friends who do not have IT skills but Colaberry trained them and are now IT professio Not applicablels ", "Industry": "Food and Beverages", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "I prefer not to specify", "CountryOfOrgin": "Nigeria", "JobRole": "None", "WhyChooseForCareerGoals": "None", "Industry": "None", "YrsOnJob": 0, "InformationConsumed": "None", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Partner", "WhyChooseForCareerGoals": "In the near future information technology is a new form of business growth that is my pla Not applicablend strong demand", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "info I found on google", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Currently unemployed", "WhyChooseForCareerGoals": "I did my research and trust that the knowledge is here ", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "The course content.", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Referred to you from a friend  ", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 4, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Real estate agent ", "WhyChooseForCareerGoals": "I would like to have an IT background to help complement what I am studying in college  Economics ", "Industry": "Real Estate", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Truck Driver", "WhyChooseForCareerGoals": "My friend went through the program and he has achieved success since that time And he felt that I could also achieve the same success", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Management  C Level", "WhyChooseForCareerGoals": "success story", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Researcher", "WhyChooseForCareerGoals": "I heard the testimonials and believe in them", "Industry": "Education", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "To improve my career", "Industry": "Education", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Not employed for now", "WhyChooseForCareerGoals": "l listened to success stories and l am at that point of trying to change my life to the better", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I was informed of the prompt assistance help with securing jobs", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "referral from friends", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "None", "ClassType": "None", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ghana", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Better job", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Partner", "WhyChooseForCareerGoals": "I wanted to work from home", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "I want to work by IT database", "Industry": "Education", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Other", "WhyChooseForCareerGoals": "I have a couple of friends going through classes at the moment and a recent graduate who have all given me motivatio Not applicablel information on how to build upon my future", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Intern", "WhyChooseForCareerGoals": "The great feedbacks I got from my closest friends", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I believe in skill set that Ill acquire with the program", "Industry": "Food and Beverages", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard that colaberry is the perfect BOOTCAMP center on data science A Not applicablelytics field and also helps until getting a job ", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I referred by a friend who explained the advantages ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "I have heard from friends who have taken classes great things about your school and I wanted to do that for myself and better my currier", "Industry": "I am currently not employed", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "house wife", "WhyChooseForCareerGoals": "  All the best  feedback from friends ", "Industry": "I am currently not employed", "YrsOnJob": 10, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "Because it is skill oriented ", "Industry": "Entertainment and Leisure", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  JUNE 01 2024 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "It was recommended to me", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Management  C Level", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "None", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Manager", "WhyChooseForCareerGoals": "I need something that I can do while working my current job", "Industry": "Food and Beverages", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "job", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because it is the best data a Not applicablelytics school ", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "positive reviews of the school", "Industry": "Transportation and Delivery", "YrsOnJob": 10, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jul 14 2018 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Database Administrator", "WhyChooseForCareerGoals": "Your school is good a teaching data a Not applicablelytics", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "unemployed", "WhyChooseForCareerGoals": "I heard from my friend that it is one of the best", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because i saw the success stories", "Industry": "Nonprofit", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "WORDS FROM FRIEND", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "heard good reports about the school", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I HEARD GREAT NEWS FROM A  FRIEND", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "For Money", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "pharmacy technician", "WhyChooseForCareerGoals": "learning proces is good  ", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "None", "ClassType": "None", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "I wanted an instructor led ML course", "Industry": "Business Support and Logistics", "YrsOnJob": 7, "InformationConsumed": "None", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "I witnessed the success story of a family member who is a Not applicablelumni of Colaberry She is definitely living the American Dream I was recently let go at my job So this was absolutely the right timing I enrolled", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "delivery", "WhyChooseForCareerGoals": "suggestion from afriend", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I love the fact that colberry is online and flexible payment options are available the fact that colaberry provides you with a one on one mentor to help you through the course work on your resume and help you find a job and still provide mentorship and assistance when you need help at your new job after the course", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "it was cheaper and influence from friends that went to your school", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": " I have seen many practical results which are graduates from your courses", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Owner", "WhyChooseForCareerGoals": "I hear noting but success from all the people I talk to that attended  Colaberry  ", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I have been searching for a school that are excel at data A Not applicablelytics and based on the information I got from friends Colaberry is the best place to equip myself in the area of data a Not applicablelytics ", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "manufacturing technician", "WhyChooseForCareerGoals": "None", "Industry": "Manufacturing", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "Convenience of online learning  and reputation ", "Industry": "Education", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jan 6 2018 IRVING", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "F  or    mer Student", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I have heard good things about the school from a friend", "Industry": "Nonprofit", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Because of the success stories attached to the school", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Good reviews from family members", "Industry": "Government", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "None", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Highly Recommended by a Friend", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "GOOD REVIEW ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "success stories heard from my friends and people around me ", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Rwanda", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "The entire program structure goes beyond the ordi Not applicablery concepts of many educatio Not applicablel Institutions", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Neighbor turned friend    referral ", "Industry": "Insurance", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Cameroon", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because l have a friend who got his certificate here and he now has a great stable job ", "Industry": "Insurance", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Statistics and training", "Industry": "Business Support and Logistics", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Working a little from home", "WhyChooseForCareerGoals": "For the fact that it is the best place that gets me ready for a job", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Sudan", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "My brother in  law attended years ago and hes making great money", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "My friend told me that Colaberry is a good school for data a Not applicablelytics", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "I do not have awork", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "None", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "It was the few interactions with the staff that seemed very genuine. I get the sense that everyone at Colaberry wants to see you become the next success st  or    y and thats exactly what I want. ", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Preparing to re enter the workforce after physical therapy due to an auto accident.", "WhyChooseForCareerGoals": "After considering other options I chose Colaberry because of the work that they have done with military veterans It lets me know that with hard work and focus I ca Not applicablechieve my goal of entering the IT field just as other veterans have done", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Rwanda", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because couple friends told  me about it", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Independent contractor", "WhyChooseForCareerGoals": "very good curriculum ", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because I heard a lot from my friend and his friends who got their job after taking this program", "Industry": "Utilities Energy and Extraction", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "small business entrepreneur", "WhyChooseForCareerGoals": "Familiar faces and the story behind how it all began", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 18 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Feedback from f  or    mer students", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Togo", "JobRole": "Other", "WhyChooseForCareerGoals": "Good feedback from former students", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Driver", "WhyChooseForCareerGoals": "None", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 6}, {"ClassName": "SQLBI Bootcamp  Mar 18 2017 PLANO TX", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Transportation and Delivery", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Students success Stories", "Industry": "Nonprofit", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard a good story about Colaberry", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Other", "WhyChooseForCareerGoals": "To help me understand my courses and further my career", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "info I found on google", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Currently unemployed", "WhyChooseForCareerGoals": "I did my research and trust that the knowledge is here ", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Intern", "WhyChooseForCareerGoals": "heard of many successful stories and the i liked the way of teaching and homeworks", "Industry": "I am currently not employed", "YrsOnJob": 7, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  May 22 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "seemed easy and understandable", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "A friend did the program and loved it I have been wanting to do something similar to this but never knew where to start", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "I want better life.", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I have done some research and data a Not applicablelyst is what I want", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Professio Not applicablelism and high level of experience in problem solving and delivery of required knowledge", "Industry": "Manufacturing", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP   July 13 2019 PLANO", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Success stories", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Structure and help with resume job search", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "None", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "South Sudan", "JobRole": "PARALEGAL", "WhyChooseForCareerGoals": "I chose Colaberry after speaking to a friend whose currently been enrolled for about a month now She shared her experience with me and so far I am impressed I think this school will give me a foot in the door to help me reach my career goal", "Industry": "Business Support and Logistics", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Because I to have a job in IT field", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Success rate", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  Jul 08 2017 PLANO", "ClassType": "Live In  Person", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "friends were there ", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  June 1  2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Speaking to a friend", "Industry": "Insurance", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Tax Preparer", "WhyChooseForCareerGoals": "None", "Industry": "None", "YrsOnJob": 0, "InformationConsumed": "None", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Cameroon", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because I have two close friends who graduated from your school they are working from home and are making good money", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "Great reviews from past students", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 18 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Its well structured and has a good reputation for job placement", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Was referred to by a former studient ", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JULY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "A FRIEND TOLD ME ABOUT THE COURSE", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "REFERRAL FROM CURRENT STUDENT   PAULINE KAMERE", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I was looking for a career to start working towards", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "what people say", "Industry": "Manufacturing", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS  JUNE 01 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "career desires and success stories from people who went through colaberry and their lives changed positively", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "best reviews", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Independent Contractor;Process Server", "WhyChooseForCareerGoals": "We are headed into the digital world if I MAY say everything today you can purchase at the convenience of your device I figured MAYbe it wouldnt hurt to give this a try to be Familiar with technology and turn this occupation into a career", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Training and job opportunities", "Industry": "Business Support and Logistics", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Uganda", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Recommendations from friends", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Due to knowing someone perso Not applicablelly who attended and was successful showed the goal was obtai Not applicableble and tangible as long as i stayed determined ", "Industry": "Insurance", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "None", "ClassType": "None", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "to enhance my skills and knowledge in IT Field ", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Manager", "WhyChooseForCareerGoals": "better pay", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Longer Facebook Posts", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I have heard just extraordi Not applicablery reviews about this establishment and I might want to go to this foundation to future my instruction", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "None", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Veteran assistance", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Vetera Not applicablessistance and job placement assistance", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 10, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "reports from alumni", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "Data Analytics I with MS SQL Server BI  Mar 10 2018 PLANO", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I know someone who completed the course and heard great things about the program", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Webinars", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Was motivated about the successes of the other students", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "stay at home mom", "WhyChooseForCareerGoals": "To advance career", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "GOOD REFERRAL", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Webinars", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard many students get a good paying job and i want to part of it too ", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "SQLBI Bootcamp  May 22 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Referral ", "Industry": "Finance and Financial Services", "YrsOnJob": 10, "InformationConsumed": "None", "NetPromotorScore": 5}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jan 13 2018 PLANO", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "because i hered that is the better choise in here where i live and i proved what i hered ", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "Data Analytics I with MS SQL Server BI  Sep 8 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Other", "WhyChooseForCareerGoals": "To be fi Not applicablencially independent", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Ive seen how it has changed lives", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "60", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Insurance Adjuster Realtor", "WhyChooseForCareerGoals": "The school normalizes data a Not applicablelytics i Not applicableway that has one thinking it is relatable to every business We must simply put in the time to learn its format and techniques ", "Industry": "Insurance", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Transportation and Delivery", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "Studied and friends recommended me", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Correctional officer", "WhyChooseForCareerGoals": "Practical application", "Industry": "Government", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Because I was highly recommended to the school by my friend who graduated from your program successfully", "Industry": "Insurance", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I wanted a career change into the IT business and Colaberry i Not applicableddition to being in the same city where i live it came in on top in my research ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "alumni story", "Industry": "Advertising and MARCHketing", "YrsOnJob": 2, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 18 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Referred from a friend of friend that he knew took the course and made a career change  He is now making really good money just starting out  ", "Industry": "Insurance", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "Recommendation from friend", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 4}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "Owner", "WhyChooseForCareerGoals": "great value for money and time", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Job improvement and salary", "Industry": "Business Support and Logistics", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Advertising and MARCHketing", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "Success story from a friend", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "BI BootCamp  July 23rd 2016 Plano TX", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "great BOOTCAMP curriculum ", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Intern", "WhyChooseForCareerGoals": "Referred by a friend", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  May 22 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Volunteer", "WhyChooseForCareerGoals": "interesting", "Industry": "Business Support and Logistics", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "I like how you guys help your students eve Not applicablefter they graduate ", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Manager", "WhyChooseForCareerGoals": "I heard that it was hands on training supported with videos which was my preferred way of learning", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "Heard you have a proven track record of successfully training and helping students succeed ", "Industry": "I am currently not employed", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "Module and tutorial o Not applicablece a week", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "its growing day by day", "Industry": "Retail and Consumer Durables", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "None", "Industry": "Advertising and MARCHketing", "YrsOnJob": 10, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Its rated very highly", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Researcher", "WhyChooseForCareerGoals": "It seems simple to communicate", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "It comes highly recommended", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "My friend had provided good feedback about the program", "Industry": "Education", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Senior Manager", "WhyChooseForCareerGoals": "Ive heard from others who have taken the course how it changed their life", "Industry": "Automotive", "YrsOnJob": 7, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "IPBC DIRECT SIGN UP  2024", "ClassType": "Self Paced Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "TO improve quality of life", "Industry": "Retail and Consumer Durables", "YrsOnJob": 10, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Inf  or    mation you found on Facebook", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I read that Colaberry has good reviews so want to see and try it myself with a leap of faith", "Industry": "Insurance", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "Colaberry is The nearest school I know ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "currently not working", "WhyChooseForCareerGoals": "the referral spoke highly of the school and the programme", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Manager", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Burundi", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "The good reputation of the school", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Speed Cost Track Record", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "GOOD SUCCESS STORIES", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "None", "Industry": "Food and Beverages", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Reaching my fi Not applicablencial goals in my current career will be very challenging", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "A friend highly recommended your school ", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Team Lead", "WhyChooseForCareerGoals": " testimony of a friend", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "A coworker informed me about the program and I was interested in improving myself as well as learning skills that will prepare me for the future ", "Industry": "Nonprofit", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I enjoyed the open house and I was encouraged by a friend", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I received encouragement from the cousin of a friend who completed the data a Not applicablelytics BOOTCAMP course", "Industry": "Education", "YrsOnJob": 10, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because of the positive feedback i have received", "Industry": "Finance and Financial Services", "YrsOnJob": 10, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Referral from a trusted source ", "Industry": "Utilities Energy and Extraction", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Food and Beverages", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Alumni testimony and success story ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "student", "WhyChooseForCareerGoals": "to improve my life", "Industry": "Agriculture", "YrsOnJob": 1, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "good rewiews", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "curriculum", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "The curriculum is what stood out to me", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Independent contractor   health care", "WhyChooseForCareerGoals": "It was recommended by a friend who is in the IT world", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 9}, {"ClassName": "BI BootCamp  June 14 2014 Richardson", "ClassType": "Live In  Person", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Enhance career in short period of time by learning industry required skills", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Stay home mom and started small business name    Days LLC", "WhyChooseForCareerGoals": "I heard good things about school and my friend got job too", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "It has the best  program and boot camp structure as per advice from a Not applicablelumni its can be done online with flexible schedules Military scholarship and generally welcoming and helpful environment when taking the courses", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "yes", "Industry": "Business Support and Logistics", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Zambia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Affordability", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "I was referred by a friend after doing my research he really did recommend this school", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "good goodwill", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "stay at home mom", "WhyChooseForCareerGoals": "to improve myself and change my career", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "Heard very positive review Class time matches my schedule ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "senior analyst", "WhyChooseForCareerGoals": "I heard of only success stories", "Industry": "None", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "SELF EMPLOYED", "WhyChooseForCareerGoals": "TO IMPROVE AND CHANGE MY SELF FOR BETTER CEREER", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Manager", "WhyChooseForCareerGoals": " Not applicable", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 4}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I chose your school because traditio Not applicablel education in the US is failing kids flat There is a lot of skills gap that traditio Not applicablel    years universities even IVY league one cant fix Colaberry is better than coursera", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Lots of success stories ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "None", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Contractor", "WhyChooseForCareerGoals": "Well organize and oriented details ", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "ClassType": "Live In  Person", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "interview readiness", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "cause of the success stories from friends", "Industry": "Construction Machinery and Homes", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "Other", "WhyChooseForCareerGoals": "On the job training and assisting with job hiring", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "Data Analytics I with MS SQL Server BI  Mar 10 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "My cousin recommended it; its a worthwhile career", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Cote d'Ivoire", "JobRole": "Manager", "WhyChooseForCareerGoals": "Referral ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "Recommended", "Industry": "Government", "YrsOnJob": 2, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Home Maker", "WhyChooseForCareerGoals": "Teaching process", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Real Estate", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I feel it will bring me right where I want to be  and other colleges like universities would just put me in debt  I also love that the school is hands on", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Teacher", "WhyChooseForCareerGoals": "None", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Manager", "WhyChooseForCareerGoals": "Friend referral", "Industry": "Transportation and Delivery", "YrsOnJob": 10, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "because i believe it will help me get a deceit job", "Industry": "Retail and Consumer Durables", "YrsOnJob": 7, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Insurance", "YrsOnJob": 1, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Have read more about the reviews ", "Industry": "Food and Beverages", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Accountant", "WhyChooseForCareerGoals": "None", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "A friends recommendation ", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Senior Manager", "WhyChooseForCareerGoals": " Not applicable", "Industry": "Automotive", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "College Student", "WhyChooseForCareerGoals": "I am hoping to gain experience and hopefully a well paying job afterwards", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Zimbabwe", "JobRole": "Other", "WhyChooseForCareerGoals": "I love the school curriculum and how the studies are structured Also success stories from friends ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "I wanted to change career as I just moved to America from Ca Not applicableda and this seem to be the best choice as my family friend spoke highly of this school ", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Other", "WhyChooseForCareerGoals": "Because colaberry is a reference now to train people and this peoples get a jobs and change live that my goal ", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Hearing about success stories from Colaberry alumni", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Accountant", "WhyChooseForCareerGoals": "The success stories of people who have been through it", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Owner", "WhyChooseForCareerGoals": "because there`s endless opportunities to develop your career ", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Manager", "WhyChooseForCareerGoals": "Technique used for job placement", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Cameroon", "JobRole": "Other", "WhyChooseForCareerGoals": "because of good testimony that my friend gives to me", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because your about helping folks and I couldnt afford $  that the other schools were asking me to pay Also my friend said many great things about your support team ", "Industry": "Government", "YrsOnJob": 2, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Driver ", "WhyChooseForCareerGoals": "My goal career is to work from home", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Manager", "WhyChooseForCareerGoals": "I heard the testimony of my friend ", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Partner", "WhyChooseForCareerGoals": "Perso Not applicablel testimony from a friend and getting more information from customer service", "Industry": "Manufacturing", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Impressive testimonies from a Not applicablelumni", "Industry": "Manufacturing", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "BI BootCamp  Nov 7 2015 Online", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "the way tuition is paid. its a game changer to older school models.", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I made some poor decisions when i was younger and didnt finish school I needed a path out of the restaurant industry ", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 30 2019 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "Because of the testimonials i heard ", "Industry": "Business Support and Logistics", "YrsOnJob": 1, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "working independently working remote", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Recommendation", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Other", "WhyChooseForCareerGoals": "BECAUSE OF SUCCESS STORIES", "Industry": "I am currently not employed", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Convenient relevant and aligns with new job role", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because I can et more support from the team", "Industry": "Manufacturing", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "India", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Alumni referral", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Army", "WhyChooseForCareerGoals": "Career", "Industry": "Government", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Other", "WhyChooseForCareerGoals": "COURSE LENGTH COMPARED TO TRADITIO Not applicableL COLLEGES", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I talked to a Family member who is attending your course and she gave me very good feedback ", "Industry": "Entertainment and Leisure", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "n  or  a", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "texas", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 0}, {"ClassName": "None", "ClassType": "None", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "reputation precedes ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "SQLBI Bootcamp  Mar 18 2017 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "By interacting with alumni and see real change", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "SQL python data a Not applicablelytics", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 10, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Government", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "MARCHketing Director", "WhyChooseForCareerGoals": "It is very structured and it operates a group that is a big motivation", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Service Desk Analyst", "WhyChooseForCareerGoals": "Heard proper guidance and make the student do it ", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "My friend recommended Colaberry", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Senior Manager", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Did not attend school", "HouseholdIncome": "  ", "No  EnrollReason": "Info you found on LinkedIn", "Age": "21", "Gender": "I prefer not to specify", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "It will help me advance my career ", "Industry": "Advertising and MARCHketing", "YrsOnJob": 1, "InformationConsumed": "Webinars", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Sierra Leone", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": " Not applicable", "Industry": "Finance and Financial Services", "YrsOnJob": 0, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Partner", "WhyChooseForCareerGoals": "I was told collabery is the place to be if you  need to succeed in career change", "Industry": "Food and Beverages", "YrsOnJob": 4, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "None", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "Your teaching method It is career based", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "60", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "Manager", "WhyChooseForCareerGoals": "THE WORLD CHANGING GOING DIGITAL AND I NEED KNOWLEDGE IN DIGITAL WORLD", "Industry": "Business Support and Logistics", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Volunteer", "WhyChooseForCareerGoals": "I have heard much about your teaching", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  Mar 18 2017 PLANO TX", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Help getting job after courses completed", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Help with finding job afterwards", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Rwanda", "JobRole": "Other", "WhyChooseForCareerGoals": "My friend went to this school and she had a great experience", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Dispatcher", "WhyChooseForCareerGoals": "My friends learned in Colaberry are a life testimony seeing them reach their goal really motivated me go forward and i hope to see my self there too", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Driver ", "WhyChooseForCareerGoals": "My goal career is to work from home", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "based on success story from another person", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Configuration Analyst II", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 1  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Commission employee ", "WhyChooseForCareerGoals": "Because I wanted hands on training that was very to the point In college everything took longer than it should of and classes that could have been done in weeks if structured properly took a semester or even multiple semesters Colaberrys program is much shorter and allows me to learn the tools and knowledge faster ", "Industry": "Construction Machinery and Homes", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Encouragement from a friend already in class and positive testimonies from YouTube", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Cameroon", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "My husband recommended", "Industry": "Insurance", "YrsOnJob": 1, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Business Analyst ", "WhyChooseForCareerGoals": "I hear good stories from a fiend regarding the training program and possible job replacement opportunity ", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "ClassType": "Live In  Person", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Grate reviews", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "referral from previous student", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Congo Democratic Republic of the", "JobRole": "Partner", "WhyChooseForCareerGoals": "want to lear Not applicablend your class time", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "i choose colaberry because i will acquire the industry oriented knowledge and skills so that i can hit the ground running", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "referral from friends", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Career goal", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 4, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  June 1  2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Success stories and I know someone who attended", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "Friend referred more opportunity ", "Industry": "Retail and Consumer Durables", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "China", "JobRole": "Analyst", "WhyChooseForCareerGoals": "None", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "   To fill the gap in knowledge what the employer needs and what I have    Communication challenges specially in interviews", "Industry": "Government", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "ClassType": "Live In  Person", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": " i was really impressed my friend who took his career in colliery ", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "A friend convinced me of its benefits", "Industry": "Construction Machinery and Homes", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Morocco", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "For better job position ", "Industry": "Entertainment and Leisure", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Correctional officer", "WhyChooseForCareerGoals": "my expectation to succeed", "Industry": "Government", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "Cause of the stories I heard ", "Industry": "Food and Beverages", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard from one of my friend  former student of Colaberry  it is a good school ", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Student", "WhyChooseForCareerGoals": "Because my friend graduated your class and now is living a Not applicablemazing life with well paid job He inspired me to join the class ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Perso Not applicablel experience from a close friend", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  May 22 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I JUST HEARD A GOOD THINGS ABOUT THE SCHOOL", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Webinars", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "A FRIEND INTRODUCED ME", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "None", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Referred by a successful Alumni I want to be like him He is doing great", "Industry": "Business Support and Logistics", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "None", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard that colaberry is the perfect BOOTCAMP center on data science A Not applicablelytics field and also helps until getting a job ", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Mexico", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Recommendation ", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Friend", "Industry": "Food and Beverages", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "I prefer not to specify", "CountryOfOrgin": "Nigeria", "JobRole": "unemployed", "WhyChooseForCareerGoals": "hands  on", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Longer Facebook Posts", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "A friend convinced me", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "I want to pursue my desire to become involved in Data Science as i have worked as a database a Not applicablelyst for some time in the past And also to gain knowledge to have a professio Not applicablel path to support my self and my family", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "Success Stories Scholarship", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "None", "ClassType": "None", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Still deciding  Heard from friend that there are good results ", "Industry": "Construction Machinery and Homes", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Owner", "WhyChooseForCareerGoals": "Because of the high level of job placement", "Industry": "Entertainment and Leisure", "YrsOnJob": 7, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Self employed", "WhyChooseForCareerGoals": "I want to get the skill to functio Not applicables a Not applicable Not applicablelyst", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "i like that it offers an online program", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Good curriculum  Good job placements  ", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "None", "ClassType": "None", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Management  C Level", "WhyChooseForCareerGoals": "Referral", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 4, "InformationConsumed": "Webinars", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "home maker", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Friend referral", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 18 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "per testimony you help with employment ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Manager", "WhyChooseForCareerGoals": "I  heard good recommendations about the school", "Industry": "Advertising and MARCHketing", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Utilities Energy and Extraction", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because I want to elevate my career goals and opportunities and this seems like a legit and good place to achieve that  ", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Oct 30 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "its has a track record of success and career placements", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Rwanda", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "seen other people make it", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Congo Democratic Republic of the", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "I love IT and a want to get some experience in this industry", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "BI BootCamp  Jan 3 2015 Richardson TX", "ClassType": "Live In  Person", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "improve my career and income", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Testimonials from Past Students outlining how their  experience at Colaberry contributed to their career success.", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I am doing a career switch to Data A Not applicablelytics I am looking for a school that will help me improve my data a Not applicablelysis skills and prepare me to ace the job interviews", "Industry": "Automotive", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because it convenient for me  ", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "60", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "self employed", "WhyChooseForCareerGoals": "I have been told that it was a good school and it has lots of information", "Industry": "Entertainment and Leisure", "YrsOnJob": 2, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  July 20  2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "a great referral from a friend ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "India", "JobRole": "unemployeed", "WhyChooseForCareerGoals": "IDK ", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Driver ", "WhyChooseForCareerGoals": "My goal career is to work from home", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Great review from a friend", "Industry": "Real Estate", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JUNE 29 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Success stories", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Uganda", "JobRole": "Other", "WhyChooseForCareerGoals": "Gain new skill sets", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I picked this school because of the success stories I heard from alumni students", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "friends results", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Because it was the first school I saw that not only offers continued education for professio Not applicablels but also for people who have no prior IT experience I Not applicableddition you make it affordable for people to get this education by providing payment plans early bird specials etc  Fi Not applicablelly the job placement aspect of it along with the portfolio creation is what made this most appealing You are really helping your students not like some of the other places that ripped people off back in the late     s early   s ", "Industry": "Finance and Financial Services", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because of the job guarantee ", "Industry": "Finance and Financial Services", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 07 2019 PLANO", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "matches the current IT demand field", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "None", "ClassType": "None", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "none", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Brewer", "WhyChooseForCareerGoals": "It seems like the alumni network is a valid way to actually get a job  Seems like a lot of code schools just want your money", "Industry": "Food and Beverages", "YrsOnJob": 2, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "BECAUSE YOUR PROGRAM HAS WHAT I NEED TO ACHIEVE MY LONG TERM CAREER IN IT", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "career change", "Industry": "Automotive", "YrsOnJob": 7, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Uganda", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "friend", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Close friends have been successful using this program", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Other", "WhyChooseForCareerGoals": "Success stories", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "None", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "None", "WhyChooseForCareerGoals": "None", "Industry": "None", "YrsOnJob": 0, "InformationConsumed": "None", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "To have a better life to make more money", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Other", "WhyChooseForCareerGoals": "mentorship program", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "None", "ClassType": "None", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Good reviews", "Industry": "Manufacturing", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Full Scholarship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Tunisia", "JobRole": "Other", "WhyChooseForCareerGoals": "FULL SCHOLARSHIP", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Webinars", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Zimbabwe", "JobRole": "Other", "WhyChooseForCareerGoals": "I felt the curriculum would help me become a data engineer  ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "Someone I know had completed a course through Colaberry", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Ive seen others success with your program", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Housemaker", "WhyChooseForCareerGoals": "It helps individual to build up his her career in the IT sector ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I want to change careers and look for something long term with job security", "Industry": "Insurance", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "because of your methodology ", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard about people successful ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jul 14 2018 PLANO", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "change of career", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Longer Facebook Posts", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "success stories of cola berry all over the country", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "SHORT TIME AND IPBC", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 1, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "because of my friend who said good things about your school ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 2}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Career change and I would like to explore the IT industry ", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard from friend Colaberry is best school", "Industry": "Finance and Financial Services", "YrsOnJob": 10, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  May 22 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "independent contractor", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "None", "NetPromotorScore": 10}, {"ClassName": "Data Analytics I with MS SQL Server BI  Sep 8 2018 IRVING", "ClassType": "Live In  Person", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "21", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "They have helped my cousi Not applicables well as others  get into a better position So I believe they will do the same for me", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "To improve my carrier and life standard", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "get knowledge  and earn money", "Industry": "Advertising and MARCHketing", "YrsOnJob": 2, "InformationConsumed": "Longer Facebook Posts", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "because my friend studied in your school and he is now successful", "Industry": "Food and Beverages", "YrsOnJob": 1, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 26 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "from freinds", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Partner", "WhyChooseForCareerGoals": "Career Shifting I choose this school due to a former student graduating and landing a solid job with an income increase", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard all good news about Colaberry the friends went there talks about it a lot and they suggested me to register and learn ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Not working", "WhyChooseForCareerGoals": "Colaberry made a huge difference in my life a few years ago", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "60", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "The short answer is that you offered me unbelievable fi Not applicablencial help And you are offering a lucrative course data a Not applicablelytics ", "Industry": "Insurance", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Reputatio Not applicablend success stories from Alumni and more so people I know perso Not applicablelly", "Industry": "Manufacturing", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "A friend told me about it", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Independent Contractor Taxi Driver ", "WhyChooseForCareerGoals": "I believe Colaberry is one of the best schools in technology field  ", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "TO GET KNOWLEDGE ON THE IT WORLD", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "to upgrade my career", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 7}, {"ClassName": "None", "ClassType": "None", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Owner", "WhyChooseForCareerGoals": "Because of the good reviews ", "Industry": "Education", "YrsOnJob": 4, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JUNE 01 2024 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Senior Manager", "WhyChooseForCareerGoals": "Referrals from close Friends and how it has changed their lives", "Industry": "Retail and Consumer Durables", "YrsOnJob": 7, "InformationConsumed": "Webinars", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 07 2019 PLANO", "ClassType": "Live In  Person", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "improve my career and income", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jul 14 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": " Not applicable", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Webinars", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "India", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Alumni referral", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Cote d'Ivoire", "JobRole": "Self employee computer technician", "WhyChooseForCareerGoals": "I chose Colaberry to help reach my career because I heard a lot of good from people who took class with the school", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Worked in the past in IT. Current home maker.", "WhyChooseForCareerGoals": "I have a friend who successfully completed the course and she suggested that it was a good option if I have to get into the IT job MARCHket", "Industry": "I am currently not employed", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 16 2019 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Manager", "WhyChooseForCareerGoals": "Colleague told me", "Industry": "Real Estate", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "recomended by a friend", "Industry": "Entertainment and Leisure", "YrsOnJob": 10, "InformationConsumed": "None", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Flexibility and overall sense of I want you to succeed that I felt from the site and w  or    d  of  mout.", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Perso Not applicablel recommendation from a trust worthy friend and a desire to move into a more applicable growing industry while learning new skills that I can one day use to help others ", "Industry": "Insurance", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "unemployed", "WhyChooseForCareerGoals": "referred by a friend", "Industry": "Finance and Financial Services", "YrsOnJob": 4, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "None", "YrsOnJob": 10, "InformationConsumed": "None", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  Jul 08 2017 PLANO", "ClassType": "Live In  Person", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ghana", "JobRole": "Intern", "WhyChooseForCareerGoals": "I choose colaberry because i wanted a change in my life and that of my Family", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Because of the practical training approach to deliver graduates who are ready for the job MARCHket", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "Data Analytics I with MS SQL Server BI  Sep 15 2018 PLANO", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Inf  or    mation you found on Facebook", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Food and Beverages", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Owner", "WhyChooseForCareerGoals": "Heard good things about the program from a former student I was especially motivated by the job preparatio Not applicablend support aspect of the Colaberry program", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I was inspired by a friend who also attended Colaberry ", "Industry": "Food and Beverages", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Database admin", "WhyChooseForCareerGoals": "Strong reference from a friend ", "Industry": "Nonprofit", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "None", "WhyChooseForCareerGoals": "Because it seems interesting and I heard theres a good future in it", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "flexibility of training", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS   AUGUST 26  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Because the success story associated with it", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I came to know that Colaberry is the best place to be Data Scientist ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Healthcare   Ct Technologist", "WhyChooseForCareerGoals": "referral", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 6}, {"ClassName": "None", "ClassType": "None", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Partner", "WhyChooseForCareerGoals": "because of the good reviews and the content", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "The fact that I can learn new skill i Not applicableshort period a time", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "Data Analytics I with MS SQL Server BI  Nov 17 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Positive feedback from alumni", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 0}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Because it seems that I didnt have anyone guide me or take interest in my career Based upon the great reviews  I was convinced that this is what I needed", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "I like IT", "Industry": "Insurance", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "BI BootCamp  Feb 22 2014 Richardson", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I have hear success stories from former students and the guidance provided to obtai Not applicablejob is not really found with other schools", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 4, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "A friend introduced it to me and I listened to the success stories from the site", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Transitioning Veteran", "WhyChooseForCareerGoals": "The Data A Not applicablelytics focus program the reviews on course report the dates and times for the program and the military scholarship", "Industry": "Government", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": " Not applicable", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Webinars", "NetPromotorScore": 7}, {"ClassName": "Data Analytics I with MS SQL Server BI  Mar 10 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ghana", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Previous student", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 7 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I have a fried who is currently in Colaberry and also heard of some success Stories", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Medical technician", "WhyChooseForCareerGoals": "Because I had a lot of positive feedback about the school ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "40", "Gender": "I prefer not to specify", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I know people who went through the program and are doing well", "Industry": "Finance and Financial Services", "YrsOnJob": 10, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "home maker", "WhyChooseForCareerGoals": "To learn data tools ", "Industry": "I am currently not employed", "YrsOnJob": 10, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  OCTOBER 28  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Employer", "Age": "60", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Timing", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Structure and help with resume job search", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS  MARCH 30 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Unemployed", "WhyChooseForCareerGoals": "Good reputation from the few people i have interreacted with over the few months ", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Webinars", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "independent ", "WhyChooseForCareerGoals": "alumni", "Industry": "Transportation and Delivery", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Colaberry gets straight to the point If I was to choose a major in the same field at a university it would take me longer", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "It works", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "None", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "yes", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "BI BootCamp  Nov 7 2015 Online", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "India", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I took that Colaberry as one of my friend told me about it and one day we went to Boston MA joined the class and it is now being my career goal because I have a dream to work in this field since I was high school ", "Industry": "Manufacturing", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "i heard success stories", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Manager", "WhyChooseForCareerGoals": "None", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Webinars", "NetPromotorScore": 8}, {"ClassName": "Data Analytics I with MS SQL Server BI  May 5 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Zimbabwe", "JobRole": "RN", "WhyChooseForCareerGoals": "Friend", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I trusted that the information shared Colaberry Alumin shared with me was credible", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "That colabery would fulfil dreams ", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Currently i am unemployed", "WhyChooseForCareerGoals": "i hear about colaberry a lot of good things the school is very supportive ", "Industry": "I am currently not employed", "YrsOnJob": 0, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Manager", "WhyChooseForCareerGoals": "Assistance is job placement", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 14 2019 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "Colaberry will help me get a carrier path The tuition is also affordable", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Zimbabwe", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "reviews on social media", "Industry": "Food and Beverages", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Volunteer", "WhyChooseForCareerGoals": "Achieve a new career", "Industry": "Education", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP JULY 29  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "I prefer not to specify", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "Heard good things about Colaberry from friends", "Industry": "Government", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Other", "WhyChooseForCareerGoals": "Its short term training and well known", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Other", "WhyChooseForCareerGoals": "Duration of courses and class", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "None", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "HAVE HEARD A LOT OF GOOD FEEDBACK ABOUT COLABBERY", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "None", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Knowing a couple of people who have successfully completed the course and have gotten placed Seeing the way their lives have changed inspired me to do something more with my life and career!", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Senior Manager", "WhyChooseForCareerGoals": "I have two cousins that graduated from this program", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Because of the testimonies online about the particular school program", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Dec 12 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Other", "WhyChooseForCareerGoals": "I have heard so many people are doing better after completing SQL from Colaberry That makes me interested", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "I have heard good things", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Burundi", "JobRole": "Owner", "WhyChooseForCareerGoals": "it has a good reputatio Not applicablend i loved the way you take care of your students untill they are good to go for jobd", "Industry": "Manufacturing", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 22 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "None", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 11 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Partner", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 4, "InformationConsumed": "Webinars", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Referral", "Industry": "Government", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  SEPTEMBER 30  2023 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Uganda", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "It helped a friend of mine reach his goals", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Manager", "WhyChooseForCareerGoals": "Provided a scholarship opportunity", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "na", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "None", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Manager", "WhyChooseForCareerGoals": "It was recommended by a family member who knows someone that completed the course It came highly recommended", "Industry": "Business Support and Logistics", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  DECEMBER 9  2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Customer Service Representative", "WhyChooseForCareerGoals": "Good Reputation ", "Industry": "Retail and Consumer Durables", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "The school has a great reputatio Not applicablend the goal is to help people wi Not applicablejob as long as one puts in the work I know its a guarantee", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Sudan", "JobRole": "Manager", "WhyChooseForCareerGoals": "referral feedback about job hunting ", "Industry": "Business Support and Logistics", "YrsOnJob": 7, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Full time Student", "WhyChooseForCareerGoals": "I heard it was the quickest place to get your data a Not applicablelytics diploma degree and thats what I needed in my life at that point in time So here I am", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DECEMBER 3 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Diversity", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "i want to lear Not applicablend add valuable skill", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Partner", "WhyChooseForCareerGoals": "success story", "Industry": "Construction Machinery and Homes", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Seeing results ", "Industry": "Manufacturing", "YrsOnJob": 4, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 9}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Was a Financial Analyst currently out of Job", "WhyChooseForCareerGoals": "THE TESTIMONIALS OF PAST STUDENT", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "SQLBI Bootcamp  Jun 26 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Canada", "JobRole": "Management  C Level", "WhyChooseForCareerGoals": "A referral from a friend", "Industry": "Finance and Financial Services", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  June 1  2019 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Individuals who had gone through the course and shared their st  or    ies.", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Had good reviews and people had their stories to share", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "peoples success st  or    ies", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "nurse", "WhyChooseForCareerGoals": "everyone i talked to referred me to this school", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "None", "HouseholdIncome": "  ", "No  EnrollReason": "None", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "no", "Industry": "Government", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 5}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ghana", "JobRole": "Certified nurses aide ", "WhyChooseForCareerGoals": "A friend recommended it to me", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  MAR 6 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Inf  or    mation I found from friend.", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Yes ", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "The reviews and testimonies", "Industry": "Telecommunications Technology Internet and Electronics", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "Data Analytics I with MS SQL Server BI  Jul 14 2018 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "60", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "It was the only opportunity i had", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Long video clips\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Having got inf  or    mation from someone whos got a decent job after taking your course.", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Listening to other peoples stories", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 30 2019 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Referral", "Industry": "Retail and Consumer Durables", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  DEC 4 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Currently Not working", "WhyChooseForCareerGoals": "I have learnt Data science by myself but I do not have direct experience in IT industry I want to build my portfolio and network for career growth Looking forward to data a Not applicablelytics as first step toward industry", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP   Mar 23 2019 PLANO", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "50", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Learn IT processess", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 07 2019 PLANO", "ClassType": "Live In  Person", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Rwanda", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "Because of Alumni Success The School has a good rating and I wanted to do data science", "Industry": "Automotive", "YrsOnJob": 4, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "A friend highly recommended your school ", "Industry": "Transportation and Delivery", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Nov 2 2019 PLANO", "ClassType": "Live In  Person", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Education", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "From  the feedback I get from my friends who have attended the program in the  past indicates the program is quite rich and  creates a good launching pad into the  MARCHket especially for beginners like me", "Industry": "Government", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Senior Tech Computer Desktop Support", "WhyChooseForCareerGoals": "To better advance in my career by identifying the best opportunities of employment", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 1, "InformationConsumed": "Webinars", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "21", "Gender": "Female", "CountryOfOrgin": "Mexico", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I want practical skills soon", "Industry": "I am currently not employed", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS  APRIL 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Housewife", "WhyChooseForCareerGoals": "I chose Colaberry School of Data A Not applicablelytics  Colaberry SODA  because it perfectly aligns with my career aspirations and offers the ideal platform to transition into the dy Not applicablemic field of data a Not applicablelytics As someone with a background in Executive Assisting and Project Ma Not applicablegement Ive developed a keen eye for detail a love for problem  solving and a k Not applicableck for optimizing processes These skills coupled with my passion for math and a Not applicablelytics make data a Not applicablelytics a  Not applicabletural progression for me  What drew me specifically to Colaberry SODA is its reputation for fostering a comprehensive understanding of both the theoretical and practical aspects of data a Not applicablelysis The curriculums emphasis on real  world applications and hands  on experience will not only equip me with the necessary technical skills but also provide me with the confidence to tackle complex a Not applicablelytical challenges i Not applicableny industry  Moreover the flexibility offered by Colaberry SODA including remote learning options is incredibly appealing to me As someone who values the freedom to work remotely and pursue my passions outside of work this flexibility ensures that I ca Not applicablechieve a healthy work  life balance without compromising on my professio Not applicablel development  Furthermore the fact that my sister husband and brother  in  law have all enrolled in Colaberry SODA speaks volumes about the quality of educatio Not applicablend the opportunities it offers Both my sister and husband are Colaberry SODA alumni and witnessing their successful transition into the field of data a Not applicablelytics has only solidified my decision to choose Colaberry SODA for my own career journey  Ultimately I believe that Colaberry SODA will not only help me transition into a rewarding career in data a Not applicablelytics but also provide me with the tools and opportunities to excel i Not applicablerapidly evolving industry while maintaining the lifestyle I desire", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Aug 28 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "To be successful and to reach my IT career goal ", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 11 2020 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Mexico", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "Great instructors I also have a lot of friends that have finished the course and have a great jobs Also its a short term course and not a    year university I also am enrolled in college I attend Colin Community College  ", "Industry": "Manufacturing", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 26 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Based on strong feedbacks", "Industry": "Insurance", "YrsOnJob": 2, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Business Development Analyst", "WhyChooseForCareerGoals": "recommended", "Industry": "Food and Beverages", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 29 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "NURSE", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard this is a great program", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Open House Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Kenya", "JobRole": "Student", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "None", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "the success stories   feedback", "Industry": "Insurance", "YrsOnJob": 2, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "because to have easey life", "Industry": "Manufacturing", "YrsOnJob": 1, "InformationConsumed": "Weekly Emails\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 25 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Intern", "WhyChooseForCareerGoals": "my friend give me good advice about your platform", "Industry": "Government", "YrsOnJob": 1, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Job oriented", "Industry": "Advertising and MARCHketing", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Ethiopia", "JobRole": "Owner", "WhyChooseForCareerGoals": "From what i heard and understand your teaching approach is very sought after and essential remedy to my shortcomings", "Industry": "Transportation and Delivery", "YrsOnJob": 7, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jul 31 2021 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "I couldnt find any other school ", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Counselor", "WhyChooseForCareerGoals": "None", "Industry": "Education", "YrsOnJob": 7, "InformationConsumed": "None", "NetPromotorScore": 3}, {"ClassName": "DATA ANALYTICS BOOTCAMP  May 30 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Growth and development ", "Industry": "Insurance", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 7}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JULY 30 2022 ONLINE", "ClassType": "Live Online", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Truck Driver", "WhyChooseForCareerGoals": "I was referred by a friend and liked what I saw", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Information Technology", "WhyChooseForCareerGoals": "Because I am a vetera Not applicablend this school cares about veterian", "Industry": "I am currently not employed", "YrsOnJob": 2, "InformationConsumed": "Short video clips such as Youtube videos", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I think its the best fit for me", "Industry": "Real Estate", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  Jan 14 2017 IRVING", "ClassType": "Live In  Person", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "I was convinced that it would serve as my ticket out of the epitome of a dead  end job", "Industry": "Airlines and Aerospace including Defense", "YrsOnJob": 10, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 7 2020 PLANO", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "On campus classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "None of the above", "JobRole": "Other", "WhyChooseForCareerGoals": "None", "Industry": "Finance and Financial Services", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 4}, {"ClassName": "DATA ANALYTICS  JANUARY 27 2024 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "in between jobs", "WhyChooseForCareerGoals": "alumini", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Success Story Blog Posts\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Apr 25 2020 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "21", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Individual Contributor", "WhyChooseForCareerGoals": "its more in to computer science and i feel like its the right place to start my future goals with colabery ", "Industry": "Manufacturing", "YrsOnJob": 4, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  AUGUST 27 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Advertising", "Age": "21", "Gender": "Male", "CountryOfOrgin": "Eritrea", "JobRole": "Manager", "WhyChooseForCareerGoals": "None", "Industry": "Business Support and Logistics", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  APRIL 2 2022 ONLINE", "ClassType": "Live Online", "Education": "   years of college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "unemployeed", "WhyChooseForCareerGoals": "None", "Industry": "Food and Beverages", "YrsOnJob": 7, "InformationConsumed": "Short Facebook Posts\u00a0", "NetPromotorScore": 9}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 16 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I have heard testimonies about your school", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 10}, {"ClassName": "SQLBI Bootcamp  April 24 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Ethiopia", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I have heard a lot of good reviews both online and from a friend of mine who took the class", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 2, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Community", "Age": "40", "Gender": "Female", "CountryOfOrgin": "Eritrea", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I heard from my friends that you encourage them to do their best and to work hard", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Sep 25 2021 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Female", "CountryOfOrgin": "Kenya", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "Positive Feedback from friends", "Industry": "Transportation and Delivery", "YrsOnJob": 2, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "None", "ClassType": "None", "Education": "   year of college", "HouseholdIncome": "  ", "No  EnrollReason": "i am a success st  or    y", "Age": "30", "Gender": "Male", "CountryOfOrgin": "Cameroon", "JobRole": "DBAReport Developer", "WhyChooseForCareerGoals": "I am a Not applicablelumni", "Industry": "Transportation and Delivery", "YrsOnJob": 4, "InformationConsumed": "Short blog articles\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JUNE 4 2022 ONLINE", "ClassType": "Live Online", "Education": "Completed graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "60", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Team Lead", "WhyChooseForCareerGoals": "None", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 4, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  FEB 25 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "40", "Gender": "Female", "CountryOfOrgin": "India", "JobRole": "Not employed ", "WhyChooseForCareerGoals": "Have come to understand how important a data a Not applicablelyst is i Not applicablen organization ", "Industry": "I am currently not employed", "YrsOnJob": 10, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 6}, {"ClassName": "DATA ANALYTICS BOOTCAMP  OCTOBER 1 2022 ONLINE", "ClassType": "Live Online", "Education": "Graduated from high school", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "30", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Hourly Employee", "WhyChooseForCareerGoals": "I liked your program and heard many good things about you", "Industry": "Retail and Consumer Durables", "YrsOnJob": 1, "InformationConsumed": "Meet The Instructor Events\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Jan 28 2023 ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "Nigeria", "JobRole": "Management  C Level", "WhyChooseForCareerGoals": "because of testimonies", "Industry": "Healthcare and Pharmaceuticals", "YrsOnJob": 7, "InformationConsumed": "Daily Emails\u00a0", "NetPromotorScore": 10}, {"ClassName": "DATA ANALYTICS BOOTCAMP  JAN 29 2022  ONLINE", "ClassType": "Live Online", "Education": "Graduated from college", "HouseholdIncome": "  ", "No  EnrollReason": "Online classes", "Age": "50", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Development Specialist", "WhyChooseForCareerGoals": "Because I believe that your organization is the best place for me to receive quality training to achieve my desired career change ", "Industry": "Nonprofit", "YrsOnJob": 7, "InformationConsumed": "Industry ReportsorImportant Relevant Content\u00a0", "NetPromotorScore": 8}, {"ClassName": "DATA ANALYTICS BOOTCAMP  Mar 14 2020 ONLINE", "ClassType": "Live Online", "Education": "Some graduate school", "HouseholdIncome": "  ", "No  EnrollReason": "Friend  or  close relationship", "Age": "40", "Gender": "Male", "CountryOfOrgin": "United States", "JobRole": "Other", "WhyChooseForCareerGoals": "Its well structured and has a good reputation for job placement", "Industry": "I am currently not employed", "YrsOnJob": 1, "InformationConsumed": "Longer form blog articles\u00a0", "NetPromotorScore": 8}], "stage_runningstate": "executed", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": "{}"}}, {"_id": "66a4e2c44a48563179e65f09", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/demographicsdatacolaberrypersonalized.csv", "in": ["66a4e2c44a48563179e65f08"], "out": [], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "personalizedrecommendations_Clustering", "comment": "", "pipeline_id": "66a4e2c44a48563179e65f04", "sub_type": "clustering", "stage_type": "ml", "mlCategory": "Clustering", "stage_attributes": {"autoClustering": 1, "originalfile": "/FileStore/platform/uploadedSourceFiles/demographicsdatacolaberrypersonalized.csv", "model": "Kmeans", "TrainingPercent": 100, "totalClusters": 2}, "status": "new", "position": {"x": 187, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/ml-engine/cluster.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 14, "fill": "#333333", "type": "aml", "text": "Clustering-AutoML", "slug": "cluster", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"autoClustering": 1, "originalfile": "/FileStore/platform/uploadedSourceFiles/demographicsdatacolaberry.csv", "model": "Kmeans", "TrainingPercent": 100, "totalClusters": 2}, "_id": "66a4e2c44a48563179e65f09"}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1c3", "field": "YrsOnJob", "alias": "YrsOnJob", "type": "numeric", "position": "0"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1c4", "field": "NetPromotorScore", "alias": "NetPromotorScore", "type": "numeric", "position": "1"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1c5", "field": "ClassName_stringindexer", "alias": "ClassName_stringindexer", "type": "real", "position": "2"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1c6", "field": "ClassType_stringindexer", "alias": "ClassType_stringindexer", "type": "numeric", "position": "3"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1c7", "field": "Education_stringindexer", "alias": "Education_stringindexer", "type": "real", "position": "4"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1c8", "field": "HouseholdIncome_stringindexer", "alias": "HouseholdIncome_stringindexer", "type": "numeric", "position": "5"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1c9", "field": "No  EnrollReason_stringindexer", "alias": "No  EnrollReason_stringindexer", "type": "real", "position": "6"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1ca", "field": "Age_stringindexer", "alias": "Age_stringindexer", "type": "real", "position": "7"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1cb", "field": "Gender_stringindexer", "alias": "Gender_stringindexer", "type": "numeric", "position": "8"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1cc", "field": "CountryOfOrgin_stringindexer", "alias": "CountryOfOrgin_stringindexer", "type": "real", "position": "9"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1cd", "field": "JobRole_stringindexer", "alias": "JobRole_stringindexer", "type": "real", "position": "10"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1ce", "field": "WhyChooseForCareerGoals_stringindexer", "alias": "WhyChooseForCareerGoals_stringindexer", "type": "real", "position": "11"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1cf", "field": "Industry_stringindexer", "alias": "Industry_stringindexer", "type": "real", "position": "12"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1d0", "field": "InformationConsumed_stringindexer", "alias": "InformationConsumed_stringindexer", "type": "real", "position": "13"}], "actual_schema": [{"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1b5", "field": "ClassName", "alias": "ClassName", "type": "String", "position": "0"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1b6", "field": "ClassType", "alias": "ClassType", "type": "String", "position": "1"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1b7", "field": "Education", "alias": "Education", "type": "String", "position": "2"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1b8", "field": "HouseholdIncome", "alias": "HouseholdIncome", "type": "String", "position": "3"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1b9", "field": "No  EnrollReason", "alias": "No  EnrollReason", "type": "String", "position": "4"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1ba", "field": "Age", "alias": "Age", "type": "String", "position": "5"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1bb", "field": "Gender", "alias": "Gender", "type": "String", "position": "6"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1bc", "field": "CountryOfOrgin", "alias": "CountryOfOrgin", "type": "String", "position": "7"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1bd", "field": "JobRole", "alias": "JobRole", "type": "String", "position": "8"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1be", "field": "WhyChooseForCareerGoals", "alias": "WhyChooseForCareerGoals", "type": "String", "position": "9"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1bf", "field": "Industry", "alias": "Industry", "type": "String", "position": "10"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1c0", "field": "YrsOnJob", "alias": "YrsOnJob", "type": "numeric", "position": "11"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1c1", "field": "InformationConsumed", "alias": "InformationConsumed", "type": "String", "position": "12"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66b142f07702d43f3c95b1c2", "field": "NetPromotorScore", "alias": "NetPromotorScore", "type": "numeric", "position": "13"}], "selected_schema": [], "created_at": "2024-07-27 12:06:28.241000", "originalcount": 1000, "samplecount": 1000, "samplefile": "/FileStore/platform/sampleData/66a4e2c44a48563179e65f07/part-00000-ab766288-cb1a-4ead-8341-99c0c77fcd48-c000.csv", "joinSchema": [], "updated_at": "2024-08-05 21:24:03.230000", "__v": 0, "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": {}}}]